{'cluster': [{'key': 16, 'parent': -1, 'tfidf_word': 'io date flush permission digest msg restarter code tunnel ip ', 'tfidf_method': 'fetch_win32_permissions new_id test_extract_date_from_naive test_extract_dates test_parse_ms_precision _launch test_kernelapp_lifecycle config update_msg_type restart_kernel ', 'lda_word': ' test,kernel,spec,get,init,', 'lda_method': ' init,kernelspec,kernelspecmanager,get_tcp_km,multikernelmanager,', 'lsi_word': ' kernel,start,spec,manager,shutdown,', 'lsi_method': ' msg,extract_header,shutdown_kernel,msg_header,msg_id,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 36, 'files': ['channels.py', 'threaded.py', 'channelsabc.py', 'manager.py', 'multikernelmanager.py', 'managerabc.py', 'consoleapp.py', 'session.py', 'connect.py', 'jsonutil.py', 'kernelspec.py', 'signalkernel.py', 'launcher.py', 'win_interrupt.py', 'tunnel.py', 'test_adapter.py', 'client.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'localinterfaces.py', 'runapp.py', 'kernelspecapp.py', 'restarter.py', 'utils.py', 'test_client.py', 'test_session.py', 'test_ssh.py', 'test_kernelapp.py', 'test_connect.py', 'test_localinterfaces.py', 'test_multikernelmanager.py', 'test_kernelspec.py', 'test_jsonutil.py', 'test_manager.py', 'forward.py'], 'execution_path_count': 911, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)', '133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '136': 'stop(channels.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '215': '__init__(consoleapp.py)', '453': '__init__(session.py)', '716': '__init__(threaded.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '392': '__init__(multikernelmanager.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '81': '__init__(channels.py)', '107': '__init__(channels.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '278': '__init__(kernelspec.py)', '509': '__init__(signalkernel.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '211': 'ports(connect.py)', '198': '_session_default(connect.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '713': 'IOLoopThread(threaded.py)', '724': 'start_channels(threaded.py)', '720': 'start(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '463': '_key_default(session.py)', '462': '_key_changed(session.py)', '470': '_signature_scheme_changed(session.py)', '484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '50': 'adapt(adapter.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '246': '_record_started(kernelapp.py)', '53': '__call__(adapter.py)', '55': 'update_header(adapter.py)', '56': 'update_metadata(adapter.py)', '57': 'update_msg_type(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '47': 'V4toV5(adapter.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '434': 'RunApp(runapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '220': 'init_kernel_client(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '158': 'get_shell_msg(client.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '355': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '365': 'signal_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '372': 'interrupt_kernel(managerabc.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '711': 'start(utils.py)', '735': 'start(threaded.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '345': '_kernel_spec_manager_default(manager.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '337': '_close_control_socket(manager.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '326': '_launch_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '327': 'finish_shutdown(manager.py)', '202': 'cleanup_random_ports(connect.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '168': 'shell_channel(client.py)', '723': 'ioloop(threaded.py)', '206': 'connect_shell(connect.py)', '164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '160': 'hb_channel(client.py)', '154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '80': 'ZMQSocketChannel(channels.py)', '85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '102': 'hb_channel(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '231': 'start_restarter(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '228': 'start_restarter(manager.py)', '111': 'get_msgs(channels.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '712': 'stop(utils.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)', '554': 'test_inspect(test_client.py)', '551': 'test_complete(test_client.py)', '555': 'test_kernel_info(test_client.py)', '550': 'test_comm_info(test_client.py)', '556': 'test_shutdown(test_client.py)', '678': 'setUp(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '680': 'test_args(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '701': 'test_random_ports(test_ssh.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '709': '__enter__(utils.py)', '710': '__exit__(utils.py)', '704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)', '608': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '519': 'setUp(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '572': 'initialize(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)', '562': 'test_find_connection_file_local(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '634': 'test_load_ips(test_localinterfaces.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '586': 'env(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '635': 'test_connection_file_real_path(test_manager.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)', '492': 'handle(forward.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}, 'execution_paths': {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 113: 1, 114: 1, 115: 1, 116: 1, 117: 1, 118: 1, 119: 1, 120: 1, 121: 1, 122: 1, 123: 1, 124: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 1, 134: 1, 135: 1, 136: 1, 137: 1, 138: 1, 139: 1, 140: 1, 141: 1, 142: 1, 143: 1, 144: 1, 145: 1, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1, 152: 1, 153: 1, 154: 1, 155: 1, 156: 1, 157: 1, 158: 1, 159: 1, 160: 1, 161: 1, 162: 1, 163: 1, 164: 1, 165: 1, 166: 1, 167: 1, 168: 1, 169: 1, 170: 1, 171: 1, 172: 1, 173: 1, 174: 1, 175: 1, 176: 1, 177: 1, 178: 1, 179: 1, 180: 1, 181: 1, 182: 1, 183: 1, 184: 1, 185: 1, 186: 1, 187: 1, 188: 1, 189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 195: 1, 196: 1, 197: 1, 198: 1, 199: 1, 200: 1, 201: 1, 202: 1, 203: 1, 204: 1, 205: 1, 206: 1, 207: 1, 208: 1, 209: 1, 210: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 219: 1, 237: 1, 246: 1, 274: 1, 275: 1, 276: 1, 277: 1, 278: 1, 279: 1, 280: 1, 281: 1, 282: 1, 283: 1, 284: 1, 285: 1, 286: 1, 287: 1, 288: 1, 289: 1, 290: 1, 291: 1, 292: 1, 293: 1, 294: 1, 295: 1, 296: 1, 297: 1, 298: 1, 299: 1, 300: 1, 301: 1, 302: 1, 303: 1, 304: 1, 305: 1, 306: 1, 307: 1, 308: 1, 309: 1, 311: 1, 312: 1, 313: 1, 314: 1, 315: 1, 317: 1, 318: 1, 319: 1, 320: 1, 322: 1, 324: 1, 326: 1, 328: 1, 329: 1, 330: 1, 331: 1, 332: 1, 333: 1, 334: 1, 335: 1, 336: 1, 337: 1, 338: 1, 339: 1, 340: 1, 341: 1, 342: 1, 343: 1, 344: 1, 345: 1, 346: 1, 349: 1, 350: 1, 351: 1, 352: 1, 353: 1, 354: 1, 357: 1, 358: 1, 359: 1, 368: 1, 369: 1, 370: 1, 371: 1, 372: 1, 373: 1, 374: 1, 375: 1, 376: 1, 377: 1, 378: 1, 379: 1, 380: 1, 382: 1, 383: 1, 384: 1, 385: 1, 386: 1, 388: 1, 389: 1, 390: 1, 391: 1, 393: 1, 395: 1, 397: 1, 399: 1, 400: 1, 401: 1, 402: 1, 403: 1, 404: 1, 405: 1, 406: 1, 407: 1, 408: 1, 409: 1, 410: 1, 411: 1, 412: 1, 413: 1, 414: 1, 415: 1, 416: 1, 417: 1, 418: 1, 419: 1, 420: 1, 421: 1, 422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1, 432: 1, 433: 1, 434: 1, 435: 1, 436: 1, 437: 1, 438: 1, 439: 1, 440: 1, 441: 1, 442: 1, 443: 1, 444: 1, 445: 1, 446: 1, 447: 1, 448: 1, 449: 1, 450: 1, 451: 1, 452: 1, 453: 1, 454: 1, 455: 1, 456: 1, 457: 1, 458: 1, 459: 1, 460: 1, 461: 1, 462: 1, 463: 1, 464: 1, 465: 1, 466: 1, 477: 1, 478: 1, 479: 1, 480: 1, 481: 1, 482: 1, 483: 1, 484: 1, 485: 1, 486: 1, 487: 1, 488: 1, 489: 1, 500: 1, 501: 1, 502: 1, 513: 1, 524: 1, 525: 1, 526: 1, 557: 1, 578: 1, 579: 1, 580: 1, 581: 1, 582: 1, 583: 1, 584: 1, 585: 1, 586: 1, 587: 1, 588: 1, 589: 1, 590: 1, 591: 1, 592: 1, 593: 1, 594: 1, 595: 1, 596: 1, 597: 1, 598: 1, 599: 1, 600: 1, 601: 1, 602: 1, 603: 1, 604: 1, 605: 1, 606: 1, 607: 1, 608: 1, 609: 1, 610: 1, 611: 1, 612: 1, 613: 1, 614: 1, 615: 1, 616: 1, 617: 1, 628: 1, 629: 1, 630: 1, 631: 1, 632: 1, 693: 1, 694: 1, 695: 1, 696: 1, 697: 1, 698: 1, 699: 1, 700: 1, 701: 1, 702: 1, 703: 1, 704: 1, 705: 1, 706: 1, 707: 1, 708: 1, 709: 1, 710: 1, 711: 1, 712: 1, 713: 1, 714: 1, 715: 1, 716: 1, 717: 1, 718: 1, 719: 1, 720: 1, 721: 1, 722: 1, 723: 1, 724: 1, 727: 1, 728: 1, 741: 1, 742: 1, 743: 1, 744: 1, 745: 1, 746: 1, 755: 1, 756: 1, 757: 1, 758: 1, 759: 1, 764: 1, 765: 1, 770: 1, 773: 1, 776: 1, 777: 1, 778: 1, 779: 1, 780: 1, 781: 1, 782: 1, 783: 1, 786: 1, 787: 1, 790: 1, 791: 1, 792: 1, 793: 1, 794: 1, 808: 1, 809: 1, 812: 1, 813: 1, 814: 1, 817: 1, 818: 1, 819: 1, 822: 1, 823: 1, 824: 1, 827: 1, 828: 1, 829: 1, 832: 1, 833: 1, 836: 1, 837: 1, 840: 1, 841: 1, 842: 1, 843: 1, 844: 1, 845: 1, 846: 1, 847: 1, 850: 1, 851: 1, 852: 1, 855: 1, 856: 1, 859: 1, 860: 1, 861: 1, 862: 1, 863: 1, 872: 1, 873: 1, 874: 1, 875: 1, 876: 1, 877: 1, 878: 1, 879: 1, 880: 1, 881: 1, 882: 1, 883: 1, 884: 1, 885: 1, 886: 1, 887: 1, 888: 1, 889: 1, 890: 1, 901: 1, 906: 1, 907: 1, 908: 1, 909: 1, 910: 1, 913: 1, 914: 1, 919: 1, 920: 1, 929: 1, 934: 1, 939: 1, 940: 1, 949: 1, 954: 1, 959: 1, 964: 1, 969: 1, 974: 1, 979: 1, 980: 1, 985: 1, 986: 1, 995: 1, 1000: 1, 1001: 1, 1010: 1, 1015: 1, 1020: 1, 1025: 1, 1030: 1, 1035: 1, 1040: 1, 1041: 1, 1042: 1, 1043: 1, 1044: 1, 1045: 1, 1046: 1, 1047: 1, 1048: 1, 1049: 1, 1050: 1, 1051: 1, 1052: 1, 1053: 1, 1054: 1, 1055: 1, 1056: 1, 1057: 1, 1058: 1, 1059: 1, 1062: 1, 1063: 1, 1064: 1, 1065: 1, 1066: 1, 1067: 1, 1068: 1, 1069: 1, 1070: 1, 1071: 1, 1072: 1, 1073: 1, 1074: 1, 1075: 1, 1076: 1, 1077: 1, 1078: 1, 1081: 1, 1082: 1, 1083: 1, 1084: 1, 1085: 1, 1086: 1, 1087: 1, 1088: 1, 1089: 1, 1090: 1, 1091: 1, 1092: 1, 1093: 1, 1094: 1, 1095: 1, 1096: 1, 1097: 1, 1098: 1, 1099: 1, 1100: 1, 1101: 1, 1102: 1, 1103: 1, 1104: 1, 1105: 1, 1106: 1, 1107: 1, 1108: 1, 1109: 1, 1110: 1, 1111: 1, 1112: 1, 1113: 1, 1114: 1, 1115: 1, 1116: 1, 1117: 1, 1118: 1, 1119: 1, 1120: 1, 1121: 1, 1122: 1, 1123: 1, 1124: 1, 1125: 1, 1126: 1, 1127: 1, 1128: 1, 1129: 1, 1130: 1, 1131: 1, 1132: 1, 1133: 1, 1134: 1, 1135: 1, 1136: 1, 1137: 1, 1138: 1, 1139: 1, 1140: 1, 1141: 1, 1142: 1, 1143: 1, 1144: 1, 1145: 1, 1146: 1, 1147: 1, 1148: 1, 1149: 1, 1150: 1, 1151: 1, 1152: 1, 1153: 1, 1154: 1, 1155: 1, 1156: 1, 1157: 1, 1158: 1, 1159: 1, 1160: 1, 1161: 1, 1162: 1, 1163: 1, 1164: 1, 1165: 1, 1166: 1, 1167: 1, 1168: 1, 1169: 1, 1170: 1, 1171: 1, 1172: 1, 1173: 1, 1174: 1, 1175: 1, 1176: 1, 1177: 1, 1178: 1, 1179: 1, 1180: 1, 1181: 1, 1182: 1, 1183: 1, 1184: 1, 1185: 1, 1186: 1, 1187: 1, 1188: 1, 1189: 1, 1190: 1, 1191: 1, 1192: 1, 1193: 1, 1194: 1, 1195: 1, 1196: 1, 1197: 1, 1198: 1, 1199: 1, 1200: 1, 1201: 1, 1202: 1, 1203: 1, 1204: 1, 1205: 1, 1206: 1, 1207: 1, 1208: 1, 1209: 1, 1210: 1, 1211: 1, 1212: 1, 1213: 1, 1214: 1, 1215: 1, 1216: 1, 1217: 1, 1218: 1, 1219: 1, 1220: 1, 1221: 1, 1222: 1, 1223: 1, 1224: 1, 1225: 1, 1226: 1, 1227: 1, 1228: 1, 1229: 1, 1230: 1, 1231: 1, 1232: 1, 1233: 1, 1234: 1, 1235: 1, 1236: 1, 1237: 1, 1238: 1, 1239: 1, 1240: 1, 1241: 1, 1242: 1, 1243: 1, 1244: 1, 1245: 1, 1246: 1, 1247: 1, 1248: 1, 1249: 1, 1250: 1, 1251: 1, 1252: 1, 1253: 1, 1254: 1, 1255: 1, 1256: 1, 1257: 1, 1258: 1, 1259: 1, 1260: 1, 1261: 1, 1262: 1, 1263: 1, 1264: 1, 1265: 1, 1266: 1, 1267: 1, 1268: 1, 1269: 1, 1270: 1, 1271: 1, 1272: 1, 1273: 1, 1274: 1, 1275: 1, 1277: 1, 1295: 1, 1299: 1, 1331: 1, 1332: 1, 1333: 1, 1334: 1, 1335: 1, 1336: 1, 1337: 1, 1338: 1, 1339: 1, 1340: 1, 1341: 1, 1342: 1, 1343: 1, 1344: 1, 1345: 1, 1346: 1, 1347: 1, 1348: 1, 1349: 1, 1350: 1, 1351: 1, 1352: 1, 1353: 1, 1354: 1, 1355: 1, 1356: 1, 1357: 1, 1358: 1, 1359: 1, 1360: 1, 1361: 1, 1362: 1, 1363: 1, 1364: 1, 1365: 1, 1366: 1, 1367: 1, 1368: 1, 1369: 1, 1370: 1, 1371: 1, 1372: 1, 1373: 1, 1374: 1, 1375: 1, 1376: 1, 1377: 1, 1378: 1, 1379: 1, 1380: 1, 1381: 1, 1382: 1, 1383: 1, 1384: 1, 1385: 1, 1386: 1, 1387: 1, 1388: 1, 1391: 1, 1392: 1, 1393: 1, 1394: 1, 1395: 1, 1396: 1, 1397: 1, 1398: 1, 1399: 1, 1400: 1, 1401: 1, 1402: 1, 1403: 1}}, {'key': 15, 'parent': -1, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' init,check,packer,test,utcnow,', 'lda_method': ' init,check_packers,utcnow,squash_dates,test_default_version,', 'lsi_word': ' packer,init,check,test,date,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,setup,', 'spm_method': '  &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {22: 1, 23: 1, 61: 1, 62: 1, 725: 1, 726: 1, 784: 1, 785: 1, 806: 1, 807: 1, 810: 1, 811: 1, 815: 1, 816: 1, 820: 1, 821: 1, 825: 1, 826: 1, 830: 1, 831: 1, 834: 1, 835: 1, 838: 1, 839: 1, 848: 1, 849: 1, 853: 1, 854: 1, 904: 1, 905: 1, 911: 1, 912: 1, 1060: 1, 1061: 1, 1079: 1, 1080: 1}}, {'key': 14, 'parent': -1, 'tfidf_word': 'ready shell control kernel reqrep wrap get recv msg output ', 'tfidf_method': 'is_alive get_control_msg get_shell_msg get_control_msg wrapped _output_hook_kernel reqrep reqrep _output_hook_kernel wrapped ', 'lda_word': ' start,get,msg,recv,execute,', 'lda_method': ' start,execute_interactive,get_msg,recv,recv_reply,', 'lsi_word': ' msg,start,execute,interactive,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; input(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br>', 'text_summary': '', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '118': '_output_hook_default(client.py)', '119': '_output_hook_kernel(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '112': 'is_alive(channels.py)', '97': 'execute_interactive(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '96': '_stdin_hook_default(client.py)'}, 'execution_paths': {220: 1, 221: 1, 222: 1, 223: 1, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1, 233: 1, 234: 1, 235: 1, 236: 1, 238: 1, 239: 1, 240: 1, 241: 1, 242: 1, 243: 1, 244: 1, 245: 1, 247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 258: 1, 259: 1, 260: 1, 261: 1, 262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 1, 269: 1, 270: 1, 271: 1, 272: 1, 273: 1}}, {'key': 11, 'parent': -1, 'tfidf_word': 'found token msg unique default handle tracking shutdown execute send ', 'tfidf_method': 'test_object_info_reply test_object_info_request test_rename_type test_same_version test_input_request test_kernel_info_reply test_default_version handle test_tracking test_unique_msg_ids ', 'lda_word': ' msg,header,kernel,test,client,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 183, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {310: 1, 316: 1, 321: 1, 323: 1, 325: 1, 327: 1, 348: 1, 356: 1, 361: 1, 363: 1, 365: 1, 367: 1, 381: 1, 387: 1, 392: 1, 394: 1, 396: 1, 398: 1, 468: 1, 470: 1, 472: 1, 474: 1, 476: 1, 491: 1, 493: 1, 495: 1, 497: 1, 499: 1, 504: 1, 506: 1, 508: 1, 510: 1, 512: 1, 515: 1, 517: 1, 519: 1, 521: 1, 523: 1, 528: 1, 530: 1, 532: 1, 534: 1, 536: 1, 538: 1, 540: 1, 542: 1, 544: 1, 546: 1, 548: 1, 550: 1, 552: 1, 554: 1, 556: 1, 559: 1, 561: 1, 563: 1, 565: 1, 567: 1, 569: 1, 571: 1, 573: 1, 575: 1, 577: 1, 619: 1, 621: 1, 623: 1, 625: 1, 627: 1, 634: 1, 636: 1, 638: 1, 640: 1, 642: 1, 644: 1, 646: 1, 648: 1, 650: 1, 652: 1, 654: 1, 656: 1, 658: 1, 660: 1, 662: 1, 664: 1, 666: 1, 668: 1, 670: 1, 672: 1, 674: 1, 676: 1, 678: 1, 680: 1, 682: 1, 684: 1, 686: 1, 688: 1, 690: 1, 692: 1, 730: 1, 732: 1, 734: 1, 736: 1, 738: 1, 740: 1, 748: 1, 750: 1, 752: 1, 754: 1, 761: 1, 763: 1, 767: 1, 769: 1, 772: 1, 775: 1, 789: 1, 795: 1, 797: 1, 799: 1, 801: 1, 803: 1, 805: 1, 858: 1, 865: 1, 867: 1, 869: 1, 871: 1, 892: 1, 894: 1, 896: 1, 898: 1, 900: 1, 903: 1, 916: 1, 918: 1, 922: 1, 924: 1, 926: 1, 928: 1, 931: 1, 933: 1, 936: 1, 938: 1, 942: 1, 944: 1, 946: 1, 948: 1, 951: 1, 953: 1, 956: 1, 958: 1, 961: 1, 963: 1, 966: 1, 968: 1, 971: 1, 973: 1, 976: 1, 978: 1, 982: 1, 984: 1, 988: 1, 990: 1, 992: 1, 994: 1, 997: 1, 999: 1, 1003: 1, 1005: 1, 1007: 1, 1009: 1, 1012: 1, 1014: 1, 1017: 1, 1019: 1, 1022: 1, 1024: 1, 1027: 1, 1029: 1, 1032: 1, 1034: 1, 1037: 1, 1039: 1, 1390: 1}}, {'key': 12, 'parent': -1, 'tfidf_word': 'data input adapt found token handle default tracking execute send ', 'tfidf_method': 'test_kernel_info_reply test_no_adapt test_object_info_reply_not_found test_object_info_request test_same_version test_input_request test_object_info_reply test_default_version handle test_tracking ', 'lda_word': ' msg,extract,header,test,kernel,', 'lda_method': ' execute,msg,extract_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 170, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {347: 1, 355: 1, 360: 1, 362: 1, 364: 1, 366: 1, 467: 1, 469: 1, 471: 1, 473: 1, 475: 1, 490: 1, 492: 1, 494: 1, 496: 1, 498: 1, 503: 1, 505: 1, 507: 1, 509: 1, 511: 1, 514: 1, 516: 1, 518: 1, 520: 1, 522: 1, 527: 1, 529: 1, 531: 1, 533: 1, 535: 1, 537: 1, 539: 1, 541: 1, 543: 1, 545: 1, 547: 1, 549: 1, 551: 1, 553: 1, 555: 1, 558: 1, 560: 1, 562: 1, 564: 1, 566: 1, 568: 1, 570: 1, 572: 1, 574: 1, 576: 1, 618: 1, 620: 1, 622: 1, 624: 1, 626: 1, 633: 1, 635: 1, 637: 1, 639: 1, 641: 1, 643: 1, 645: 1, 647: 1, 649: 1, 651: 1, 653: 1, 655: 1, 657: 1, 659: 1, 661: 1, 663: 1, 665: 1, 667: 1, 669: 1, 671: 1, 673: 1, 675: 1, 677: 1, 679: 1, 681: 1, 683: 1, 685: 1, 687: 1, 689: 1, 691: 1, 729: 1, 731: 1, 733: 1, 735: 1, 737: 1, 739: 1, 747: 1, 749: 1, 751: 1, 753: 1, 760: 1, 762: 1, 766: 1, 768: 1, 771: 1, 774: 1, 788: 1, 796: 1, 798: 1, 800: 1, 802: 1, 804: 1, 857: 1, 864: 1, 866: 1, 868: 1, 870: 1, 891: 1, 893: 1, 895: 1, 897: 1, 899: 1, 902: 1, 915: 1, 917: 1, 921: 1, 923: 1, 925: 1, 927: 1, 930: 1, 932: 1, 935: 1, 937: 1, 941: 1, 943: 1, 945: 1, 947: 1, 950: 1, 952: 1, 955: 1, 957: 1, 960: 1, 962: 1, 965: 1, 967: 1, 970: 1, 972: 1, 975: 1, 977: 1, 981: 1, 983: 1, 987: 1, 989: 1, 991: 1, 993: 1, 996: 1, 998: 1, 1002: 1, 1004: 1, 1006: 1, 1008: 1, 1011: 1, 1013: 1, 1016: 1, 1018: 1, 1021: 1, 1023: 1, 1026: 1, 1028: 1, 1031: 1, 1033: 1, 1036: 1, 1038: 1, 1389: 1}}, {'key': 13, 'parent': -1, 'tfidf_word': 'n message send kernel socket connect start spec cleanup msg ', 'tfidf_method': '_get_env_substitutions kernel_spec is_alive start_restarter stop_restarter from_ns is_alive restart_kernel is_alive send ', 'lda_word': ' kernel,shutdown,restart,execute,poll,', 'lda_method': ' poll,do_execute,restart_kernel,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,shutdown,execute,poll,restart,', 'lsi_method': ' poll,do_execute,restart_kernel,shutdown_kernel,msg,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br>', 'text_summary': '', 'files_count': 14, 'files': ['signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'session.py', 'adapter.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '239': 'stop(restarter.py)', '732': 'is_alive(threaded.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '140': 'is_alive(channelsabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {1276: 1, 1278: 1, 1279: 1, 1280: 1, 1281: 1, 1282: 1, 1283: 1, 1284: 1, 1285: 1, 1286: 1, 1287: 1, 1288: 1, 1289: 1, 1290: 1, 1291: 1, 1292: 1, 1293: 1, 1294: 1, 1296: 1, 1297: 1, 1298: 1, 1300: 1, 1301: 1, 1302: 1, 1303: 1, 1304: 1, 1305: 1, 1306: 1, 1307: 1, 1308: 1, 1309: 1, 1310: 1, 1311: 1, 1312: 1, 1313: 1, 1314: 1, 1315: 1, 1316: 1, 1317: 1, 1318: 1, 1319: 1, 1320: 1, 1321: 1, 1322: 1, 1323: 1, 1324: 1, 1325: 1, 1326: 1, 1327: 1, 1328: 1, 1329: 1, 1330: 1}}, {'key': 110, 'parent': 16, 'tfidf_word': 'loop digest permission native flush io tunnel cleanup restarter code ', 'tfidf_method': 'restart_kernel interrupt_kernel finish_shutdown test_object_info_reply_not_found _key_default reqrep test_object_info_reply test_no_adapt find_kernel_specs SubHander ', 'lda_word': ' connection,file,test,load,session,', 'lda_method': ' close,write_connection_file,send,select_random_ports,cull_digest_history,', 'lsi_word': ' kernel,test,spec,connection,file,', 'lsi_method': ' init,get_kernel_spec,new_auth,setup,get_tcp_km,', 'spm_method': '  &#187; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br>', 'text_summary': '', 'files_count': 35, 'files': ['channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py', 'consoleapp.py', 'session.py', 'connect.py', 'jsonutil.py', 'kernelspec.py', 'signalkernel.py', 'launcher.py', 'win_interrupt.py', 'tunnel.py', 'client.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'localinterfaces.py', 'runapp.py', 'kernelspecapp.py', 'restarter.py', 'utils.py', 'manager.py', 'test_client.py', 'test_session.py', 'test_ssh.py', 'test_kernelapp.py', 'test_adapter.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_kernelspec.py', 'test_jsonutil.py', 'test_manager.py', 'forward.py'], 'execution_path_count': 586, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)', '133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '136': 'stop(channels.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '215': '__init__(consoleapp.py)', '453': '__init__(session.py)', '716': '__init__(threaded.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '392': '__init__(multikernelmanager.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '81': '__init__(channels.py)', '107': '__init__(channels.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '485': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '278': '__init__(kernelspec.py)', '509': '__init__(signalkernel.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '211': 'ports(connect.py)', '198': '_session_default(connect.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '713': 'IOLoopThread(threaded.py)', '724': 'start_channels(threaded.py)', '720': 'start(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '463': '_key_default(session.py)', '462': '_key_changed(session.py)', '470': '_signature_scheme_changed(session.py)', '484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '50': 'adapt(adapter.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '246': '_record_started(kernelapp.py)', '53': '__call__(adapter.py)', '55': 'update_header(adapter.py)', '56': 'update_metadata(adapter.py)', '57': 'update_msg_type(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '47': 'V4toV5(adapter.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '434': 'RunApp(runapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '220': 'init_kernel_client(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '711': 'start(utils.py)', '735': 'start(threaded.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '326': '_launch_kernel(manager.py)', '328': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '168': 'shell_channel(client.py)', '723': 'ioloop(threaded.py)', '164': 'iopub_channel(client.py)', '171': 'stdin_channel(client.py)', '160': 'hb_channel(client.py)', '154': 'control_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '102': 'hb_channel(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '111': 'get_msgs(channels.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '712': 'stop(utils.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)', '554': 'test_inspect(test_client.py)', '551': 'test_complete(test_client.py)', '555': 'test_kernel_info(test_client.py)', '550': 'test_comm_info(test_client.py)', '556': 'test_shutdown(test_client.py)', '678': 'setUp(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '479': 'recv(session.py)', '680': 'test_args(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '701': 'test_random_ports(test_ssh.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '709': '__enter__(utils.py)', '710': '__exit__(utils.py)', '704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)', '608': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '158': 'get_shell_msg(client.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '519': 'setUp(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '572': 'initialize(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)', '562': 'test_find_connection_file_local(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '510': 'do_execute(signalkernel.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '586': 'env(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '635': 'test_connection_file_real_path(test_manager.py)', '492': 'handle(forward.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}, 'execution_paths': {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 113: 1, 114: 1, 115: 1, 116: 1, 117: 1, 118: 1, 119: 1, 120: 1, 121: 1, 122: 1, 123: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 1, 134: 1, 135: 1, 136: 1, 137: 1, 159: 1, 160: 1, 161: 1, 162: 1, 163: 1, 164: 1, 165: 1, 166: 1, 167: 1, 168: 1, 169: 1, 170: 1, 171: 1, 172: 1, 219: 1, 274: 1, 275: 1, 276: 1, 277: 1, 278: 1, 279: 1, 280: 1, 281: 1, 282: 1, 283: 1, 284: 1, 296: 1, 335: 1, 336: 1, 337: 1, 338: 1, 339: 1, 340: 1, 341: 1, 342: 1, 343: 1, 344: 1, 345: 1, 351: 1, 353: 1, 354: 1, 357: 1, 358: 1, 359: 1, 368: 1, 407: 1, 409: 1, 410: 1, 411: 1, 412: 1, 413: 1, 414: 1, 415: 1, 416: 1, 417: 1, 418: 1, 419: 1, 433: 1, 477: 1, 478: 1, 480: 1, 481: 1, 483: 1, 484: 1, 486: 1, 487: 1, 488: 1, 500: 1, 501: 1, 502: 1, 513: 1, 524: 1, 525: 1, 526: 1, 557: 1, 578: 1, 579: 1, 580: 1, 581: 1, 582: 1, 583: 1, 584: 1, 585: 1, 587: 1, 588: 1, 589: 1, 590: 1, 591: 1, 592: 1, 593: 1, 594: 1, 595: 1, 601: 1, 603: 1, 604: 1, 611: 1, 613: 1, 614: 1, 616: 1, 617: 1, 628: 1, 629: 1, 630: 1, 631: 1, 632: 1, 693: 1, 694: 1, 695: 1, 696: 1, 697: 1, 699: 1, 700: 1, 701: 1, 702: 1, 703: 1, 704: 1, 705: 1, 706: 1, 707: 1, 708: 1, 709: 1, 710: 1, 711: 1, 712: 1, 713: 1, 714: 1, 715: 1, 716: 1, 717: 1, 718: 1, 719: 1, 720: 1, 721: 1, 722: 1, 723: 1, 724: 1, 727: 1, 728: 1, 741: 1, 742: 1, 743: 1, 744: 1, 745: 1, 746: 1, 755: 1, 756: 1, 757: 1, 758: 1, 759: 1, 764: 1, 765: 1, 770: 1, 773: 1, 776: 1, 777: 1, 778: 1, 779: 1, 780: 1, 781: 1, 782: 1, 783: 1, 786: 1, 787: 1, 790: 1, 791: 1, 792: 1, 793: 1, 794: 1, 808: 1, 809: 1, 812: 1, 813: 1, 814: 1, 817: 1, 818: 1, 819: 1, 822: 1, 823: 1, 824: 1, 827: 1, 828: 1, 829: 1, 832: 1, 833: 1, 836: 1, 837: 1, 840: 1, 841: 1, 842: 1, 843: 1, 844: 1, 845: 1, 846: 1, 847: 1, 850: 1, 851: 1, 852: 1, 855: 1, 856: 1, 859: 1, 860: 1, 861: 1, 862: 1, 863: 1, 872: 1, 873: 1, 874: 1, 875: 1, 876: 1, 877: 1, 878: 1, 879: 1, 880: 1, 881: 1, 882: 1, 883: 1, 884: 1, 885: 1, 886: 1, 887: 1, 888: 1, 889: 1, 890: 1, 901: 1, 906: 1, 907: 1, 908: 1, 909: 1, 910: 1, 913: 1, 914: 1, 919: 1, 920: 1, 929: 1, 934: 1, 939: 1, 940: 1, 949: 1, 954: 1, 959: 1, 964: 1, 969: 1, 974: 1, 979: 1, 980: 1, 985: 1, 986: 1, 995: 1, 1000: 1, 1001: 1, 1010: 1, 1015: 1, 1020: 1, 1025: 1, 1030: 1, 1035: 1, 1040: 1, 1041: 1, 1042: 1, 1043: 1, 1044: 1, 1045: 1, 1046: 1, 1047: 1, 1048: 1, 1049: 1, 1050: 1, 1051: 1, 1052: 1, 1053: 1, 1054: 1, 1055: 1, 1056: 1, 1057: 1, 1058: 1, 1059: 1, 1062: 1, 1063: 1, 1064: 1, 1065: 1, 1066: 1, 1067: 1, 1068: 1, 1069: 1, 1070: 1, 1071: 1, 1072: 1, 1073: 1, 1074: 1, 1075: 1, 1076: 1, 1077: 1, 1078: 1, 1081: 1, 1082: 1, 1083: 1, 1084: 1, 1085: 1, 1086: 1, 1087: 1, 1088: 1, 1089: 1, 1090: 1, 1091: 1, 1092: 1, 1093: 1, 1094: 1, 1095: 1, 1096: 1, 1097: 1, 1098: 1, 1099: 1, 1100: 1, 1101: 1, 1102: 1, 1103: 1, 1104: 1, 1105: 1, 1106: 1, 1107: 1, 1108: 1, 1109: 1, 1110: 1, 1111: 1, 1112: 1, 1134: 1, 1137: 1, 1138: 1, 1141: 1, 1142: 1, 1145: 1, 1146: 1, 1147: 1, 1150: 1, 1151: 1, 1154: 1, 1155: 1, 1158: 1, 1159: 1, 1162: 1, 1163: 1, 1166: 1, 1167: 1, 1170: 1, 1171: 1, 1174: 1, 1175: 1, 1180: 1, 1183: 1, 1188: 1, 1189: 1, 1190: 1, 1195: 1, 1198: 1, 1199: 1, 1204: 1, 1207: 1, 1210: 1, 1213: 1, 1215: 1, 1216: 1, 1217: 1, 1218: 1, 1219: 1, 1220: 1, 1221: 1, 1222: 1, 1223: 1, 1224: 1, 1225: 1, 1226: 1, 1227: 1, 1228: 1, 1229: 1, 1230: 1, 1231: 1, 1232: 1, 1233: 1, 1234: 1, 1235: 1, 1236: 1, 1237: 1, 1238: 1, 1239: 1, 1240: 1, 1241: 1, 1242: 1, 1243: 1, 1244: 1, 1245: 1, 1246: 1, 1247: 1, 1248: 1, 1249: 1, 1250: 1, 1251: 1, 1252: 1, 1253: 1, 1254: 1, 1256: 1, 1257: 1, 1258: 1, 1259: 1, 1260: 1, 1261: 1, 1262: 1, 1263: 1, 1264: 1, 1265: 1, 1266: 1, 1267: 1, 1268: 1, 1270: 1, 1271: 1, 1272: 1, 1273: 1, 1274: 1, 1275: 1, 1331: 1, 1332: 1, 1333: 1, 1334: 1, 1335: 1, 1336: 1, 1337: 1, 1338: 1, 1339: 1, 1340: 1, 1341: 1, 1342: 1, 1343: 1, 1344: 1, 1345: 1, 1346: 1, 1347: 1, 1348: 1, 1349: 1, 1350: 1, 1351: 1, 1352: 1, 1353: 1, 1354: 1, 1355: 1, 1356: 1, 1357: 1, 1358: 1, 1360: 1, 1361: 1, 1362: 1, 1363: 1, 1385: 1, 1386: 1, 1387: 1, 1388: 1, 1391: 1, 1392: 1, 1393: 1, 1394: 1, 1395: 1, 1396: 1, 1397: 1, 1398: 1, 1399: 1, 1400: 1, 1401: 1, 1402: 1, 1403: 1}}, {'key': 112, 'parent': 16, 'tfidf_word': 'channels control send alive kernel cleanup stdin iopub shell msg ', 'tfidf_method': 'shell_channel is_alive iopub_channel control_channel is_beating wait_for_ready execute_interactive wait_for_ready __del__ execute_interactive ', 'lda_word': ' kernel,alive,launch,shutdown,wait,', 'lda_method': ' launch_kernel,kill_kernel,shutdown_kernel,has_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,shutdown,async,start,launch,', 'lsi_method': ' shutdown_kernel,msg,restart_kernel,request_shutdown,start_new_async_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 12, 'files': ['channels.py', 'manager.py', 'threaded.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'connect.py', 'session.py', 'adapter.py', 'test_adapter.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 94, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '725': 'stop_channels(threaded.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '326': '_launch_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '338': '_connect_control_socket(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '327': 'finish_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '168': 'shell_channel(client.py)', '206': 'connect_shell(connect.py)', '164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '231': 'start_restarter(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '228': 'start_restarter(manager.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)'}, 'execution_paths': {9: 1, 100: 1, 237: 1, 246: 1, 297: 1, 298: 1, 299: 1, 300: 1, 301: 1, 302: 1, 303: 1, 304: 1, 305: 1, 306: 1, 307: 1, 308: 1, 309: 1, 311: 1, 312: 1, 313: 1, 314: 1, 315: 1, 317: 1, 318: 1, 319: 1, 320: 1, 322: 1, 324: 1, 326: 1, 328: 1, 329: 1, 330: 1, 331: 1, 332: 1, 333: 1, 334: 1, 346: 1, 349: 1, 350: 1, 352: 1, 369: 1, 370: 1, 371: 1, 372: 1, 373: 1, 374: 1, 375: 1, 376: 1, 377: 1, 378: 1, 379: 1, 380: 1, 382: 1, 383: 1, 384: 1, 385: 1, 386: 1, 388: 1, 389: 1, 390: 1, 391: 1, 393: 1, 395: 1, 397: 1, 399: 1, 400: 1, 401: 1, 402: 1, 403: 1, 404: 1, 405: 1, 437: 1, 441: 1, 479: 1, 482: 1, 485: 1, 489: 1, 586: 1, 596: 1, 597: 1, 598: 1, 599: 1, 600: 1, 605: 1, 606: 1, 607: 1, 608: 1, 609: 1, 610: 1, 615: 1, 698: 1, 1277: 1, 1295: 1, 1299: 1}}, {'key': 106, 'parent': 15, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' packer,test,check,date,init,', 'lda_method': ' init,check_packers,utcnow,test_bad_roundtrip,test_cull_digest_history,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,setup,', 'spm_method': '  &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {22: 1, 23: 1, 61: 1, 62: 1, 725: 1, 726: 1, 784: 1, 785: 1, 806: 1, 807: 1, 810: 1, 811: 1, 815: 1, 816: 1, 820: 1, 821: 1, 825: 1, 826: 1, 830: 1, 831: 1, 834: 1, 835: 1, 838: 1, 839: 1, 848: 1, 849: 1, 853: 1, 854: 1, 904: 1, 905: 1, 911: 1, 912: 1, 1060: 1, 1061: 1, 1079: 1, 1080: 1}}, {'key': 111, 'parent': 16, 'tfidf_word': 'info ssh kernel start send msg port socket connect tunnel ', 'tfidf_method': 'signal_kernel interrupt_kernel interrupt_kernel Message utcnow close serialize sign _stop_tunnel send ', 'lda_word': ' msg,kernel,info,initialize,init,', 'lda_method': ' initialize,make_url,create_connected_socket,handle_sigint,interrupt_kernel,', 'lsi_word': ' msg,tunnel,header,kernel,paramiko,', 'lsi_method': ' msg,msg_id,msg_header,extract_header,initialize,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 16, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py', 'runapp.py', 'client.py', 'channels.py', 'channelsabc.py', 'multikernelmanager.py', 'manager.py', 'win_interrupt.py', 'adapter.py', 'threaded.py', 'managerabc.py', 'kernelspecapp.py', 'forward.py'], 'execution_path_count': 81, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)', '437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '158': 'get_shell_msg(client.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '355': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '365': 'signal_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '372': 'interrupt_kernel(managerabc.py)', '291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '491': 'forward_tunnel(forward.py)'}, 'execution_paths': {40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 173: 1, 174: 1, 175: 1, 176: 1, 177: 1, 178: 1, 179: 1, 180: 1, 181: 1, 182: 1, 183: 1, 184: 1, 185: 1, 186: 1, 187: 1, 188: 1, 189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 195: 1, 196: 1, 197: 1, 198: 1, 199: 1, 200: 1, 201: 1, 202: 1, 203: 1, 204: 1, 205: 1, 206: 1, 207: 1, 208: 1, 209: 1, 210: 1, 285: 1, 286: 1, 287: 1, 288: 1, 289: 1, 290: 1, 291: 1, 292: 1, 293: 1, 294: 1, 1364: 1, 1365: 1, 1366: 1, 1367: 1, 1368: 1, 1369: 1, 1370: 1, 1371: 1, 1372: 1, 1373: 1, 1374: 1, 1375: 1, 1376: 1, 1377: 1, 1378: 1, 1379: 1, 1380: 1, 1381: 1, 1382: 1, 1383: 1, 1384: 1}}, {'key': 107, 'parent': 16, 'tfidf_word': 'remove path new native up ksm file my ipc spec ', 'tfidf_method': '_kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default start_new_async_kernel _kernel_spec_manager_default setUp MyKSM test_connection_file_real_path _kernel_spec_manager_default AsyncIOLoopKernelManager ', 'lda_word': ' kernel,tcp,sequence,method,wrap,', 'lda_method': ' test_tcp_lifecycle,test_start_parallel_process_kernels,tcp_lifecycle_with_loop,get_tcp_km,multikernelmanager,', 'lsi_word': ' kernel,manager,spec,tcp,multi,', 'lsi_method': ' multikernelmanager,get_tcp_km,kernelspecmanager,kernelspec,asyncmultikernelmanager,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['kernelapp.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'test_kernelspec.py', 'test_manager.py'], 'execution_path_count': 63, 'function_id_to_name_file': {'245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {124: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 295: 1, 406: 1, 602: 1, 612: 1, 1135: 1, 1136: 1, 1139: 1, 1140: 1, 1143: 1, 1144: 1, 1148: 1, 1149: 1, 1152: 1, 1153: 1, 1156: 1, 1157: 1, 1160: 1, 1161: 1, 1164: 1, 1165: 1, 1168: 1, 1169: 1, 1172: 1, 1173: 1, 1176: 1, 1177: 1, 1178: 1, 1179: 1, 1181: 1, 1182: 1, 1184: 1, 1185: 1, 1186: 1, 1187: 1, 1191: 1, 1192: 1, 1193: 1, 1194: 1, 1196: 1, 1197: 1, 1200: 1, 1201: 1, 1202: 1, 1203: 1, 1205: 1, 1206: 1, 1208: 1, 1209: 1, 1211: 1, 1212: 1, 1214: 1, 1255: 1, 1269: 1, 1359: 1}}, {'key': 109, 'parent': 16, 'tfidf_word': 'no addresses local output get netifaces load gethostbyname dumb ip ', 'tfidf_method': '_load_ips_ip _load_ips_ipconfig _uniq_stable NoIPAddresses local_ips public_ips _get_output _load_ips_netifaces _load_ips_dumb _load_ips_gethostbyname ', 'lda_word': ' ip,load,list,populate,require,', 'lda_method': ' load_ips,test_load_ips,get_output,load_ips_netifaces,uniq_stable,', 'lsi_word': ' ip,load,list,populate,require,', 'lsi_method': ' load_ips,populate_from_list,ips_loaded,requires_ips,test_load_ips,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; NoIPAddresses(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 42, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)'}, 'execution_paths': {138: 1, 139: 1, 140: 1, 141: 1, 142: 1, 143: 1, 144: 1, 145: 1, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1, 152: 1, 153: 1, 154: 1, 155: 1, 156: 1, 157: 1, 158: 1, 1113: 1, 1114: 1, 1115: 1, 1116: 1, 1117: 1, 1118: 1, 1119: 1, 1120: 1, 1121: 1, 1122: 1, 1123: 1, 1124: 1, 1125: 1, 1126: 1, 1127: 1, 1128: 1, 1129: 1, 1130: 1, 1131: 1, 1132: 1, 1133: 1}}, {'key': 105, 'parent': 14, 'tfidf_word': 'ready shell control kernel reqrep wrap get recv msg output ', 'tfidf_method': 'is_alive get_control_msg get_shell_msg get_control_msg wrapped _output_hook_kernel reqrep reqrep _output_hook_kernel wrapped ', 'lda_word': ' start,execute,interactive,msg,default,', 'lda_method': ' start,execute_interactive,wrap,reqrep,msg,', 'lsi_word': ' msg,start,interactive,execute,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; input(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br>', 'text_summary': '', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '118': '_output_hook_default(client.py)', '119': '_output_hook_kernel(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '112': 'is_alive(channels.py)', '97': 'execute_interactive(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '96': '_stdin_hook_default(client.py)'}, 'execution_paths': {220: 1, 221: 1, 222: 1, 223: 1, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1, 233: 1, 234: 1, 235: 1, 236: 1, 238: 1, 239: 1, 240: 1, 241: 1, 242: 1, 243: 1, 244: 1, 245: 1, 247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 258: 1, 259: 1, 260: 1, 261: 1, 262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 1, 269: 1, 270: 1, 271: 1, 272: 1, 273: 1}}, {'key': 101, 'parent': 11, 'tfidf_word': 'found token msg unique default handle tracking shutdown execute send ', 'tfidf_method': 'test_object_info_reply test_object_info_request test_rename_type test_same_version test_input_request test_kernel_info_reply test_default_version handle test_tracking test_unique_msg_ids ', 'lda_word': ' msg,header,kernel,test,client,', 'lda_method': ' msg,msg_id,msg_header,test_send,test_same_version,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 183, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {310: 1, 316: 1, 321: 1, 323: 1, 325: 1, 327: 1, 348: 1, 356: 1, 361: 1, 363: 1, 365: 1, 367: 1, 381: 1, 387: 1, 392: 1, 394: 1, 396: 1, 398: 1, 468: 1, 470: 1, 472: 1, 474: 1, 476: 1, 491: 1, 493: 1, 495: 1, 497: 1, 499: 1, 504: 1, 506: 1, 508: 1, 510: 1, 512: 1, 515: 1, 517: 1, 519: 1, 521: 1, 523: 1, 528: 1, 530: 1, 532: 1, 534: 1, 536: 1, 538: 1, 540: 1, 542: 1, 544: 1, 546: 1, 548: 1, 550: 1, 552: 1, 554: 1, 556: 1, 559: 1, 561: 1, 563: 1, 565: 1, 567: 1, 569: 1, 571: 1, 573: 1, 575: 1, 577: 1, 619: 1, 621: 1, 623: 1, 625: 1, 627: 1, 634: 1, 636: 1, 638: 1, 640: 1, 642: 1, 644: 1, 646: 1, 648: 1, 650: 1, 652: 1, 654: 1, 656: 1, 658: 1, 660: 1, 662: 1, 664: 1, 666: 1, 668: 1, 670: 1, 672: 1, 674: 1, 676: 1, 678: 1, 680: 1, 682: 1, 684: 1, 686: 1, 688: 1, 690: 1, 692: 1, 730: 1, 732: 1, 734: 1, 736: 1, 738: 1, 740: 1, 748: 1, 750: 1, 752: 1, 754: 1, 761: 1, 763: 1, 767: 1, 769: 1, 772: 1, 775: 1, 789: 1, 795: 1, 797: 1, 799: 1, 801: 1, 803: 1, 805: 1, 858: 1, 865: 1, 867: 1, 869: 1, 871: 1, 892: 1, 894: 1, 896: 1, 898: 1, 900: 1, 903: 1, 916: 1, 918: 1, 922: 1, 924: 1, 926: 1, 928: 1, 931: 1, 933: 1, 936: 1, 938: 1, 942: 1, 944: 1, 946: 1, 948: 1, 951: 1, 953: 1, 956: 1, 958: 1, 961: 1, 963: 1, 966: 1, 968: 1, 971: 1, 973: 1, 976: 1, 978: 1, 982: 1, 984: 1, 988: 1, 990: 1, 992: 1, 994: 1, 997: 1, 999: 1, 1003: 1, 1005: 1, 1007: 1, 1009: 1, 1012: 1, 1014: 1, 1017: 1, 1019: 1, 1022: 1, 1024: 1, 1027: 1, 1029: 1, 1032: 1, 1034: 1, 1037: 1, 1039: 1, 1390: 1}}, {'key': 103, 'parent': 12, 'tfidf_word': 'data input adapt handle found default token tracking execute send ', 'tfidf_method': 'test_display_data test_execute_request test_kernel_info_reply test_no_adapt test_object_info_reply_not_found test_object_info_request test_same_version test_complete_reply test_input_request test_object_info_reply ', 'lda_word': ' info,msg,comm,kernel,header,', 'lda_method': ' msg,extract_header,kernel_info,interrupt_kernel,start_channels,', 'lsi_word': ' msg,header,extract,kernel,client,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 99, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {347: 1, 355: 1, 360: 1, 366: 1, 467: 1, 469: 1, 475: 1, 490: 1, 492: 1, 498: 1, 503: 1, 505: 1, 511: 1, 514: 1, 516: 1, 522: 1, 527: 1, 529: 1, 535: 1, 537: 1, 539: 1, 545: 1, 547: 1, 549: 1, 555: 1, 558: 1, 560: 1, 566: 1, 568: 1, 570: 1, 576: 1, 618: 1, 620: 1, 626: 1, 633: 1, 635: 1, 641: 1, 643: 1, 645: 1, 651: 1, 653: 1, 655: 1, 661: 1, 663: 1, 665: 1, 671: 1, 673: 1, 675: 1, 681: 1, 683: 1, 685: 1, 691: 1, 729: 1, 731: 1, 737: 1, 739: 1, 747: 1, 753: 1, 760: 1, 768: 1, 771: 1, 774: 1, 788: 1, 796: 1, 798: 1, 804: 1, 857: 1, 864: 1, 870: 1, 891: 1, 893: 1, 899: 1, 902: 1, 915: 1, 921: 1, 925: 1, 930: 1, 935: 1, 941: 1, 945: 1, 950: 1, 955: 1, 960: 1, 965: 1, 970: 1, 975: 1, 983: 1, 989: 1, 993: 1, 998: 1, 1004: 1, 1008: 1, 1013: 1, 1018: 1, 1023: 1, 1028: 1, 1033: 1, 1038: 1, 1389: 1}}, {'key': 102, 'parent': 12, 'tfidf_word': 'identity feed display data channels interrupt version found token execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply_not_found ', 'lda_word': ' msg,extract,header,history,kernel,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,history,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {362: 1, 364: 1, 471: 1, 473: 1, 494: 1, 496: 1, 507: 1, 509: 1, 518: 1, 520: 1, 531: 1, 533: 1, 541: 1, 543: 1, 551: 1, 553: 1, 562: 1, 564: 1, 572: 1, 574: 1, 622: 1, 624: 1, 637: 1, 639: 1, 647: 1, 649: 1, 657: 1, 659: 1, 667: 1, 669: 1, 677: 1, 679: 1, 687: 1, 689: 1, 733: 1, 735: 1, 749: 1, 751: 1, 762: 1, 766: 1, 800: 1, 802: 1, 866: 1, 868: 1, 895: 1, 897: 1, 917: 1, 923: 1, 927: 1, 932: 1, 937: 1, 943: 1, 947: 1, 952: 1, 957: 1, 962: 1, 967: 1, 972: 1, 977: 1, 981: 1, 987: 1, 991: 1, 996: 1, 1002: 1, 1006: 1, 1011: 1, 1016: 1, 1021: 1, 1026: 1, 1031: 1, 1036: 1}}, {'key': 108, 'parent': 16, 'tfidf_word': 'n message send kernel socket connect manager spec cleanup msg ', 'tfidf_method': 'is_alive thread_send _get_env_substitutions start_new_async_kernel local_ips is_local_ip KernelSpecManager ConnectionFileMixin Message send ', 'lda_word': ' kernel,start,new,run,msg,', 'lda_method': ' shutdown_kernel,start_new_kernel,run_kernel,request_shutdown,send,', 'lsi_word': ' kernel,start,shutdown,new,run,', 'lsi_method': ' start_new_kernel,run_kernel,msg,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 9, 'files': ['manager.py', 'connect.py', 'kernelspec.py', 'localinterfaces.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 45, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '347': '_launch_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {408: 1, 420: 1, 421: 1, 422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1, 432: 1, 434: 1, 435: 1, 436: 1, 438: 1, 439: 1, 440: 1, 442: 1, 443: 1, 444: 1, 445: 1, 446: 1, 447: 1, 448: 1, 449: 1, 450: 1, 451: 1, 452: 1, 453: 1, 454: 1, 455: 1, 456: 1, 457: 1, 458: 1, 459: 1, 460: 1, 461: 1, 462: 1, 463: 1, 464: 1, 465: 1, 466: 1}}, {'key': 104, 'parent': 13, 'tfidf_word': 'n message send kernel socket connect start spec cleanup msg ', 'tfidf_method': '_get_env_substitutions kernel_spec is_alive start_restarter stop_restarter from_ns is_alive restart_kernel is_alive send ', 'lda_word': ' kernel,poll,execute,restart,start,', 'lda_method': ' start_kernel,restart_kernel,poll,do_execute,make_url,', 'lsi_word': ' kernel,shutdown,poll,execute,restart,', 'lsi_method': ' poll,do_execute,restart_kernel,shutdown_kernel,msg,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br>', 'text_summary': '', 'files_count': 14, 'files': ['signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'session.py', 'adapter.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '239': 'stop(restarter.py)', '732': 'is_alive(threaded.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '140': 'is_alive(channelsabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {1276: 1, 1278: 1, 1279: 1, 1280: 1, 1281: 1, 1282: 1, 1283: 1, 1284: 1, 1285: 1, 1286: 1, 1287: 1, 1288: 1, 1289: 1, 1290: 1, 1291: 1, 1292: 1, 1293: 1, 1294: 1, 1296: 1, 1297: 1, 1298: 1, 1300: 1, 1301: 1, 1302: 1, 1303: 1, 1304: 1, 1305: 1, 1306: 1, 1307: 1, 1308: 1, 1309: 1, 1310: 1, 1311: 1, 1312: 1, 1313: 1, 1314: 1, 1315: 1, 1316: 1, 1317: 1, 1318: 1, 1319: 1, 1320: 1, 1321: 1, 1322: 1, 1323: 1, 1324: 1, 1325: 1, 1326: 1, 1327: 1, 1328: 1, 1329: 1, 1330: 1}}, {'key': 1018, 'parent': 110, 'tfidf_word': 'loop digest permission native flush io tunnel cleanup code restarter ', 'tfidf_method': 'parse_command_line test_mixin_record_random_ports test_secure_write update_msg_type check_user_only_permissions fetch_win32_permissions _launch test_kernelapp_lifecycle msg_header test_code_to_line_no_code ', 'lda_word': ' kernel,test,channel,execute,reply,', 'lda_method': ' start,close,init,write_connection_file,connectionfilemixin,', 'lsi_word': ' kernel,get,spec,test,lifecycle,', 'lsi_method': ' init,get_kernel_spec,setup,get_all_specs,test_subclass,', 'spm_method': '  &#187; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br>', 'text_summary': '', 'files_count': 35, 'files': ['channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py', 'consoleapp.py', 'session.py', 'connect.py', 'jsonutil.py', 'kernelspec.py', 'signalkernel.py', 'launcher.py', 'win_interrupt.py', 'tunnel.py', 'client.py', 'adapter.py', 'kernelapp.py', 'test_kernelmanager.py', 'localinterfaces.py', 'runapp.py', 'kernelspecapp.py', 'restarter.py', 'utils.py', 'manager.py', 'test_client.py', 'test_session.py', 'test_ssh.py', 'test_kernelapp.py', 'test_adapter.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_kernelspec.py', 'test_jsonutil.py', 'test_manager.py', 'forward.py'], 'execution_path_count': 483, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)', '133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '136': 'stop(channels.py)', '213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '215': '__init__(consoleapp.py)', '453': '__init__(session.py)', '716': '__init__(threaded.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '392': '__init__(multikernelmanager.py)', '81': '__init__(channels.py)', '107': '__init__(channels.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '465': '_new_auth(session.py)', '278': '__init__(kernelspec.py)', '509': '__init__(signalkernel.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '211': 'ports(connect.py)', '198': '_session_default(connect.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '713': 'IOLoopThread(threaded.py)', '724': 'start_channels(threaded.py)', '720': 'start(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '463': '_key_default(session.py)', '462': '_key_changed(session.py)', '470': '_signature_scheme_changed(session.py)', '484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '50': 'adapt(adapter.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '246': '_record_started(kernelapp.py)', '53': '__call__(adapter.py)', '55': 'update_header(adapter.py)', '56': 'update_metadata(adapter.py)', '57': 'update_msg_type(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '47': 'V4toV5(adapter.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '434': 'RunApp(runapp.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '711': 'start(utils.py)', '735': 'start(threaded.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '328': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '168': 'shell_channel(client.py)', '196': '_make_url(connect.py)', '723': 'ioloop(threaded.py)', '164': 'iopub_channel(client.py)', '171': 'stdin_channel(client.py)', '160': 'hb_channel(client.py)', '154': 'control_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '102': 'hb_channel(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '111': 'get_msgs(channels.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '712': 'stop(utils.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)', '554': 'test_inspect(test_client.py)', '551': 'test_complete(test_client.py)', '555': 'test_kernel_info(test_client.py)', '550': 'test_comm_info(test_client.py)', '556': 'test_shutdown(test_client.py)', '678': 'setUp(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '479': 'recv(session.py)', '680': 'test_args(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '701': 'test_random_ports(test_ssh.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '709': '__enter__(utils.py)', '710': '__exit__(utils.py)', '704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)', '608': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '158': 'get_shell_msg(client.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '519': 'setUp(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '315': 'localhost(localinterfaces.py)', '564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)', '562': 'test_find_connection_file_local(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)', '510': 'do_execute(signalkernel.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '586': 'env(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '492': 'handle(forward.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}, 'execution_paths': {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 114: 1, 115: 1, 116: 1, 117: 1, 118: 1, 121: 1, 122: 1, 123: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 1, 134: 1, 135: 1, 136: 1, 137: 1, 159: 1, 160: 1, 161: 1, 219: 1, 274: 1, 275: 1, 276: 1, 277: 1, 278: 1, 279: 1, 280: 1, 281: 1, 282: 1, 283: 1, 284: 1, 296: 1, 335: 1, 351: 1, 353: 1, 354: 1, 357: 1, 358: 1, 359: 1, 368: 1, 407: 1, 477: 1, 478: 1, 480: 1, 481: 1, 483: 1, 484: 1, 486: 1, 487: 1, 488: 1, 500: 1, 501: 1, 502: 1, 513: 1, 524: 1, 525: 1, 526: 1, 557: 1, 578: 1, 579: 1, 580: 1, 581: 1, 582: 1, 583: 1, 584: 1, 585: 1, 587: 1, 588: 1, 589: 1, 590: 1, 591: 1, 592: 1, 593: 1, 594: 1, 595: 1, 601: 1, 603: 1, 604: 1, 611: 1, 613: 1, 614: 1, 616: 1, 617: 1, 628: 1, 629: 1, 630: 1, 631: 1, 632: 1, 693: 1, 694: 1, 695: 1, 696: 1, 697: 1, 699: 1, 700: 1, 701: 1, 702: 1, 703: 1, 704: 1, 705: 1, 706: 1, 707: 1, 708: 1, 709: 1, 710: 1, 711: 1, 712: 1, 713: 1, 714: 1, 715: 1, 716: 1, 717: 1, 718: 1, 719: 1, 720: 1, 721: 1, 722: 1, 723: 1, 724: 1, 728: 1, 741: 1, 742: 1, 743: 1, 745: 1, 746: 1, 755: 1, 756: 1, 758: 1, 759: 1, 764: 1, 765: 1, 770: 1, 773: 1, 776: 1, 777: 1, 778: 1, 779: 1, 780: 1, 782: 1, 783: 1, 787: 1, 790: 1, 791: 1, 792: 1, 793: 1, 794: 1, 809: 1, 813: 1, 814: 1, 818: 1, 819: 1, 823: 1, 824: 1, 828: 1, 829: 1, 833: 1, 837: 1, 841: 1, 842: 1, 844: 1, 845: 1, 847: 1, 851: 1, 856: 1, 859: 1, 860: 1, 862: 1, 863: 1, 872: 1, 873: 1, 874: 1, 875: 1, 876: 1, 877: 1, 878: 1, 879: 1, 880: 1, 881: 1, 882: 1, 883: 1, 884: 1, 885: 1, 886: 1, 887: 1, 888: 1, 889: 1, 890: 1, 901: 1, 907: 1, 908: 1, 909: 1, 910: 1, 914: 1, 919: 1, 920: 1, 929: 1, 934: 1, 939: 1, 940: 1, 949: 1, 954: 1, 959: 1, 964: 1, 969: 1, 974: 1, 979: 1, 980: 1, 985: 1, 986: 1, 995: 1, 1000: 1, 1001: 1, 1010: 1, 1015: 1, 1020: 1, 1025: 1, 1030: 1, 1035: 1, 1040: 1, 1041: 1, 1042: 1, 1043: 1, 1044: 1, 1045: 1, 1046: 1, 1047: 1, 1048: 1, 1049: 1, 1050: 1, 1051: 1, 1052: 1, 1053: 1, 1054: 1, 1055: 1, 1056: 1, 1063: 1, 1067: 1, 1068: 1, 1069: 1, 1070: 1, 1071: 1, 1072: 1, 1073: 1, 1074: 1, 1075: 1, 1082: 1, 1086: 1, 1087: 1, 1088: 1, 1089: 1, 1090: 1, 1091: 1, 1092: 1, 1093: 1, 1094: 1, 1098: 1, 1099: 1, 1103: 1, 1104: 1, 1105: 1, 1106: 1, 1107: 1, 1109: 1, 1110: 1, 1112: 1, 1134: 1, 1137: 1, 1138: 1, 1141: 1, 1142: 1, 1145: 1, 1146: 1, 1147: 1, 1150: 1, 1151: 1, 1154: 1, 1155: 1, 1158: 1, 1159: 1, 1162: 1, 1163: 1, 1166: 1, 1167: 1, 1170: 1, 1171: 1, 1174: 1, 1175: 1, 1180: 1, 1183: 1, 1188: 1, 1189: 1, 1190: 1, 1195: 1, 1198: 1, 1199: 1, 1204: 1, 1207: 1, 1210: 1, 1213: 1, 1215: 1, 1216: 1, 1217: 1, 1218: 1, 1219: 1, 1222: 1, 1223: 1, 1224: 1, 1225: 1, 1226: 1, 1227: 1, 1228: 1, 1229: 1, 1230: 1, 1231: 1, 1232: 1, 1233: 1, 1234: 1, 1237: 1, 1240: 1, 1241: 1, 1242: 1, 1245: 1, 1246: 1, 1249: 1, 1250: 1, 1251: 1, 1254: 1, 1256: 1, 1257: 1, 1258: 1, 1259: 1, 1260: 1, 1261: 1, 1264: 1, 1265: 1, 1266: 1, 1267: 1, 1268: 1, 1270: 1, 1271: 1, 1272: 1, 1273: 1, 1274: 1, 1275: 1, 1331: 1, 1332: 1, 1333: 1, 1334: 1, 1335: 1, 1336: 1, 1337: 1, 1338: 1, 1339: 1, 1340: 1, 1341: 1, 1342: 1, 1343: 1, 1344: 1, 1345: 1, 1346: 1, 1347: 1, 1348: 1, 1349: 1, 1350: 1, 1351: 1, 1355: 1, 1357: 1, 1358: 1, 1360: 1, 1385: 1, 1386: 1, 1387: 1, 1388: 1, 1391: 1, 1392: 1, 1393: 1, 1394: 1, 1395: 1, 1396: 1, 1397: 1, 1399: 1, 1400: 1, 1401: 1, 1402: 1, 1403: 1}}, {'key': 1023, 'parent': 112, 'tfidf_word': 'interrupt restarter interactive start async stop channels beating poll kernel ', 'tfidf_method': 'poll start_restarter start_restarter is_alive is_beating wait_for_ready execute_interactive wait_for_ready stop_channels execute_interactive ', 'lda_word': ' kernel,launch,shutdown,start,alive,', 'lda_method': ' is_alive,has_kernel,launch_kernel,start,execute_interactive,', 'lsi_word': ' kernel,shutdown,launch,async,kill,', 'lsi_method': ' launch_kernel,has_kernel,shutdown_kernel,is_alive,kill_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['channels.py', 'manager.py', 'threaded.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '725': 'stop_channels(threaded.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '327': 'finish_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '231': 'start_restarter(manager.py)', '228': 'start_restarter(manager.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)'}, 'execution_paths': {9: 1, 100: 1, 237: 1, 246: 1, 298: 1, 299: 1, 300: 1, 329: 1, 330: 1, 331: 1, 332: 1, 346: 1, 352: 1, 369: 1, 370: 1, 371: 1, 400: 1, 401: 1, 402: 1, 403: 1, 586: 1, 605: 1, 615: 1, 698: 1, 1277: 1}}, {'key': 1007, 'parent': 106, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' init,check,packer,squash,date,', 'lda_method': ' init,check_packers,utcnow,squash_dates,setup,', 'lsi_word': ' packer,init,check,test,date,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,setup,', 'spm_method': '  &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {22: 1, 23: 1, 61: 1, 62: 1, 725: 1, 726: 1, 784: 1, 785: 1, 806: 1, 807: 1, 810: 1, 811: 1, 815: 1, 816: 1, 820: 1, 821: 1, 825: 1, 826: 1, 830: 1, 831: 1, 834: 1, 835: 1, 838: 1, 839: 1, 848: 1, 849: 1, 853: 1, 854: 1, 904: 1, 905: 1, 911: 1, 912: 1, 1060: 1, 1061: 1, 1079: 1, 1080: 1}}, {'key': 1013, 'parent': 110, 'tfidf_word': 'args packer pack msgpack version kn id cull pickle zero ', 'tfidf_method': 'test_args test_session_id setUp test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' init,auth,new,test,session,', 'lda_method': ' init,new_auth,setup,test_load_connection_file_session_with_kn,test_bad_pack,', 'lsi_word': ' init,new,auth,test,bad,', 'lsi_method': ' init,new_auth,setup,test_zero_digest_history,test_datetimes_msgpack,', 'spm_method': '  &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {24: 1, 63: 1, 727: 1, 786: 1, 808: 1, 812: 1, 817: 1, 822: 1, 827: 1, 832: 1, 836: 1, 840: 1, 850: 1, 855: 1, 906: 1, 913: 1, 1062: 1, 1081: 1}}, {'key': 1021, 'parent': 111, 'tfidf_word': 'passwordless ssh start split exception server openssh get shell msg ', 'tfidf_method': 'start start kernel_info input get_shell_msg unpause SSHException _split_server _try_passwordless_openssh unpause ', 'lda_word': ' msg,header,kernel,start,info,', 'lda_method': ' msg,initialize,init_kernel_info,extract_header,kernel_info,', 'lsi_word': ' msg,kernel,header,try,passwordless,', 'lsi_method': ' msg,start,msg_header,msg_id,extract_header,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 9, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py', 'runapp.py', 'client.py', 'channels.py', 'channelsabc.py', 'kernelspecapp.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)', '437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '158': 'get_shell_msg(client.py)', '291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)'}, 'execution_paths': {40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 173: 1, 174: 1, 175: 1, 176: 1, 177: 1, 178: 1, 179: 1, 180: 1, 181: 1, 182: 1, 183: 1, 184: 1, 185: 1, 285: 1, 286: 1, 287: 1, 288: 1, 289: 1, 290: 1, 291: 1, 292: 1, 293: 1, 294: 1}}, {'key': 1016, 'parent': 110, 'tfidf_word': 'serialize raw naive pickle msgpack ms handle default precision unserialize ', 'tfidf_method': 'test_datetimes_msgpack test_datetimes test_extract_date_from_naive test_extract_dates test_send_raw test_date_default handle unserialize test_parse_ms_precision test_serialize ', 'lda_word': ' date,test,extract,parse,ensure,', 'lda_method': ' ensure_tzinfo,parse_date,extract_dates,deserialize,recv,', 'lsi_word': ' date,extract,test,parse,ensure,', 'lsi_method': ' ensure_tzinfo,parse_date,extract_dates,deserialize,datetime_test,', 'spm_method': '  &#187; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['session.py', 'jsonutil.py', 'test_session.py', 'test_jsonutil.py', 'forward.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '575': 'test_date_default(test_jsonutil.py)', '492': 'handle(forward.py)'}, 'execution_paths': {113: 1, 744: 1, 757: 1, 781: 1, 843: 1, 846: 1, 852: 1, 861: 1, 1352: 1, 1353: 1, 1354: 1, 1356: 1, 1398: 1}}, {'key': 1015, 'parent': 110, 'tfidf_word': 'find get install specs prefix priority subclass spec kernel remove ', 'tfidf_method': 'get_all_specs find_kernel_specs remove_kernel_spec test_find_all_specs test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority test_remove_kernel_spec test_subclass ', 'lda_word': ' kernel,install,find,list,dir,', 'lda_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,test_remove_kernel_spec,remove_kernel_spec,', 'lsi_word': ' kernel,specs,find,list,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,get_all_specs,', 'spm_method': '  &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_kernel_spec_priority(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {119: 1, 120: 1, 1220: 1, 1221: 1, 1235: 1, 1236: 1, 1238: 1, 1239: 1, 1243: 1, 1244: 1, 1247: 1, 1248: 1, 1252: 1, 1253: 1, 1262: 1, 1263: 1}}, {'key': 1009, 'parent': 107, 'tfidf_word': 'native list ksm file connection real up kernel tcp ipc ', 'tfidf_method': '_kernel_spec_manager_default _kernel_spec_manager_default start_new_async_kernel _kernel_spec_manager_default setUp MyKSM test_connection_file_real_path test_ipc_cinfo _kernel_spec_manager_default test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,spec,multi,tcp,', 'lda_method': ' kernelspecmanager,kernelspec,multikernelmanager,get_tcp_km,kernel_spec_manager_default,', 'lsi_word': ' kernel,manager,spec,tcp,multi,', 'lsi_method': ' kernelspec,kernelspecmanager,multikernelmanager,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['kernelapp.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'test_multikernelmanager.py', 'multikernelmanager.py', 'test_kernelspec.py', 'test_manager.py'], 'execution_path_count': 40, 'function_id_to_name_file': {'245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {124: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 295: 1, 406: 1, 602: 1, 612: 1, 1135: 1, 1139: 1, 1143: 1, 1148: 1, 1152: 1, 1156: 1, 1160: 1, 1164: 1, 1168: 1, 1172: 1, 1176: 1, 1178: 1, 1181: 1, 1184: 1, 1186: 1, 1191: 1, 1193: 1, 1196: 1, 1200: 1, 1202: 1, 1205: 1, 1208: 1, 1211: 1, 1214: 1, 1255: 1, 1269: 1, 1359: 1}}, {'key': 1011, 'parent': 109, 'tfidf_word': 'no local stable uniq netifaces output get load dumb ip ', 'tfidf_method': '_load_ips_ifconfig _load_ips_ip _load_ips_ipconfig NoIPAddresses _uniq_stable local_ips public_ips _get_output _load_ips_netifaces _load_ips_dumb ', 'lda_word': ' ip,load,require,list,populate,', 'lda_method': ' load_ips,requires_ips,ips_loaded,populate_from_list,load_ips_ifconfig,', 'lsi_word': ' ip,load,require,populate,list,', 'lsi_method': ' load_ips,requires_ips,ips_loaded,populate_from_list,load_ips_ifconfig,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)'}, 'execution_paths': {138: 1, 139: 1, 140: 1, 141: 1, 142: 1, 143: 1, 144: 1, 145: 1, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1, 152: 1, 153: 1, 154: 1, 155: 1, 156: 1, 157: 1}}, {'key': 1012, 'parent': 109, 'tfidf_word': 'addresses local netifaces output get load gethostbyname require dumb ip ', 'tfidf_method': '_load_ips_ipconfig NoIPAddresses local_ips public_ips _get_output _load_ips_netifaces _load_ips_gethostbyname _load_ips_dumb _requires_ips ips_loaded ', 'lda_word': ' ip,load,test,list,populate,', 'lda_method': ' test_load_ips,load_ips,load_ips_netifaces,load_ips_ip,populate_from_list,', 'lsi_word': ' ip,load,test,populate,list,', 'lsi_method': ' load_ips,test_load_ips,populate_from_list,uniq_stable,load_ips_ipconfig,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)'}, 'execution_paths': {158: 1, 1113: 1, 1114: 1, 1115: 1, 1116: 1, 1117: 1, 1118: 1, 1119: 1, 1120: 1, 1121: 1, 1122: 1, 1123: 1, 1124: 1, 1125: 1, 1126: 1, 1127: 1, 1128: 1, 1129: 1, 1130: 1, 1131: 1, 1132: 1, 1133: 1}}, {'key': 1014, 'parent': 110, 'tfidf_word': 'manager load no run async such cleanup file connection kernel ', 'tfidf_method': 'test_find_connection_file init_kernel_manager client NoSuchKernel test_mixin_record_random_ports run_kernel start_new_async_kernel start_new_kernel init_kernel_client test_mixin_cleanup_random_ports ', 'lda_word': ' connection,file,load,initialize,init,', 'lda_method': ' initialize,init_ssh,load_connection_file,load_connection_info,record_random_port_names,', 'lsi_word': ' connection,file,load,initialize,test,', 'lsi_method': ' initialize,load_connection_file,record_random_port_names,init_connection_file,load_connection_info,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'manager.py', 'test_connect.py'], 'execution_path_count': 33, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '220': 'init_kernel_client(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}, 'execution_paths': {162: 1, 163: 1, 164: 1, 165: 1, 166: 1, 167: 1, 168: 1, 169: 1, 170: 1, 171: 1, 172: 1, 409: 1, 433: 1, 1057: 1, 1058: 1, 1059: 1, 1064: 1, 1065: 1, 1066: 1, 1076: 1, 1077: 1, 1078: 1, 1083: 1, 1084: 1, 1085: 1, 1095: 1, 1096: 1, 1097: 1, 1100: 1, 1101: 1, 1102: 1, 1108: 1, 1111: 1}}, {'key': 1019, 'parent': 111, 'tfidf_word': 'signal sign adapt message control serialize utcnow socket connect msg ', 'tfidf_method': 'send send send_interrupt Message interrupt_kernel interrupt_kernel signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' socket,connect,kernel,initialize,sigint,', 'lda_method': ' handle_sigint,interrupt_kernel,initialize,msg,send,', 'lsi_word': ' msg,kernel,interrupt,initialize,sigint,', 'lsi_method': ' msg,interrupt_kernel,initialize,handle_sigint,msg_id,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 11, 'files': ['runapp.py', 'multikernelmanager.py', 'manager.py', 'session.py', 'connect.py', 'channels.py', 'win_interrupt.py', 'adapter.py', 'test_adapter.py', 'threaded.py', 'managerabc.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '365': 'signal_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '372': 'interrupt_kernel(managerabc.py)'}, 'execution_paths': {186: 1, 187: 1, 188: 1, 189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 195: 1, 196: 1, 197: 1, 198: 1, 199: 1, 200: 1, 201: 1, 202: 1, 203: 1, 204: 1, 205: 1, 206: 1, 207: 1, 208: 1, 209: 1, 210: 1}}, {'key': 1006, 'parent': 105, 'tfidf_word': 'ready shell control kernel reqrep wrap get recv msg output ', 'tfidf_method': 'is_alive get_control_msg get_shell_msg get_control_msg wrapped _output_hook_kernel reqrep reqrep _output_hook_kernel wrapped ', 'lda_word': ' start,msg,recv,get,interactive,', 'lda_method': ' start,execute_interactive,msg,is_alive,stdin_hook_default,', 'lsi_word': ' msg,start,interactive,execute,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; input(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br>', 'text_summary': '', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '118': '_output_hook_default(client.py)', '119': '_output_hook_kernel(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '112': 'is_alive(channels.py)', '97': 'execute_interactive(client.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '96': '_stdin_hook_default(client.py)'}, 'execution_paths': {220: 1, 221: 1, 222: 1, 223: 1, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1, 233: 1, 234: 1, 235: 1, 236: 1, 238: 1, 239: 1, 240: 1, 241: 1, 242: 1, 243: 1, 244: 1, 245: 1, 247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 258: 1, 259: 1, 260: 1, 261: 1, 262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 1, 269: 1, 270: 1, 271: 1, 272: 1, 273: 1}}, {'key': 1022, 'parent': 112, 'tfidf_word': 'execute interrupt hb poll shutdown del cleanup stdin iopub shell ', 'tfidf_method': 'do_execute start_new_kernel poll connect_hb interrupt_kernel __del__ stdin_channel shell_channel iopub_channel control_channel ', 'lda_word': ' kernel,socket,shutdown,connect,cleanup,', 'lda_method': ' create_connected_socket,make_url,shutdown_kernel,restart_kernel,connect_control_socket,', 'lsi_word': ' connect,socket,kernel,url,create,', 'lsi_method': ' create_connected_socket,make_url,shutdown_kernel,close_control_socket,cleanup_resources,', 'spm_method': '  &#187; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'connect.py', 'client.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '168': 'shell_channel(client.py)', '206': 'connect_shell(connect.py)', '164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)'}, 'execution_paths': {297: 1, 303: 1, 307: 1, 311: 1, 312: 1, 349: 1, 350: 1, 374: 1, 378: 1, 382: 1, 383: 1, 437: 1, 441: 1, 479: 1, 482: 1, 485: 1, 489: 1, 596: 1, 597: 1, 598: 1, 599: 1, 600: 1, 606: 1, 607: 1, 608: 1, 609: 1, 610: 1, 1295: 1, 1299: 1}}, {'key': 1024, 'parent': 112, 'tfidf_word': 'sign serialize utcnow restarter thread message kernel send msg cleanup ', 'tfidf_method': 'send send adapt stop_restarter serialize utcnow Message thread_send sign send ', 'lda_word': ' cleanup,kernel,connection,file,resource,', 'lda_method': ' cleanup_ipc_files,port,cleanup_resources,start_new_async_kernel,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,msg,request,async,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,extract_header,start_new_async_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'connect.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 40, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '327': 'finish_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {301: 1, 302: 1, 304: 1, 305: 1, 306: 1, 308: 1, 309: 1, 313: 1, 314: 1, 315: 1, 317: 1, 318: 1, 319: 1, 320: 1, 322: 1, 324: 1, 326: 1, 328: 1, 333: 1, 334: 1, 372: 1, 373: 1, 375: 1, 376: 1, 377: 1, 379: 1, 380: 1, 384: 1, 385: 1, 386: 1, 388: 1, 389: 1, 390: 1, 391: 1, 393: 1, 395: 1, 397: 1, 399: 1, 404: 1, 405: 1}}, {'key': 1002, 'parent': 101, 'tfidf_word': 'shutdown unique default found handle token tracking msg execute send ', 'tfidf_method': 'test_display_data test_execute_request test_no_adapt test_object_info_reply test_object_info_request test_rename_type test_same_version test_complete_reply test_input_request test_kernel_info_reply ', 'lda_word': ' msg,kernel,header,client,blocking,', 'lda_method': ' msg,blockingkernelclient,msg_id,msg_header,shutdown,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 112, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {310: 1, 316: 1, 321: 1, 323: 1, 325: 1, 327: 1, 348: 1, 356: 1, 361: 1, 367: 1, 381: 1, 387: 1, 392: 1, 394: 1, 396: 1, 398: 1, 468: 1, 470: 1, 476: 1, 491: 1, 493: 1, 499: 1, 504: 1, 506: 1, 512: 1, 515: 1, 517: 1, 523: 1, 528: 1, 530: 1, 536: 1, 538: 1, 540: 1, 546: 1, 548: 1, 550: 1, 556: 1, 559: 1, 561: 1, 567: 1, 569: 1, 571: 1, 577: 1, 619: 1, 621: 1, 627: 1, 634: 1, 636: 1, 642: 1, 644: 1, 646: 1, 652: 1, 654: 1, 656: 1, 662: 1, 664: 1, 666: 1, 672: 1, 674: 1, 676: 1, 682: 1, 684: 1, 686: 1, 692: 1, 730: 1, 732: 1, 738: 1, 740: 1, 748: 1, 754: 1, 761: 1, 769: 1, 772: 1, 775: 1, 789: 1, 795: 1, 797: 1, 799: 1, 805: 1, 858: 1, 865: 1, 871: 1, 892: 1, 894: 1, 900: 1, 903: 1, 916: 1, 922: 1, 926: 1, 931: 1, 936: 1, 942: 1, 946: 1, 951: 1, 956: 1, 961: 1, 966: 1, 971: 1, 976: 1, 984: 1, 990: 1, 994: 1, 999: 1, 1005: 1, 1009: 1, 1014: 1, 1019: 1, 1024: 1, 1029: 1, 1034: 1, 1039: 1, 1390: 1}}, {'key': 1017, 'parent': 110, 'tfidf_word': 'url get create connection file start kernel spec connect socket ', 'tfidf_method': 'KernelSpec from_ns _launch_kernel _connect_control_socket _get_env_substitutions local_ips is_local_ip _make_url start_restarter _create_connected_socket ', 'lda_word': ' kernel,start,pre,new,restart,', 'lda_method': ' format_kernel_cmd,pre_start_kernel,start_kernel,from_ns,restart_kernel,', 'lsi_word': ' kernel,start,pre,async,new,', 'lsi_method': ' start_kernel,pre_start_kernel,start_new_async_kernel,restart_kernel,format_kernel_cmd,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {336: 1, 337: 1, 338: 1, 339: 1, 340: 1, 341: 1, 342: 1, 343: 1, 344: 1, 345: 1, 410: 1, 411: 1, 412: 1, 413: 1, 414: 1, 415: 1, 416: 1, 417: 1, 418: 1, 419: 1, 1361: 1, 1362: 1, 1363: 1}}, {'key': 1004, 'parent': 103, 'tfidf_word': 'data input adapt handle found default token tracking execute send ', 'tfidf_method': 'test_display_data test_execute_request test_kernel_info_reply test_no_adapt test_object_info_reply_not_found test_object_info_request test_same_version test_complete_reply test_input_request test_object_info_reply ', 'lda_word': ' msg,test,extract,header,identity,', 'lda_method': ' shutdown,asynckernelclient,msg,extract_header,blockingkernelclient,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 99, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {347: 1, 355: 1, 360: 1, 366: 1, 467: 1, 469: 1, 475: 1, 490: 1, 492: 1, 498: 1, 503: 1, 505: 1, 511: 1, 514: 1, 516: 1, 522: 1, 527: 1, 529: 1, 535: 1, 537: 1, 539: 1, 545: 1, 547: 1, 549: 1, 555: 1, 558: 1, 560: 1, 566: 1, 568: 1, 570: 1, 576: 1, 618: 1, 620: 1, 626: 1, 633: 1, 635: 1, 641: 1, 643: 1, 645: 1, 651: 1, 653: 1, 655: 1, 661: 1, 663: 1, 665: 1, 671: 1, 673: 1, 675: 1, 681: 1, 683: 1, 685: 1, 691: 1, 729: 1, 731: 1, 737: 1, 739: 1, 747: 1, 753: 1, 760: 1, 768: 1, 771: 1, 774: 1, 788: 1, 796: 1, 798: 1, 804: 1, 857: 1, 864: 1, 870: 1, 891: 1, 893: 1, 899: 1, 902: 1, 915: 1, 921: 1, 925: 1, 930: 1, 935: 1, 941: 1, 945: 1, 950: 1, 955: 1, 960: 1, 965: 1, 970: 1, 975: 1, 983: 1, 989: 1, 993: 1, 998: 1, 1004: 1, 1008: 1, 1013: 1, 1018: 1, 1023: 1, 1028: 1, 1033: 1, 1038: 1, 1389: 1}}, {'key': 1003, 'parent': 102, 'tfidf_word': 'identity feed display data channels interrupt version found token execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply_not_found ', 'lda_word': ' msg,header,extract,test,client,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {362: 1, 364: 1, 471: 1, 473: 1, 494: 1, 496: 1, 507: 1, 509: 1, 518: 1, 520: 1, 531: 1, 533: 1, 541: 1, 543: 1, 551: 1, 553: 1, 562: 1, 564: 1, 572: 1, 574: 1, 622: 1, 624: 1, 637: 1, 639: 1, 647: 1, 649: 1, 657: 1, 659: 1, 667: 1, 669: 1, 677: 1, 679: 1, 687: 1, 689: 1, 733: 1, 735: 1, 749: 1, 751: 1, 762: 1, 766: 1, 800: 1, 802: 1, 866: 1, 868: 1, 895: 1, 897: 1, 917: 1, 923: 1, 927: 1, 932: 1, 937: 1, 943: 1, 947: 1, 952: 1, 957: 1, 962: 1, 967: 1, 972: 1, 977: 1, 981: 1, 987: 1, 991: 1, 996: 1, 1002: 1, 1006: 1, 1011: 1, 1016: 1, 1021: 1, 1026: 1, 1031: 1, 1036: 1}}, {'key': 1001, 'parent': 101, 'tfidf_word': 'identity feed display data channels version found token msg execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply ', 'lda_word': ' msg,kernel,header,client,blocking,', 'lda_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {363: 1, 365: 1, 472: 1, 474: 1, 495: 1, 497: 1, 508: 1, 510: 1, 519: 1, 521: 1, 532: 1, 534: 1, 542: 1, 544: 1, 552: 1, 554: 1, 563: 1, 565: 1, 573: 1, 575: 1, 623: 1, 625: 1, 638: 1, 640: 1, 648: 1, 650: 1, 658: 1, 660: 1, 668: 1, 670: 1, 678: 1, 680: 1, 688: 1, 690: 1, 734: 1, 736: 1, 750: 1, 752: 1, 763: 1, 767: 1, 801: 1, 803: 1, 867: 1, 869: 1, 896: 1, 898: 1, 918: 1, 924: 1, 928: 1, 933: 1, 938: 1, 944: 1, 948: 1, 953: 1, 958: 1, 963: 1, 968: 1, 973: 1, 978: 1, 982: 1, 988: 1, 992: 1, 997: 1, 1003: 1, 1007: 1, 1012: 1, 1017: 1, 1022: 1, 1027: 1, 1032: 1, 1037: 1}}, {'key': 1010, 'parent': 108, 'tfidf_word': 'n message send kernel socket connect manager spec cleanup msg ', 'tfidf_method': 'is_alive thread_send _get_env_substitutions start_new_async_kernel local_ips is_local_ip KernelSpecManager ConnectionFileMixin Message send ', 'lda_word': ' kernel,start,new,run,shutdown,', 'lda_method': ' start_new_kernel,run_kernel,start_kernel,pre_start_kernel,shutdown_kernel,', 'lsi_word': ' kernel,start,shutdown,new,run,', 'lsi_method': ' start_new_kernel,run_kernel,msg,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 9, 'files': ['manager.py', 'connect.py', 'kernelspec.py', 'localinterfaces.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 45, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '347': '_launch_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {408: 1, 420: 1, 421: 1, 422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1, 432: 1, 434: 1, 435: 1, 436: 1, 438: 1, 439: 1, 440: 1, 442: 1, 443: 1, 444: 1, 445: 1, 446: 1, 447: 1, 448: 1, 449: 1, 450: 1, 451: 1, 452: 1, 453: 1, 454: 1, 455: 1, 456: 1, 457: 1, 458: 1, 459: 1, 460: 1, 461: 1, 462: 1, 463: 1, 464: 1, 465: 1, 466: 1}}, {'key': 1008, 'parent': 107, 'tfidf_word': 'cinfo process sequence loop lifecycle shutdown id tcp kernel ipc ', 'tfidf_method': 'test_tcp_cinfo test_tcp_lifecycle_with_kernel_id test_tcp_lifecycle test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_shutdown_all test_ipc_lifecycle test_ipc_cinfo test_ipc_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' manager,kernel,tcp,test,multi,', 'lda_method': ' multikernelmanager,wrap,kernel_method,get_tcp_km,asyncmultikernelmanager,', 'lsi_word': ' kernel,tcp,manager,multi,test,', 'lsi_method': ' wrap,kernel_method,multikernelmanager,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1136: 1, 1140: 1, 1144: 1, 1149: 1, 1153: 1, 1157: 1, 1161: 1, 1165: 1, 1169: 1, 1173: 1, 1177: 1, 1179: 1, 1182: 1, 1185: 1, 1187: 1, 1192: 1, 1194: 1, 1197: 1, 1201: 1, 1203: 1, 1206: 1, 1209: 1, 1212: 1}}, {'key': 1005, 'parent': 104, 'tfidf_word': 'n message send kernel socket connect start spec cleanup msg ', 'tfidf_method': '_get_env_substitutions kernel_spec is_alive start_restarter stop_restarter from_ns is_alive restart_kernel is_alive send ', 'lda_word': ' msg,shutdown,kernel,poll,execute,', 'lda_method': ' do_execute,poll,restart_kernel,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,shutdown,execute,poll,restart,', 'lsi_method': ' do_execute,poll,restart_kernel,shutdown_kernel,msg,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br>', 'text_summary': '', 'files_count': 14, 'files': ['signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'session.py', 'adapter.py', 'test_adapter.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 52, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '239': 'stop(restarter.py)', '732': 'is_alive(threaded.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '140': 'is_alive(channelsabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {1276: 1, 1278: 1, 1279: 1, 1280: 1, 1281: 1, 1282: 1, 1283: 1, 1284: 1, 1285: 1, 1286: 1, 1287: 1, 1288: 1, 1289: 1, 1290: 1, 1291: 1, 1292: 1, 1293: 1, 1294: 1, 1296: 1, 1297: 1, 1298: 1, 1300: 1, 1301: 1, 1302: 1, 1303: 1, 1304: 1, 1305: 1, 1306: 1, 1307: 1, 1308: 1, 1309: 1, 1310: 1, 1311: 1, 1312: 1, 1313: 1, 1314: 1, 1315: 1, 1316: 1, 1317: 1, 1318: 1, 1319: 1, 1320: 1, 1321: 1, 1322: 1, 1323: 1, 1324: 1, 1325: 1, 1326: 1, 1327: 1, 1328: 1, 1329: 1, 1330: 1}}, {'key': 1020, 'parent': 111, 'tfidf_word': 'server split openssh forward exception ssh stop port tunnel msg ', 'tfidf_method': 'openssh_tunnel close close _stop_tunnel SSHException forward_tunnel ports close close close ', 'lda_word': ' tunnel,msg,open,paramiko,connection,', 'lda_method': ' tunnel_connection,open_tunnel,openssh_tunnel,stop_tunnel,paramiko_tunnel,', 'lsi_word': ' tunnel,msg,paramiko,open,connection,', 'lsi_method': ' msg,open_tunnel,tunnel_connection,paramiko_tunnel,try_passwordless_paramiko,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['tunnel.py', 'channels.py', 'connect.py', 'threaded.py', 'forward.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {1364: 1, 1365: 1, 1366: 1, 1367: 1, 1368: 1, 1369: 1, 1370: 1, 1371: 1, 1372: 1, 1373: 1, 1374: 1, 1375: 1, 1376: 1, 1377: 1, 1378: 1, 1379: 1, 1380: 1, 1381: 1, 1382: 1, 1383: 1, 1384: 1}}, {'key': 10044, 'parent': 1018, 'tfidf_word': 'manager loop flush permission native io cleanup code restarter tunnel ', 'tfidf_method': 'shutdown_kernel update_metadata test_find_connection_file test_find_connection_file_abspath test_find_connection_file_local test_find_connection_file_relative test_load_connection_file_session test_load_connection_file_session_with_kn test_inspect test_complete_request ', 'lda_word': ' init,test,msg,get,find,', 'lda_method': ' session,close,get_msg,recv,kernelclient,', 'lsi_word': ' kernel,test,start,manager,install,', 'lsi_method': ' init,check_packers,utcnow,get_ipc_km,new_auth,', 'spm_method': '  &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_class_changed(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; get_iopub_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_iopub_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': '', 'files_count': 34, 'files': ['channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py', 'consoleapp.py', 'session.py', 'jsonutil.py', 'kernelspec.py', 'signalkernel.py', 'launcher.py', 'win_interrupt.py', 'connect.py', 'tunnel.py', 'client.py', 'kernelapp.py', 'test_kernelmanager.py', 'adapter.py', 'localinterfaces.py', 'runapp.py', 'kernelspecapp.py', 'restarter.py', 'utils.py', 'manager.py', 'test_client.py', 'test_session.py', 'test_kernelapp.py', 'test_adapter.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_kernelspec.py', 'test_jsonutil.py', 'test_manager.py', 'forward.py'], 'execution_path_count': 324, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)', '133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '136': 'stop(channels.py)', '215': '__init__(consoleapp.py)', '453': '__init__(session.py)', '716': '__init__(threaded.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '392': '__init__(multikernelmanager.py)', '81': '__init__(channels.py)', '107': '__init__(channels.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '465': '_new_auth(session.py)', '441': 'Session(session.py)', '278': '__init__(kernelspec.py)', '509': '__init__(signalkernel.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '198': '_session_default(connect.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '713': 'IOLoopThread(threaded.py)', '724': 'start_channels(threaded.py)', '720': 'start(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '463': '_key_default(session.py)', '462': '_key_changed(session.py)', '470': '_signature_scheme_changed(session.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '246': '_record_started(kernelapp.py)', '53': '__call__(adapter.py)', '55': 'update_header(adapter.py)', '56': 'update_metadata(adapter.py)', '57': 'update_msg_type(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '47': 'V4toV5(adapter.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '711': 'start(utils.py)', '735': 'start(threaded.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '328': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '168': 'shell_channel(client.py)', '196': '_make_url(connect.py)', '723': 'ioloop(threaded.py)', '164': 'iopub_channel(client.py)', '171': 'stdin_channel(client.py)', '160': 'hb_channel(client.py)', '154': 'control_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '102': 'hb_channel(client.py)', '104': 'wait_for_ready(client.py)', '238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '111': 'get_msgs(channels.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)', '554': 'test_inspect(test_client.py)', '551': 'test_complete(test_client.py)', '555': 'test_kernel_info(test_client.py)', '550': 'test_comm_info(test_client.py)', '556': 'test_shutdown(test_client.py)', '678': 'setUp(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '479': 'recv(session.py)', '680': 'test_args(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '709': '__enter__(utils.py)', '710': '__exit__(utils.py)', '704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)', '608': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '158': 'get_shell_msg(client.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '519': 'setUp(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)', '562': 'test_find_connection_file_local(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '510': 'do_execute(signalkernel.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '586': 'env(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '492': 'handle(forward.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}, 'execution_paths': {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 18: 1, 19: 1, 20: 1, 21: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 52: 1, 53: 1, 60: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 74: 1, 75: 1, 76: 1, 78: 1, 79: 1, 80: 1, 81: 1, 86: 1, 87: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 116: 1, 117: 1, 118: 1, 121: 1, 122: 1, 123: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 1, 134: 1, 135: 1, 136: 1, 137: 1, 161: 1, 219: 1, 274: 1, 275: 1, 276: 1, 277: 1, 278: 1, 279: 1, 280: 1, 281: 1, 282: 1, 283: 1, 284: 1, 296: 1, 335: 1, 351: 1, 353: 1, 354: 1, 368: 1, 407: 1, 477: 1, 478: 1, 480: 1, 481: 1, 483: 1, 484: 1, 486: 1, 487: 1, 488: 1, 500: 1, 501: 1, 502: 1, 513: 1, 524: 1, 525: 1, 526: 1, 557: 1, 578: 1, 579: 1, 580: 1, 581: 1, 582: 1, 583: 1, 584: 1, 592: 1, 593: 1, 594: 1, 595: 1, 601: 1, 603: 1, 604: 1, 611: 1, 613: 1, 614: 1, 616: 1, 617: 1, 628: 1, 629: 1, 630: 1, 631: 1, 632: 1, 693: 1, 694: 1, 695: 1, 696: 1, 704: 1, 705: 1, 706: 1, 712: 1, 718: 1, 719: 1, 720: 1, 721: 1, 722: 1, 723: 1, 724: 1, 728: 1, 741: 1, 755: 1, 764: 1, 765: 1, 770: 1, 773: 1, 779: 1, 787: 1, 793: 1, 794: 1, 809: 1, 813: 1, 818: 1, 823: 1, 824: 1, 828: 1, 829: 1, 833: 1, 837: 1, 841: 1, 842: 1, 844: 1, 845: 1, 847: 1, 851: 1, 856: 1, 859: 1, 872: 1, 873: 1, 874: 1, 882: 1, 883: 1, 884: 1, 885: 1, 886: 1, 887: 1, 888: 1, 889: 1, 890: 1, 901: 1, 907: 1, 909: 1, 910: 1, 914: 1, 919: 1, 920: 1, 929: 1, 934: 1, 939: 1, 940: 1, 949: 1, 954: 1, 959: 1, 964: 1, 969: 1, 974: 1, 979: 1, 980: 1, 985: 1, 986: 1, 995: 1, 1000: 1, 1001: 1, 1010: 1, 1015: 1, 1020: 1, 1025: 1, 1030: 1, 1035: 1, 1040: 1, 1063: 1, 1082: 1, 1103: 1, 1104: 1, 1105: 1, 1106: 1, 1107: 1, 1109: 1, 1110: 1, 1112: 1, 1137: 1, 1141: 1, 1145: 1, 1146: 1, 1147: 1, 1150: 1, 1151: 1, 1154: 1, 1158: 1, 1159: 1, 1162: 1, 1166: 1, 1170: 1, 1174: 1, 1188: 1, 1189: 1, 1190: 1, 1195: 1, 1198: 1, 1199: 1, 1215: 1, 1216: 1, 1217: 1, 1218: 1, 1219: 1, 1223: 1, 1237: 1, 1240: 1, 1241: 1, 1242: 1, 1245: 1, 1246: 1, 1249: 1, 1250: 1, 1251: 1, 1254: 1, 1331: 1, 1332: 1, 1333: 1, 1334: 1, 1335: 1, 1336: 1, 1337: 1, 1338: 1, 1339: 1, 1340: 1, 1341: 1, 1342: 1, 1343: 1, 1344: 1, 1345: 1, 1346: 1, 1347: 1, 1348: 1, 1349: 1, 1350: 1, 1351: 1, 1355: 1, 1357: 1, 1358: 1, 1360: 1, 1385: 1, 1386: 1, 1387: 1, 1388: 1, 1394: 1, 1395: 1, 1396: 1, 1401: 1, 1402: 1, 1403: 1}}, {'key': 10051, 'parent': 1023, 'tfidf_word': 'interrupt restarter interactive start async stop channels beating poll kernel ', 'tfidf_method': 'poll start_restarter start_restarter is_alive is_beating wait_for_ready execute_interactive wait_for_ready stop_channels execute_interactive ', 'lda_word': ' kernel,launch,shutdown,alive,restart,', 'lda_method': ' launch_kernel,has_kernel,interrupt_kernel,signal_kernel,is_alive,', 'lsi_word': ' kernel,shutdown,launch,async,kill,', 'lsi_method': ' has_kernel,launch_kernel,shutdown_kernel,is_alive,kill_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['channels.py', 'manager.py', 'threaded.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '725': 'stop_channels(threaded.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '327': 'finish_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '231': 'start_restarter(manager.py)', '228': 'start_restarter(manager.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)'}, 'execution_paths': {9: 1, 100: 1, 237: 1, 246: 1, 298: 1, 299: 1, 300: 1, 329: 1, 330: 1, 331: 1, 332: 1, 346: 1, 352: 1, 369: 1, 370: 1, 371: 1, 400: 1, 401: 1, 402: 1, 403: 1, 586: 1, 605: 1, 615: 1, 698: 1, 1277: 1}}, {'key': 10035, 'parent': 1018, 'tfidf_word': 'console connection file find i kn python run session app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session IPythonConsoleApp RunApp test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' app,console,connection,file,jupyter,', 'lda_method': ' dummyconsoleapp,jupyterconsoleapp,connectionfilemixin,test_app_load_connection_file,test_find_connection_file,', 'lsi_word': ' app,console,connection,file,jupyter,', 'lsi_method': ' jupyterconsoleapp,dummyconsoleapp,connectionfilemixin,session,test_find_connection_file,', 'spm_method': '  &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_find_connection_file(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; Session(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'runapp.py', 'test_connect.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '434': 'RunApp(runapp.py)', '564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {16: 1, 17: 1, 159: 1, 160: 1, 1048: 1, 1049: 1, 1067: 1, 1068: 1, 1086: 1, 1087: 1, 1098: 1, 1099: 1}}, {'key': 10011, 'parent': 1007, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' packer,init,check,date,utcnow,', 'lda_method': ' init,check_packers,squash_dates,utcnow,test_datetimes_msgpack,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,setup,', 'spm_method': '  &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {22: 1, 23: 1, 61: 1, 62: 1, 725: 1, 726: 1, 784: 1, 785: 1, 806: 1, 807: 1, 810: 1, 811: 1, 815: 1, 816: 1, 820: 1, 821: 1, 825: 1, 826: 1, 830: 1, 831: 1, 834: 1, 835: 1, 838: 1, 839: 1, 848: 1, 849: 1, 853: 1, 854: 1, 904: 1, 905: 1, 911: 1, 912: 1, 1060: 1, 1061: 1, 1079: 1, 1080: 1}}, {'key': 10019, 'parent': 1013, 'tfidf_word': 'args packer pack msgpack version kn id cull pickle zero ', 'tfidf_method': 'test_args test_session_id setUp test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' init,auth,new,test,session,', 'lda_method': ' new_auth,init,session_default,test_load_connection_file_session,test_args,', 'lsi_word': ' init,new,auth,test,bad,', 'lsi_method': ' init,new_auth,setup,test_cull_digest_history,test_default_version,', 'spm_method': '  &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {24: 1, 63: 1, 727: 1, 786: 1, 808: 1, 812: 1, 817: 1, 822: 1, 827: 1, 832: 1, 836: 1, 840: 1, 850: 1, 855: 1, 906: 1, 913: 1, 1062: 1, 1081: 1}}, {'key': 10049, 'parent': 1021, 'tfidf_word': 'extract id passwordless ssh try exception openssh server split msg ', 'tfidf_method': '_try_passwordless_paramiko msg msg msg extract_header msg_header msg_id SSHException _split_server _try_passwordless_openssh ', 'lda_word': ' msg,passwordless,tunnel,try,paramiko,', 'lda_method': ' msg,try_passwordless_ssh,tunnel_to_kernel,try_passwordless_paramiko,extract_header,', 'lsi_word': ' msg,passwordless,try,ssh,kernel,', 'lsi_method': ' msg,try_passwordless_ssh,tunnel_to_kernel,try_passwordless_paramiko,msg_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)'}, 'execution_paths': {40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1}}, {'key': 10037, 'parent': 1018, 'tfidf_word': 'select close kernel test tunnel random port ', 'tfidf_method': 'select_random_ports tunnel_to_kernel test_random_ports close close ports close close close ', 'lda_word': ' port,random,select,test,close,', 'lda_method': ' close,tunnel_to_kernel,select_random_ports,test_random_ports,port,', 'lsi_word': ' port,random,select,close,test,', 'lsi_method': ' select_random_ports,close,tunnel_to_kernel,test_random_ports,port,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['connect.py', 'tunnel.py', 'channels.py', 'threaded.py', 'test_ssh.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '701': 'test_random_ports(test_ssh.py)'}, 'execution_paths': {54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 876: 1, 877: 1, 878: 1, 879: 1, 880: 1, 881: 1}}, {'key': 10038, 'parent': 1018, 'tfidf_word': 'check get id finish interrupt restart signal kernel shutdown ', 'tfidf_method': '_check_kernel_id get_kernel finish_shutdown interrupt_kernel restart_kernel shutdown_all shutdown_kernel signal_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,check,get,shutdown,finish,', 'lda_method': ' check_kernel_id,get_kernel,shutdown_all,finish_shutdown,interrupt_kernel,', 'lsi_word': ' kernel,check,get,shutdown,signal,', 'lsi_method': ' check_kernel_id,get_kernel,shutdown_all,shutdown_kernel,finish_shutdown,', 'spm_method': '  &#187; interrupt_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; restart_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; signal_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'421': 'shutdown_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)'}, 'execution_paths': {73: 1, 77: 1, 82: 1, 83: 1, 84: 1, 85: 1, 88: 1}}, {'key': 10042, 'parent': 1018, 'tfidf_word': 'deserialize sign test send recv handle raw serialize unserialize ', 'tfidf_method': 'deserialize sign recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' deserialize,sign,recv,handle,unserialize,', 'lda_method': ' deserialize,test_send,sign,recv,test_serialize,', 'lsi_word': ' deserialize,sign,test,send,recv,', 'lsi_method': ' deserialize,sign,recv,test_send,handle,', 'spm_method': '  &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; sign(session.py) . <br> &#187; test_send_raw(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '695': 'test_send_raw(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {112: 1, 743: 1, 756: 1, 780: 1, 860: 1, 1397: 1}}, {'key': 10024, 'parent': 1016, 'tfidf_word': 'serialize raw naive pickle msgpack ms handle default precision unserialize ', 'tfidf_method': 'test_datetimes_msgpack test_datetimes test_extract_date_from_naive test_extract_dates test_send_raw test_date_default handle unserialize test_parse_ms_precision test_serialize ', 'lda_word': ' date,extract,tzinfo,ensure,test,', 'lda_method': ' deserialize,extract_dates,ensure_tzinfo,parse_date,recv,', 'lsi_word': ' date,extract,test,parse,ensure,', 'lsi_method': ' ensure_tzinfo,parse_date,extract_dates,deserialize,datetime_test,', 'spm_method': '  &#187; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['session.py', 'jsonutil.py', 'test_session.py', 'test_jsonutil.py', 'forward.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '575': 'test_date_default(test_jsonutil.py)', '492': 'handle(forward.py)'}, 'execution_paths': {113: 1, 744: 1, 757: 1, 781: 1, 843: 1, 846: 1, 852: 1, 861: 1, 1352: 1, 1353: 1, 1354: 1, 1356: 1, 1398: 1}}, {'key': 10029, 'parent': 1018, 'tfidf_word': 'recv send default interrupt kernel raw serialize tracking unserialize version ', 'tfidf_method': 'send test_send recv handle interrupt_kernel unserialize test_default_version test_send_raw test_serialize test_tracking ', 'lda_word': ' adapt,utcnow,deserialize,test,send,', 'lda_method': ' send,utcnow,adapt,interrupt_kernel,deserialize,', 'lsi_word': ' adapt,utcnow,send,test,deserialize,', 'lsi_method': ' adapt,utcnow,deserialize,send,test_send,', 'spm_method': '  &#187; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; handle(forward.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['session.py', 'adapter.py', 'manager.py', 'test_session.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '698': 'test_tracking(test_session.py)', '695': 'test_send_raw(test_session.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {114: 1, 359: 1, 745: 1, 758: 1, 778: 1, 782: 1, 792: 1, 862: 1, 908: 1, 1393: 1, 1399: 1}}, {'key': 10034, 'parent': 1018, 'tfidf_word': 'history send recv digest clone handle raw serialize unserialize zero ', 'tfidf_method': 'deserialize recv test_send unserialize handle test_clone test_cull_digest_history test_send_raw test_serialize test_zero_digest_history ', 'lda_word': ' digest,history,add,cull,deserialize,', 'lda_method': ' cull_digest_history,add_digest,deserialize,test_send,test_send_raw,', 'lsi_word': ' digest,history,cull,add,test,', 'lsi_method': ' cull_digest_history,add_digest,deserialize,recv,test_send,', 'spm_method': '  &#187; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '695': 'test_send_raw(test_session.py)', '686': 'test_clone(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {115: 1, 746: 1, 759: 1, 783: 1, 814: 1, 819: 1, 863: 1, 875: 1, 1400: 1}}, {'key': 10023, 'parent': 1015, 'tfidf_word': 'find get install specs prefix priority subclass spec kernel remove ', 'tfidf_method': 'get_all_specs find_kernel_specs remove_kernel_spec test_find_all_specs test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority test_remove_kernel_spec test_subclass ', 'lda_word': ' kernel,specs,find,test,list,', 'lda_method': ' list_kernels_in,find_kernel_specs,is_valid_kernel_name,is_kernel_dir,test_install_kernel_spec_prefix,', 'lsi_word': ' kernel,specs,find,list,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_valid_kernel_name,is_kernel_dir,get_all_specs,', 'spm_method': '  &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_kernel_spec_priority(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {119: 1, 120: 1, 1220: 1, 1221: 1, 1235: 1, 1236: 1, 1238: 1, 1239: 1, 1243: 1, 1244: 1, 1247: 1, 1248: 1, 1252: 1, 1253: 1, 1262: 1, 1263: 1}}, {'key': 10013, 'parent': 1009, 'tfidf_word': 'list ksm file connection native up manager spec kernel async ', 'tfidf_method': '_kernel_spec_manager_default MyKSM RemoveKernelSpec ListKernelSpecs InstallNativeKernelSpec InstallKernelSpec KernelApp IOLoopKernelManager _kernel_spec_manager_default test_connection_file_real_path ', 'lda_word': ' subclass,test,spec,kernel,ksm,', 'lda_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelspecapp,installkernelspec,', 'lsi_word': ' kernel,spec,manager,app,async,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelmanager,kernelspecapp,', 'spm_method': '  &#187; KernelSpecApp(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MyKSM(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['kernelapp.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'test_kernelspec.py', 'test_manager.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '618': 'setUp(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {124: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 295: 1, 406: 1, 602: 1, 612: 1, 1214: 1, 1255: 1, 1269: 1, 1359: 1}}, {'key': 10017, 'parent': 1011, 'tfidf_word': 'no local stable uniq netifaces output get load dumb ip ', 'tfidf_method': '_load_ips_ifconfig _load_ips_ip _load_ips_ipconfig NoIPAddresses _uniq_stable local_ips public_ips _get_output _load_ips_netifaces _load_ips_dumb ', 'lda_word': ' ip,load,require,list,populate,', 'lda_method': ' load_ips,populate_from_list,requires_ips,ips_loaded,load_ips_ifconfig,', 'lsi_word': ' ip,load,require,list,populate,', 'lsi_method': ' requires_ips,load_ips,ips_loaded,populate_from_list,load_ips_ipconfig,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)'}, 'execution_paths': {138: 1, 139: 1, 140: 1, 141: 1, 142: 1, 143: 1, 144: 1, 145: 1, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1, 152: 1, 153: 1, 154: 1, 155: 1, 156: 1, 157: 1}}, {'key': 10018, 'parent': 1012, 'tfidf_word': 'addresses local netifaces output get load gethostbyname require dumb ip ', 'tfidf_method': '_load_ips_ipconfig NoIPAddresses local_ips public_ips _get_output _load_ips_netifaces _load_ips_gethostbyname _load_ips_dumb _requires_ips ips_loaded ', 'lda_word': ' ip,load,test,populate,list,', 'lda_method': ' load_ips_ip,test_load_ips,populate_from_list,load_ips,public_ips,', 'lsi_word': ' ip,load,test,populate,list,', 'lsi_method': ' load_ips,test_load_ips,populate_from_list,uniq_stable,load_ips_ip,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)'}, 'execution_paths': {158: 1, 1113: 1, 1114: 1, 1115: 1, 1116: 1, 1117: 1, 1118: 1, 1119: 1, 1120: 1, 1121: 1, 1122: 1, 1123: 1, 1124: 1, 1125: 1, 1126: 1, 1127: 1, 1128: 1, 1129: 1, 1130: 1, 1131: 1, 1132: 1, 1133: 1}}, {'key': 10021, 'parent': 1014, 'tfidf_word': 'default ip manager load such no client file connection kernel ', 'tfidf_method': '_record_random_port_names init_ssh localhost load_connection_info write_connection_file init_connection_file _ip_default init_kernel_manager init_kernel_client NoSuchKernel ', 'lda_word': ' initialize,kernel,init,localhost,client,', 'lda_method': ' initialize,localhost,init_kernel_manager,init_connection_file,load_connection_info,', 'lsi_word': ' connection,initialize,file,load,init,', 'lsi_method': ' initialize,load_connection_file,record_random_port_names,init_ssh,localhost,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_info(connect.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '220': 'init_kernel_client(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)'}, 'execution_paths': {162: 1, 163: 1, 164: 1, 165: 1, 166: 1, 167: 1, 168: 1, 169: 1, 170: 1, 171: 1, 172: 1}}, {'key': 10047, 'parent': 1021, 'tfidf_word': 'initialize header extract id info kernel unpause get shell msg ', 'tfidf_method': 'kernel_info msg msg msg extract_header msg_header msg_id unpause unpause get_shell_msg ', 'lda_word': ' initialize,info,kernel,init,unpause,', 'lda_method': ' msg,init_kernel_info,initialize,kernel_info,extract_header,', 'lsi_word': ' msg,info,kernel,initialize,init,', 'lsi_method': ' msg,initialize,init_kernel_info,kernel_info,msg_id,', 'spm_method': '  &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['runapp.py', 'client.py', 'session.py', 'test_adapter.py', 'channels.py', 'channelsabc.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '158': 'get_shell_msg(client.py)'}, 'execution_paths': {173: 1, 174: 1, 175: 1, 176: 1, 177: 1, 178: 1, 179: 1, 180: 1, 181: 1, 182: 1, 183: 1, 184: 1, 185: 1}}, {'key': 10045, 'parent': 1019, 'tfidf_word': 'signal sign adapt message control serialize utcnow socket connect msg ', 'tfidf_method': 'send send send_interrupt Message interrupt_kernel interrupt_kernel signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' msg,kernel,sigint,initialize,interrupt,', 'lda_method': ' msg,handle_sigint,initialize,interrupt_kernel,msg_header,', 'lsi_word': ' msg,kernel,interrupt,sigint,initialize,', 'lsi_method': ' msg,handle_sigint,interrupt_kernel,initialize,msg_id,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 11, 'files': ['runapp.py', 'multikernelmanager.py', 'manager.py', 'session.py', 'connect.py', 'channels.py', 'win_interrupt.py', 'adapter.py', 'test_adapter.py', 'threaded.py', 'managerabc.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '365': 'signal_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '372': 'interrupt_kernel(managerabc.py)'}, 'execution_paths': {186: 1, 187: 1, 188: 1, 189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 195: 1, 196: 1, 197: 1, 198: 1, 199: 1, 200: 1, 201: 1, 202: 1, 203: 1, 204: 1, 205: 1, 206: 1, 207: 1, 208: 1, 209: 1, 210: 1}}, {'key': 10009, 'parent': 1006, 'tfidf_word': 'hook ready reply kernel reqrep shell control wrap output msg ', 'tfidf_method': 'get_control_msg is_alive wrapped _output_hook_kernel reqrep msg_ready is_alive get_msg is_alive msg_ready ', 'lda_word': ' msg,start,default,stdin,hook,', 'lda_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'lsi_word': ' msg,start,interactive,execute,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '118': '_output_hook_default(client.py)', '119': '_output_hook_kernel(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '112': 'is_alive(channels.py)'}, 'execution_paths': {220: 1, 221: 1, 222: 1, 223: 1, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1, 233: 1, 234: 1, 235: 1, 236: 1, 238: 1, 239: 1, 240: 1, 241: 1, 242: 1, 243: 1, 244: 1, 245: 1}}, {'key': 10010, 'parent': 1006, 'tfidf_word': 'ready shell control kernel reqrep wrap get recv msg output ', 'tfidf_method': 'is_alive is_alive is_alive msg_ready reqrep msg_ready _output_hook_kernel is_alive wrapped is_alive ', 'lda_word': ' start,interactive,msg,execute,default,', 'lda_method': ' start,msg,stdin_hook_default,execute_interactive,input,', 'lsi_word': ' msg,start,execute,interactive,hook,', 'lsi_method': ' start,msg,execute_interactive,stdin_hook_default,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 10, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'threaded.py', 'channelsabc.py', 'channels.py', 'multikernelmanager.py', 'managerabc.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 27, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)'}, 'execution_paths': {247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 258: 1, 259: 1, 260: 1, 261: 1, 262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 1, 269: 1, 270: 1, 271: 1, 272: 1, 273: 1}}, {'key': 10048, 'parent': 1021, 'tfidf_word': 'header input extract id start msg ', 'tfidf_method': 'input start start msg msg msg extract_header msg_header msg_id ', 'lda_word': ' start,msg,extract,input,header,', 'lda_method': ' start,msg,input,msg_id,msg_header,', 'lsi_word': ' msg,start,input,header,extract,', 'lsi_method': ' msg,start,input,msg_id,msg_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {285: 1, 286: 1, 287: 1, 288: 1, 289: 1, 290: 1, 291: 1, 292: 1, 293: 1, 294: 1}}, {'key': 10050, 'parent': 1022, 'tfidf_word': 'execute interrupt hb poll shutdown del cleanup stdin iopub shell ', 'tfidf_method': 'do_execute start_new_kernel poll connect_hb interrupt_kernel __del__ stdin_channel shell_channel iopub_channel control_channel ', 'lda_word': ' shell,connect,url,create,make,', 'lda_method': ' create_connected_socket,make_url,shutdown_kernel,connect_stdin,close_control_socket,', 'lsi_word': ' connect,socket,kernel,url,create,', 'lsi_method': ' create_connected_socket,make_url,shutdown_kernel,close_control_socket,cleanup_resources,', 'spm_method': '  &#187; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'connect.py', 'client.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '168': 'shell_channel(client.py)', '206': 'connect_shell(connect.py)', '164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)'}, 'execution_paths': {297: 1, 303: 1, 307: 1, 311: 1, 312: 1, 349: 1, 350: 1, 374: 1, 378: 1, 382: 1, 383: 1, 437: 1, 441: 1, 479: 1, 482: 1, 485: 1, 489: 1, 596: 1, 597: 1, 598: 1, 599: 1, 600: 1, 606: 1, 607: 1, 608: 1, 609: 1, 610: 1, 1295: 1, 1299: 1}}, {'key': 10053, 'parent': 1024, 'tfidf_word': 'shutdown kill ipc finish port connection restarter stop kernel cleanup ', 'tfidf_method': 'restart_kernel cleanup_resources _launch_kernel cleanup_connection_file cleanup_ipc_files ports _kill_kernel finish_shutdown cleanup stop_restarter ', 'lda_word': ' kernel,cleanup,start,async,new,', 'lda_method': ' shutdown_kernel,restart_kernel,stop_restarter,cleanup_resources,launch_kernel,', 'lsi_word': ' kernel,shutdown,cleanup,new,async,', 'lsi_method': ' shutdown_kernel,cleanup_resources,restart_kernel,start_new_async_kernel,launch_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; ports(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '327': 'finish_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {301: 1, 302: 1, 304: 1, 305: 1, 306: 1, 308: 1, 333: 1, 334: 1, 372: 1, 373: 1, 375: 1, 376: 1, 377: 1, 379: 1, 404: 1, 405: 1}}, {'key': 10052, 'parent': 1024, 'tfidf_word': 'kernel shutdown send sign adapt thread message serialize utcnow msg ', 'tfidf_method': 'msg send adapt send serialize thread_send utcnow Message sign send ', 'lda_word': ' shutdown,kernel,send,request,restart,', 'lda_method': ' msg,request_shutdown,shutdown_kernel,restart_kernel,extract_header,', 'lsi_word': ' shutdown,kernel,msg,request,send,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,extract_header,start_new_async_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 24, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {309: 1, 313: 1, 314: 1, 315: 1, 317: 1, 318: 1, 319: 1, 320: 1, 322: 1, 324: 1, 326: 1, 328: 1, 380: 1, 384: 1, 385: 1, 386: 1, 388: 1, 389: 1, 390: 1, 391: 1, 393: 1, 395: 1, 397: 1, 399: 1}}, {'key': 10003, 'parent': 1002, 'tfidf_word': 'raw default serialize channels tracking identity version msg send execute ', 'tfidf_method': 'test_default_version execute test_feed_identities test_msg start_channels test_send_raw test_serialize test_tracking test_unique_msg_ids is_complete ', 'lda_word': ' msg,header,kernel,client,shutdown,', 'lda_method': ' handle,send,msg_header,msg_id,msg,', 'lsi_word': ' msg,kernel,header,shutdown,request,', 'lsi_method': ' msg,msg_header,msg_id,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'test_adapter.py', 'client.py', 'test_session.py', 'utils.py', 'forward.py'], 'execution_path_count': 41, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {310: 1, 316: 1, 321: 1, 323: 1, 325: 1, 327: 1, 348: 1, 356: 1, 381: 1, 387: 1, 392: 1, 394: 1, 396: 1, 398: 1, 468: 1, 491: 1, 504: 1, 515: 1, 528: 1, 538: 1, 548: 1, 559: 1, 569: 1, 619: 1, 634: 1, 644: 1, 654: 1, 664: 1, 674: 1, 684: 1, 730: 1, 740: 1, 772: 1, 775: 1, 789: 1, 795: 1, 797: 1, 858: 1, 892: 1, 903: 1, 1390: 1}}, {'key': 10025, 'parent': 1017, 'tfidf_word': 'url get create connection file start kernel spec connect socket ', 'tfidf_method': 'KernelSpec from_ns _launch_kernel _connect_control_socket _get_env_substitutions local_ips is_local_ip _make_url start_restarter _create_connected_socket ', 'lda_word': ' kernel,start,async,new,file,', 'lda_method': ' record_random_port_names,write_connection_file,format_kernel_cmd,test_connection_file_real_path,pre_start_kernel,', 'lsi_word': ' kernel,start,pre,new,async,', 'lsi_method': ' start_kernel,pre_start_kernel,restart_kernel,start_new_async_kernel,format_kernel_cmd,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {336: 1, 337: 1, 338: 1, 339: 1, 340: 1, 341: 1, 342: 1, 343: 1, 344: 1, 345: 1, 410: 1, 411: 1, 412: 1, 413: 1, 414: 1, 415: 1, 416: 1, 417: 1, 418: 1, 419: 1, 1361: 1, 1362: 1, 1363: 1}}, {'key': 10005, 'parent': 1004, 'tfidf_word': 'raw identity handle feed default channels tracking version send execute ', 'tfidf_method': 'start_channels test_default_version test_feed_identities test_msg is_complete test_send_raw test_serialize test_tracking execute handle ', 'lda_word': ' msg,header,extract,send,test,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,client,', 'lsi_method': ' extract_header,msg,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; complete(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; history(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; inspect(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; interrupt_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; test_send(test_session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; shutdown(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'client.py', 'test_session.py', 'utils.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {347: 1, 355: 1, 467: 1, 490: 1, 503: 1, 514: 1, 527: 1, 537: 1, 547: 1, 558: 1, 568: 1, 618: 1, 633: 1, 643: 1, 653: 1, 663: 1, 673: 1, 683: 1, 729: 1, 739: 1, 771: 1, 774: 1, 788: 1, 796: 1, 857: 1, 891: 1, 902: 1, 1389: 1}}, {'key': 10043, 'parent': 1018, 'tfidf_word': 'sign test message send handle interrupt kernel tracking serialize ', 'tfidf_method': 'send serialize sign Message interrupt_kernel handle test_send test_tracking test_serialize ', 'lda_word': ' send,serialize,message,sign,test,', 'lda_method': ' serialize,sign,send,interrupt_kernel,message,', 'lsi_word': ' send,serialize,test,sign,message,', 'lsi_method': ' send,serialize,sign,message,interrupt_kernel,', 'spm_method': '  &#187; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {357: 1, 358: 1, 742: 1, 776: 1, 777: 1, 790: 1, 791: 1, 1391: 1, 1392: 1}}, {'key': 10006, 'parent': 1004, 'tfidf_word': 'identity feed display data channels interrupt version found token execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply_not_found ', 'lda_word': ' msg,extract,header,test,kernel,', 'lda_method': ' msg,extract_header,blockingkernelclient,complete,test_send,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '534': 'msg(test_adapter.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {360: 1, 366: 1, 469: 1, 475: 1, 492: 1, 498: 1, 505: 1, 511: 1, 516: 1, 522: 1, 529: 1, 535: 1, 539: 1, 545: 1, 549: 1, 555: 1, 560: 1, 566: 1, 570: 1, 576: 1, 620: 1, 626: 1, 635: 1, 641: 1, 645: 1, 651: 1, 655: 1, 661: 1, 665: 1, 671: 1, 675: 1, 681: 1, 685: 1, 691: 1, 731: 1, 737: 1, 747: 1, 753: 1, 760: 1, 768: 1, 798: 1, 804: 1, 864: 1, 870: 1, 893: 1, 899: 1, 915: 1, 921: 1, 925: 1, 930: 1, 935: 1, 941: 1, 945: 1, 950: 1, 955: 1, 960: 1, 965: 1, 970: 1, 975: 1, 983: 1, 989: 1, 993: 1, 998: 1, 1004: 1, 1008: 1, 1013: 1, 1018: 1, 1023: 1, 1028: 1, 1033: 1, 1038: 1}}, {'key': 10002, 'parent': 1002, 'tfidf_word': 'identity feed display data channels version found token msg execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply ', 'lda_word': ' msg,header,test,request,complete,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,comm_info,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '534': 'msg(test_adapter.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {361: 1, 367: 1, 470: 1, 476: 1, 493: 1, 499: 1, 506: 1, 512: 1, 517: 1, 523: 1, 530: 1, 536: 1, 540: 1, 546: 1, 550: 1, 556: 1, 561: 1, 567: 1, 571: 1, 577: 1, 621: 1, 627: 1, 636: 1, 642: 1, 646: 1, 652: 1, 656: 1, 662: 1, 666: 1, 672: 1, 676: 1, 682: 1, 686: 1, 692: 1, 732: 1, 738: 1, 748: 1, 754: 1, 761: 1, 769: 1, 799: 1, 805: 1, 865: 1, 871: 1, 894: 1, 900: 1, 916: 1, 922: 1, 926: 1, 931: 1, 936: 1, 942: 1, 946: 1, 951: 1, 956: 1, 961: 1, 966: 1, 971: 1, 976: 1, 984: 1, 990: 1, 994: 1, 999: 1, 1005: 1, 1009: 1, 1014: 1, 1019: 1, 1024: 1, 1029: 1, 1034: 1, 1039: 1}}, {'key': 10004, 'parent': 1003, 'tfidf_word': 'identity feed display data channels interrupt version found token execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply_not_found ', 'lda_word': ' raw,send,msg,test,extract,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {362: 1, 364: 1, 471: 1, 473: 1, 494: 1, 496: 1, 507: 1, 509: 1, 518: 1, 520: 1, 531: 1, 533: 1, 541: 1, 543: 1, 551: 1, 553: 1, 562: 1, 564: 1, 572: 1, 574: 1, 622: 1, 624: 1, 637: 1, 639: 1, 647: 1, 649: 1, 657: 1, 659: 1, 667: 1, 669: 1, 677: 1, 679: 1, 687: 1, 689: 1, 733: 1, 735: 1, 749: 1, 751: 1, 762: 1, 766: 1, 800: 1, 802: 1, 866: 1, 868: 1, 895: 1, 897: 1, 917: 1, 923: 1, 927: 1, 932: 1, 937: 1, 943: 1, 947: 1, 952: 1, 957: 1, 962: 1, 967: 1, 972: 1, 977: 1, 981: 1, 987: 1, 991: 1, 996: 1, 1002: 1, 1006: 1, 1011: 1, 1016: 1, 1021: 1, 1026: 1, 1031: 1, 1036: 1}}, {'key': 10001, 'parent': 1001, 'tfidf_word': 'identity feed display data channels version found token msg execute ', 'tfidf_method': 'test_no_adapt test_kernel_info_reply test_input_request test_execute_request test_execute_reply test_display_data test_complete_request test_complete_reply test_display_data test_object_info_reply ', 'lda_word': ' msg,header,client,test,kernel,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 71, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {363: 1, 365: 1, 472: 1, 474: 1, 495: 1, 497: 1, 508: 1, 510: 1, 519: 1, 521: 1, 532: 1, 534: 1, 542: 1, 544: 1, 552: 1, 554: 1, 563: 1, 565: 1, 573: 1, 575: 1, 623: 1, 625: 1, 638: 1, 640: 1, 648: 1, 650: 1, 658: 1, 660: 1, 668: 1, 670: 1, 678: 1, 680: 1, 688: 1, 690: 1, 734: 1, 736: 1, 750: 1, 752: 1, 763: 1, 767: 1, 801: 1, 803: 1, 867: 1, 869: 1, 896: 1, 898: 1, 918: 1, 924: 1, 928: 1, 933: 1, 938: 1, 944: 1, 948: 1, 953: 1, 958: 1, 963: 1, 968: 1, 973: 1, 978: 1, 982: 1, 988: 1, 992: 1, 997: 1, 1003: 1, 1007: 1, 1012: 1, 1017: 1, 1022: 1, 1027: 1, 1032: 1, 1037: 1}}, {'key': 10016, 'parent': 1010, 'tfidf_word': 'async alive send kernel connect socket manager spec cleanup msg ', 'tfidf_method': 'stop_restarter is_alive thread_send _connect_control_socket start_new_async_kernel KernelSpecManager KernelSpec ConnectionFileMixin utcnow send ', 'lda_word': ' kernel,shutdown,request,new,run,', 'lda_method': ' msg,run_kernel,start_new_kernel,shutdown_kernel,request_shutdown,', 'lsi_word': ' kernel,shutdown,msg,start,new,', 'lsi_method': ' msg,run_kernel,start_new_kernel,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['manager.py', 'connect.py', 'kernelspec.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {408: 1, 420: 1, 421: 1, 432: 1, 434: 1, 435: 1, 436: 1, 438: 1, 439: 1, 440: 1, 442: 1, 443: 1, 444: 1, 445: 1, 446: 1, 447: 1, 448: 1, 449: 1, 450: 1, 451: 1, 452: 1, 453: 1, 454: 1, 455: 1, 456: 1, 457: 1, 458: 1, 459: 1, 460: 1, 461: 1, 462: 1, 463: 1, 464: 1, 465: 1, 466: 1}}, {'key': 10022, 'parent': 1014, 'tfidf_word': 'mixin load find run cleanup async app file connection kernel ', 'tfidf_method': 'client test_load_connection_file_session test_load_connection_file_session_with_kn run_kernel start_new_async_kernel start_new_kernel test_app_load_connection_file test_find_connection_file test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' file,connection,load,record,write,', 'lda_method': ' record_random_port_names,write_connection_file,load_connection_file,init_connection_file,client,', 'lsi_word': ' file,connection,load,port,random,', 'lsi_method': ' write_connection_file,record_random_port_names,load_connection_file,initialize,init_connection_file,', 'spm_method': '  &#187; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'test_connect.py', 'consoleapp.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}, 'execution_paths': {409: 1, 433: 1, 1057: 1, 1064: 1, 1076: 1, 1083: 1, 1095: 1, 1100: 1, 1108: 1, 1111: 1}}, {'key': 10015, 'parent': 1010, 'tfidf_word': 'env get url make create start connect socket spec kernel ', 'tfidf_method': 'kernel_spec _launch_kernel _connect_control_socket start_restarter local_ips is_local_ip KernelSpec _make_url _get_env_substitutions from_ns ', 'lda_word': ' kernel,start,pre,run,new,', 'lda_method': ' start_new_kernel,start_kernel,run_kernel,pre_start_kernel,format_kernel_cmd,', 'lsi_word': ' kernel,start,run,new,pre,', 'lsi_method': ' start_kernel,start_new_kernel,run_kernel,pre_start_kernel,format_kernel_cmd,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)'}, 'execution_paths': {422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1}}, {'key': 10039, 'parent': 1018, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,ready,wait,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': '  &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channelsabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(managerabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(threaded.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {585: 1, 587: 1, 588: 1, 589: 1, 590: 1, 591: 1}}, {'key': 10040, 'parent': 1018, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': '  &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channelsabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(managerabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(threaded.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {697: 1, 699: 1, 700: 1, 701: 1, 702: 1, 703: 1}}, {'key': 10028, 'parent': 1018, 'tfidf_word': 'no such valid subclass get kernel spec dir directory find ', 'tfidf_method': 'NoSuchKernel _is_valid_kernel_name get_kernel_spec _get_kernel_spec_by_name __init__ test_get_kernel_spec test_subclass get_kernel_spec _is_kernel_dir _find_spec_directory ', 'lda_word': ' kernel,get,spec,name,valid,', 'lda_method': ' get_kernel_spec,get_kernel_spec_by_name,setup,test_subclass,init,', 'lsi_word': ' kernel,spec,get,name,set,', 'lsi_method': ' get_kernel_spec,setup,is_valid_kernel_name,nosuchkernel,get_kernel_spec_by_name,', 'spm_method': '  &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '278': '__init__(kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)'}, 'execution_paths': {707: 1, 708: 1, 709: 1, 710: 1, 711: 1, 713: 1, 714: 1, 715: 1, 717: 1, 1224: 1, 1225: 1, 1226: 1, 1228: 1, 1264: 1, 1265: 1, 1266: 1, 1268: 1, 1270: 1, 1271: 1, 1272: 1, 1274: 1}}, {'key': 10026, 'parent': 1018, 'tfidf_word': 'directory test find get subclass kernel spec set up specs ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec get_all_specs test_get_kernel_spec test_subclass setUp test_find_all_specs find_kernel_specs get_kernel_spec ', 'lda_word': ' kernel,spec,directory,get,find,', 'lda_method': ' get_kernel_spec,find_spec_directory,is_kernel_dir,get_all_specs,test_find_all_specs,', 'lsi_word': ' kernel,spec,get,find,directory,', 'lsi_method': ' is_kernel_dir,find_spec_directory,get_kernel_spec,get_all_specs,test_subclass,', 'spm_method': '  &#187; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)'}, 'execution_paths': {716: 1, 1222: 1, 1227: 1, 1233: 1, 1260: 1, 1267: 1, 1273: 1, 1275: 1}}, {'key': 10032, 'parent': 1018, 'tfidf_word': 'test close connection file write localhost port ', 'tfidf_method': 'write_connection_file test_write_connection_file close close ports localhost close close close ', 'lda_word': ' file,connection,write,test,close,', 'lda_method': ' test_write_connection_file,write_connection_file,port,close,localhost,', 'lsi_word': ' file,connection,write,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,port,localhost,', 'spm_method': '  &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1041: 1, 1042: 1, 1043: 1, 1044: 1, 1045: 1, 1046: 1, 1047: 1}}, {'key': 10033, 'parent': 1018, 'tfidf_word': 'load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close close ports localhost close close close ', 'lda_word': ' connection,file,test,load,session,', 'lda_method': ' write_connection_file,test_load_connection_file_session,localhost,close,port,', 'lsi_word': ' file,connection,write,session,load,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,port,localhost,', 'spm_method': '  &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1050: 1, 1051: 1, 1052: 1, 1053: 1, 1054: 1, 1055: 1, 1056: 1}}, {'key': 10020, 'parent': 1014, 'tfidf_word': 'names localhost ip default kn find app file load connection ', 'tfidf_method': 'load_connection_info init_connection_file initialize _ip_default _record_random_port_names localhost test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' connection,load,file,test,info,', 'lda_method': ' load_connection_file,test_load_connection_file_session_with_kn,load_connection_info,ip_default,localhost,', 'lsi_word': ' connection,load,file,test,info,', 'lsi_method': ' load_connection_info,load_connection_file,initialize,init_connection_file,localhost,', 'spm_method': '  &#187; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {1058: 1, 1059: 1, 1065: 1, 1066: 1, 1077: 1, 1078: 1, 1084: 1, 1085: 1, 1096: 1, 1097: 1, 1101: 1, 1102: 1}}, {'key': 10031, 'parent': 1018, 'tfidf_word': 'kn load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close close ports localhost close close close ', 'lda_word': ' connection,file,session,write,test,', 'lda_method': ' close,test_load_connection_file_session_with_kn,write_connection_file,localhost,port,', 'lsi_word': ' connection,file,kn,test,load,', 'lsi_method': ' write_connection_file,test_load_connection_file_session_with_kn,close,port,localhost,', 'spm_method': '  &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1069: 1, 1070: 1, 1071: 1, 1072: 1, 1073: 1, 1074: 1, 1075: 1}}, {'key': 10030, 'parent': 1018, 'tfidf_word': 'app load test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close close ports localhost close close close ', 'lda_word': ' port,file,connection,test,write,', 'lda_method': ' test_app_load_connection_file,write_connection_file,close,port,localhost,', 'lsi_word': ' connection,file,load,test,write,', 'lsi_method': ' test_app_load_connection_file,write_connection_file,close,localhost,port,', 'spm_method': '  &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1088: 1, 1089: 1, 1090: 1, 1091: 1, 1092: 1, 1093: 1, 1094: 1}}, {'key': 10036, 'parent': 1018, 'tfidf_word': 'test loop process thread lifecycle tcp cinfo id sequence shutdown ', 'tfidf_method': '__init__ _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,test,lifecycle,get,init,', 'lda_method': ' init,get_tcp_km,test_start_parallel_process_kernels,test_tcp_lifecycle,test_start_sequence_tcp_kernels,', 'lsi_word': ' tcp,test,lifecycle,get,init,', 'lsi_method': ' get_tcp_km,init,test_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'spm_method': '  &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1134: 1, 1138: 1, 1142: 1, 1155: 1, 1163: 1, 1167: 1, 1171: 1, 1175: 1}}, {'key': 10014, 'parent': 1009, 'tfidf_word': 'sequence cinfo thread manager lifecycle shutdown id tcp ipc kernel ', 'tfidf_method': 'test_tcp_cinfo test_tcp_lifecycle_with_kernel_id test_tcp_lifecycle test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_shutdown_all test_ipc_lifecycle test_ipc_cinfo test_ipc_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,tcp,spec,multi,', 'lda_method': ' test_start_parallel_process_kernels,get_tcp_km,kernelspecmanager,kernelspec,multikernelmanager,', 'lsi_word': ' kernel,manager,spec,tcp,multi,', 'lsi_method': ' kernelspecmanager,kernelspec,multikernelmanager,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1135: 1, 1139: 1, 1143: 1, 1148: 1, 1152: 1, 1156: 1, 1160: 1, 1164: 1, 1168: 1, 1172: 1, 1176: 1, 1178: 1, 1181: 1, 1184: 1, 1186: 1, 1191: 1, 1193: 1, 1196: 1, 1200: 1, 1202: 1, 1205: 1, 1208: 1, 1211: 1}}, {'key': 10012, 'parent': 1008, 'tfidf_word': 'cinfo process sequence loop lifecycle shutdown id tcp kernel ipc ', 'tfidf_method': 'test_tcp_cinfo test_tcp_lifecycle_with_kernel_id test_tcp_lifecycle test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_shutdown_all test_ipc_lifecycle test_ipc_cinfo test_ipc_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,test,lifecycle,parallel,', 'lda_method': ' wrap,kernel_method,multikernelmanager,get_tcp_km,asyncmultikernelmanager,', 'lsi_word': ' kernel,tcp,multi,manager,test,', 'lsi_method': ' kernel_method,multikernelmanager,wrap,get_tcp_km,asyncmultikernelmanager,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 23, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)', '652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1136: 1, 1140: 1, 1144: 1, 1149: 1, 1153: 1, 1157: 1, 1161: 1, 1165: 1, 1169: 1, 1173: 1, 1177: 1, 1179: 1, 1182: 1, 1185: 1, 1187: 1, 1192: 1, 1194: 1, 1197: 1, 1201: 1, 1203: 1, 1206: 1, 1209: 1, 1212: 1}}, {'key': 10041, 'parent': 1018, 'tfidf_word': 'test kernel parallel start tcp loop process thread id lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,tcp,test,raw,kernel,', 'lda_method': ' raw_tcp_lifecycle,run_lifecycle,test_start_parallel_process_kernels,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'lsi_word': ' lifecycle,tcp,raw,run,test,', 'lsi_method': ' raw_tcp_lifecycle,run_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1180: 1, 1183: 1, 1204: 1, 1207: 1, 1210: 1, 1213: 1}}, {'key': 10027, 'parent': 1018, 'tfidf_word': 'find subclass kernel spec specs init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs test_subclass _get_kernel_spec_by_name NoSuchKernel _is_valid_kernel_name __init__ ', 'lda_word': ' get,kernel,spec,test,subclass,', 'lda_method': ' test_find_all_specs,get_kernel_spec,get_all_specs,nosuchkernel,is_valid_kernel_name,', 'lsi_word': ' get,kernel,specs,spec,test,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_find_all_specs,test_subclass,get_kernel_spec_by_name,', 'spm_method': '  &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {1229: 1, 1230: 1, 1231: 1, 1232: 1, 1234: 1, 1256: 1, 1257: 1, 1258: 1, 1259: 1, 1261: 1}}, {'key': 10008, 'parent': 1005, 'tfidf_word': 'substitution callback restarter stop start connect socket cleanup spec kernel ', 'tfidf_method': 'is_local_ip KernelSpec stop cleanup_random_ports cleanup_connection_file _make_url _create_connected_socket is_alive kernel_spec is_alive ', 'lda_word': ' kernel,start,poll,execute,restart,', 'lda_method': ' poll,do_execute,restart_kernel,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,start,poll,execute,restart,', 'lsi_method': ' poll,do_execute,restart_kernel,start_kernel,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 11, 'files': ['signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '239': 'stop(restarter.py)', '732': 'is_alive(threaded.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '140': 'is_alive(channelsabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {1276: 1, 1278: 1, 1279: 1, 1280: 1, 1281: 1, 1282: 1, 1283: 1, 1284: 1, 1285: 1, 1286: 1, 1287: 1, 1288: 1, 1289: 1, 1290: 1, 1291: 1, 1325: 1, 1326: 1, 1327: 1, 1328: 1, 1329: 1, 1330: 1}}, {'key': 10007, 'parent': 1005, 'tfidf_word': 'message control alive utcnow send kernel connect socket cleanup msg ', 'tfidf_method': 'sign send utcnow Message stop_restarter thread_send is_alive _connect_control_socket serialize send ', 'lda_word': ' msg,shutdown,kernel,restart,execute,', 'lda_method': ' msg,request_shutdown,do_execute,poll,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,msg,restart,poll,', 'lsi_method': ' msg,do_execute,shutdown_kernel,poll,restart_kernel,', 'spm_method': '  &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br>', 'text_summary': '', 'files_count': 9, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 31, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {1292: 1, 1293: 1, 1294: 1, 1296: 1, 1297: 1, 1298: 1, 1300: 1, 1301: 1, 1302: 1, 1303: 1, 1304: 1, 1305: 1, 1306: 1, 1307: 1, 1308: 1, 1309: 1, 1310: 1, 1311: 1, 1312: 1, 1313: 1, 1314: 1, 1315: 1, 1316: 1, 1317: 1, 1318: 1, 1319: 1, 1320: 1, 1321: 1, 1322: 1, 1323: 1, 1324: 1}}, {'key': 10046, 'parent': 1020, 'tfidf_word': 'server split openssh forward exception ssh stop port tunnel msg ', 'tfidf_method': 'openssh_tunnel close close _stop_tunnel SSHException forward_tunnel ports close close close ', 'lda_word': ' tunnel,paramiko,connection,msg,open,', 'lda_method': ' paramiko_tunnel,tunnel_connection,open_tunnel,msg,forward_tunnel,', 'lsi_word': ' tunnel,msg,paramiko,connection,open,', 'lsi_method': ' msg,open_tunnel,tunnel_connection,paramiko_tunnel,try_passwordless_paramiko,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['tunnel.py', 'channels.py', 'connect.py', 'threaded.py', 'forward.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {1364: 1, 1365: 1, 1366: 1, 1367: 1, 1368: 1, 1369: 1, 1370: 1, 1371: 1, 1372: 1, 1373: 1, 1374: 1, 1375: 1, 1376: 1, 1377: 1, 1378: 1, 1379: 1, 1380: 1, 1381: 1, 1382: 1, 1383: 1, 1384: 1}}, {'key': 100078, 'parent': 10044, 'tfidf_word': 'name flush native permission cleanup io loop code restarter tunnel ', 'tfidf_method': 'test_default_version setUp extract_oname_v4 test_complete_reply test_complete_request test_display_data test_execute_reply test_execute_request SignalTestKernel reqrep ', 'lda_word': ' kernel,test,close,cleanup,connection,', 'lda_method': ' start,init,execute,session,shutdown_all,', 'lsi_word': ' test,kernel,adapt,session,reply,', 'lsi_method': ' start,setup,setup_signals,shutdown,shutdown_handler,', 'spm_method': '  &#187; test_mixin_cleanup_random_ports(test_connect.py) &rarr; DummyConfigurable(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_mixin_record_random_ports(test_connect.py) &rarr; DummyConfigurable(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_secure_write(test_connect.py) &rarr; check_user_only_permissions(test_connect.py) &rarr; fetch_win32_permissions(test_connect.py) . <br> &#187; test_date_default(test_jsonutil.py) &rarr; date_default(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_templated_kspec_env(test_kernelmanager.py) &rarr; _env_test_body(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; feed_identities(session.py) . <br> &#187; test_send_raw(test_session.py) &rarr; send_raw(session.py) &rarr; sign(session.py) . <br> &#187; test_unique_msg_ids(test_session.py) &rarr; msg_header(session.py) &rarr; utcnow(session.py) . <br> &#187; start_channels(threaded.py) &rarr; _check_kernel_info_reply(threaded.py) &rarr; _handle_kernel_info_reply(client.py) . <br> &#187; stop_channels(threaded.py) &rarr; stop(threaded.py) &rarr; close(threaded.py) . <br> &#187; __init__(threaded.py) &rarr; _handle_recv(threaded.py) &rarr; call_handlers(threaded.py) . <br> &#187; __init__(threaded.py) &rarr; setup_stream(threaded.py) &rarr; _handle_recv(threaded.py) . <br> &#187; __init__(threaded.py) &rarr; setup_stream(threaded.py) &rarr; _handle_recv(threaded.py) &rarr; call_handlers(threaded.py) . <br> &#187; __init__(threaded.py) &rarr; setup_stream(threaded.py) &rarr; call_handlers(threaded.py) . <br> &#187; setup_stream(threaded.py) &rarr; _handle_recv(threaded.py) &rarr; call_handlers(threaded.py) . <br> &#187; object_info_request(adapter.py) &rarr; extract_oname_v4(adapter.py) &rarr; code_to_line(adapter.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; ZMQSocketChannel(channels.py) &rarr; close(channels.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; reqrep(client.py) &rarr; wrapped(client.py) . <br>', 'text_summary': '', 'files_count': 34, 'files': ['channels.py', 'channelsabc.py', 'threaded.py', 'multikernelmanager.py', 'managerabc.py', 'consoleapp.py', 'session.py', 'kernelspec.py', 'signalkernel.py', 'launcher.py', 'win_interrupt.py', 'connect.py', 'tunnel.py', 'client.py', 'kernelapp.py', 'test_kernelmanager.py', 'adapter.py', 'localinterfaces.py', 'runapp.py', 'kernelspecapp.py', 'restarter.py', 'utils.py', 'manager.py', 'test_client.py', 'test_session.py', 'test_kernelapp.py', 'test_adapter.py', 'test_connect.py', 'test_multikernelmanager.py', 'test_kernelspec.py', 'test_jsonutil.py', 'jsonutil.py', 'test_manager.py', 'forward.py'], 'execution_path_count': 251, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)', '133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '136': 'stop(channels.py)', '132': 'close(channels.py)', '215': '__init__(consoleapp.py)', '453': '__init__(session.py)', '716': '__init__(threaded.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)', '392': '__init__(multikernelmanager.py)', '81': '__init__(channels.py)', '107': '__init__(channels.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)', '278': '__init__(kernelspec.py)', '509': '__init__(signalkernel.py)', '298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '198': '_session_default(connect.py)', '441': 'Session(session.py)', '199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)', '393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)', '421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)', '731': 'flush(threaded.py)', '727': '_flush(threaded.py)', '714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)', '713': 'IOLoopThread(threaded.py)', '724': 'start_channels(threaded.py)', '720': 'start(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)', '725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)', '469': '_session_default(session.py)', '446': 'new_id(session.py)', '463': '_key_default(session.py)', '462': '_key_changed(session.py)', '465': '_new_auth(session.py)', '470': '_signature_scheme_changed(session.py)', '449': 'test_msg2obj(session.py)', '440': 'Message(session.py)', '265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)', '262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)', '247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)', '246': '_record_started(kernelapp.py)', '53': '__call__(adapter.py)', '55': 'update_header(adapter.py)', '56': 'update_metadata(adapter.py)', '57': 'update_msg_type(adapter.py)', '54': 'handle_reply_status_error(adapter.py)', '48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)', '75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)', '70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)', '77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '47': 'V4toV5(adapter.py)', '308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)', '438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)', '291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)', '89': 'start(channels.py)', '115': 'start(channels.py)', '432': 'start(restarter.py)', '288': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)', '711': 'start(utils.py)', '735': 'start(threaded.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)', '334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)', '330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '328': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '168': 'shell_channel(client.py)', '196': '_make_url(connect.py)', '723': 'ioloop(threaded.py)', '164': 'iopub_channel(client.py)', '171': 'stdin_channel(client.py)', '160': 'hb_channel(client.py)', '154': 'control_channel(client.py)', '80': 'ZMQSocketChannel(channels.py)', '90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '102': 'hb_channel(client.py)', '104': 'wait_for_ready(client.py)', '225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)', '116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '123': 'wait_for_ready(client.py)', '549': 'setUp(test_client.py)', '705': 'test_env(utils.py)', '712': 'stop(utils.py)', '255': 'NoSuchKernel(kernelspec.py)', '553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)', '554': 'test_inspect(test_client.py)', '551': 'test_complete(test_client.py)', '555': 'test_kernel_info(test_client.py)', '550': 'test_comm_info(test_client.py)', '556': 'test_shutdown(test_client.py)', '678': 'setUp(test_session.py)', '674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)', '696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)', '694': 'test_send(test_session.py)', '478': 'msg_id(session.py)', '479': 'recv(session.py)', '680': 'test_args(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '450': 'utcnow(session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '688': 'test_datetimes(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)', '686': 'test_clone(test_session.py)', '473': 'clone(session.py)', '580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)', '709': '__enter__(utils.py)', '710': '__exit__(utils.py)', '704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)', '608': 'execute(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)', '158': 'get_shell_msg(client.py)', '516': 'test_default_version(test_adapter.py)', '515': 'test_code_to_line_no_code(test_adapter.py)', '519': 'setUp(test_adapter.py)', '513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)', '533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)', '514': 'V5toV4TestCase(test_adapter.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)', '562': 'test_find_connection_file_local(test_connect.py)', '563': 'test_find_connection_file_relative(test_connect.py)', '561': 'test_find_connection_file_abspath(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)', '569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)', '668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)', '619': 'tearDown(test_kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)', '586': 'env(test_kernelmanager.py)', '604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)', '595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)', '492': 'handle(forward.py)', '493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}, 'execution_paths': {0: 1, 6: 1, 7: 1, 8: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 18: 1, 19: 1, 20: 1, 21: 1, 25: 1, 26: 1, 27: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 52: 1, 53: 1, 60: 1, 64: 1, 69: 1, 72: 1, 74: 1, 75: 1, 76: 1, 78: 1, 81: 1, 86: 1, 87: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 116: 1, 117: 1, 118: 1, 123: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 1, 134: 1, 135: 1, 136: 1, 137: 1, 161: 1, 219: 1, 274: 1, 275: 1, 276: 1, 277: 1, 278: 1, 279: 1, 280: 1, 281: 1, 282: 1, 283: 1, 284: 1, 296: 1, 335: 1, 351: 1, 353: 1, 354: 1, 477: 1, 478: 1, 480: 1, 481: 1, 483: 1, 484: 1, 486: 1, 487: 1, 488: 1, 500: 1, 502: 1, 513: 1, 557: 1, 583: 1, 584: 1, 601: 1, 604: 1, 611: 1, 614: 1, 617: 1, 628: 1, 629: 1, 695: 1, 704: 1, 705: 1, 706: 1, 712: 1, 718: 1, 719: 1, 720: 1, 721: 1, 722: 1, 723: 1, 724: 1, 728: 1, 741: 1, 755: 1, 765: 1, 770: 1, 773: 1, 779: 1, 787: 1, 793: 1, 794: 1, 809: 1, 813: 1, 818: 1, 823: 1, 824: 1, 828: 1, 829: 1, 833: 1, 837: 1, 841: 1, 844: 1, 847: 1, 856: 1, 859: 1, 872: 1, 873: 1, 874: 1, 882: 1, 883: 1, 884: 1, 885: 1, 886: 1, 887: 1, 888: 1, 889: 1, 890: 1, 907: 1, 909: 1, 910: 1, 914: 1, 919: 1, 920: 1, 929: 1, 934: 1, 939: 1, 940: 1, 949: 1, 954: 1, 959: 1, 964: 1, 969: 1, 974: 1, 979: 1, 980: 1, 985: 1, 986: 1, 995: 1, 1000: 1, 1001: 1, 1010: 1, 1015: 1, 1020: 1, 1025: 1, 1030: 1, 1035: 1, 1040: 1, 1063: 1, 1082: 1, 1103: 1, 1104: 1, 1105: 1, 1106: 1, 1107: 1, 1109: 1, 1110: 1, 1112: 1, 1137: 1, 1141: 1, 1145: 1, 1146: 1, 1150: 1, 1154: 1, 1158: 1, 1188: 1, 1189: 1, 1190: 1, 1195: 1, 1198: 1, 1199: 1, 1215: 1, 1216: 1, 1217: 1, 1218: 1, 1219: 1, 1223: 1, 1237: 1, 1240: 1, 1251: 1, 1254: 1, 1333: 1, 1334: 1, 1335: 1, 1336: 1, 1337: 1, 1338: 1, 1341: 1, 1346: 1, 1349: 1, 1350: 1, 1351: 1, 1355: 1, 1357: 1, 1358: 1, 1385: 1, 1386: 1, 1387: 1, 1388: 1, 1394: 1, 1395: 1, 1396: 1, 1401: 1, 1403: 1}}, {'key': 100062, 'parent': 10044, 'tfidf_word': 'close create run socket ', 'tfidf_method': '_create_socket run close close close close close ', 'lda_word': ' run,socket,close,create,', 'lda_method': ' run,close,create_socket,', 'lsi_word': ' create,run,socket,close,', 'lsi_method': ' close,create_socket,run,', 'spm_method': '  &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(channels.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(channels.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(threaded.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(threaded.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'threaded.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)'}, 'execution_paths': {1: 1, 2: 1, 3: 1, 4: 1, 5: 1}}, {'key': 100087, 'parent': 10051, 'tfidf_word': 'restarter wait alive kernel beating channels interrupt poll stop start ', 'tfidf_method': 'poll start_restarter start_restarter is_alive is_beating wait_for_ready execute_interactive wait_for_ready stop_channels execute_interactive ', 'lda_word': ' kernel,alive,launch,ready,wait,', 'lda_method': ' is_alive,launch_kernel,has_kernel,wait_for_ready,is_beating,', 'lsi_word': ' kernel,launch,alive,start,execute,', 'lsi_method': ' is_alive,has_kernel,launch_kernel,start,wait_for_ready,', 'spm_method': '  &#187; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; has_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; is_alive(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['channels.py', 'manager.py', 'threaded.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '725': 'stop_channels(threaded.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '328': 'interrupt_kernel(manager.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '231': 'start_restarter(manager.py)', '228': 'start_restarter(manager.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)'}, 'execution_paths': {9: 1, 100: 1, 237: 1, 246: 1, 352: 1, 586: 1, 605: 1, 615: 1, 698: 1, 1277: 1}}, {'key': 100051, 'parent': 10035, 'tfidf_word': 'console connection file find i kn python run session app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session IPythonConsoleApp RunApp test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' console,app,connection,jupyter,file,', 'lda_method': ' jupyterconsoleapp,dummyconsoleapp,session,connectionfilemixin,runapp,', 'lsi_word': ' app,console,connection,file,jupyter,', 'lsi_method': ' jupyterconsoleapp,dummyconsoleapp,connectionfilemixin,session,test_find_connection_file,', 'spm_method': '  &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_find_connection_file(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; Session(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'runapp.py', 'test_connect.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '434': 'RunApp(runapp.py)', '564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {16: 1, 17: 1, 159: 1, 160: 1, 1048: 1, 1049: 1, 1067: 1, 1068: 1, 1086: 1, 1087: 1, 1098: 1, 1099: 1}}, {'key': 100019, 'parent': 10011, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' msgpack,packer,date,check,test,', 'lda_method': ' init,check_packers,utcnow,squash_dates,test_datetimes_pickle,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,setup,', 'spm_method': '  &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {22: 1, 23: 1, 61: 1, 62: 1, 725: 1, 726: 1, 784: 1, 785: 1, 806: 1, 807: 1, 810: 1, 811: 1, 815: 1, 816: 1, 820: 1, 821: 1, 825: 1, 826: 1, 830: 1, 831: 1, 834: 1, 835: 1, 838: 1, 839: 1, 848: 1, 849: 1, 853: 1, 854: 1, 904: 1, 905: 1, 911: 1, 912: 1, 1060: 1, 1061: 1, 1079: 1, 1080: 1}}, {'key': 100030, 'parent': 10019, 'tfidf_word': 'args packer pack msgpack version kn id cull pickle zero ', 'tfidf_method': 'test_args test_session_id setUp test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' init,test,new,auth,bad,', 'lda_method': ' init,new_auth,test_bad_pack,setup,test_bad_unpacker,', 'lsi_word': ' init,new,auth,test,bad,', 'lsi_method': ' init,new_auth,setup,test_zero_digest_history,test_args,', 'spm_method': '  &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {24: 1, 63: 1, 727: 1, 786: 1, 808: 1, 812: 1, 817: 1, 822: 1, 827: 1, 832: 1, 836: 1, 840: 1, 850: 1, 855: 1, 906: 1, 913: 1, 1062: 1, 1081: 1}}, {'key': 100068, 'parent': 10044, 'tfidf_word': 'check packer auth date new session squash utcnow init ', 'tfidf_method': '__init__ __init__ __init__ _check_packers squash_dates Session utcnow _new_auth ', 'lda_word': ' init,squash,date,packer,check,', 'lda_method': ' init,check_packers,session,new_auth,squash_dates,', 'lsi_word': ' init,check,packer,date,squash,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,new_auth,', 'spm_method': '  &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '465': '_new_auth(session.py)', '441': 'Session(session.py)'}, 'execution_paths': {28: 1, 29: 1, 30: 1, 31: 1}}, {'key': 100084, 'parent': 10049, 'tfidf_word': 'extract id passwordless ssh try exception openssh server split msg ', 'tfidf_method': '_try_passwordless_paramiko msg msg msg extract_header msg_header msg_id SSHException _split_server _try_passwordless_openssh ', 'lda_word': ' msg,passwordless,try,header,ssh,', 'lda_method': ' try_passwordless_ssh,tunnel_to_kernel,sshexception,try_passwordless_openssh,msg,', 'lsi_word': ' msg,try,passwordless,ssh,tunnel,', 'lsi_method': ' msg,try_passwordless_ssh,tunnel_to_kernel,try_passwordless_paramiko,msg_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)'}, 'execution_paths': {40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1}}, {'key': 100053, 'parent': 10037, 'tfidf_word': 'kernel random select tunnel close port ', 'tfidf_method': 'tunnel_to_kernel select_random_ports close close ports close close close ', 'lda_word': ' tunnel,random,close,kernel,port,', 'lda_method': ' close,tunnel_to_kernel,select_random_ports,port,', 'lsi_word': ' port,kernel,random,tunnel,select,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'channels.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}, 'execution_paths': {54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1}}, {'key': 100067, 'parent': 10044, 'tfidf_word': 'change class context find port create factory default kernel manager ', 'tfidf_method': '_create_kernel_manager_factory create_kernel_manager _context_default _find_available_port _kernel_manager_class_changed _kernel_manager_factory_default ', 'lda_word': ' kernel,manager,create,factory,available,', 'lda_method': ' create_kernel_manager_factory,create_kernel_manager,find_available_port,kernel_manager_class_changed,kernel_manager_factory_default,', 'lsi_word': ' kernel,manager,create,factory,default,', 'lsi_method': ' create_kernel_manager_factory,create_kernel_manager,find_available_port,kernel_manager_class_changed,context_default,', 'spm_method': '  &#187; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_class_changed(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)'}, 'execution_paths': {65: 1, 66: 1, 67: 1, 68: 1}}, {'key': 100076, 'parent': 10044, 'tfidf_word': 'pre duplicate error id new start kernel ', 'tfidf_method': 'pre_start_kernel DuplicateKernelError start_kernel new_kernel_id start_kernel ', 'lda_word': ' kernel,start,pre,new,duplicate,', 'lda_method': ' duplicatekernelerror,pre_start_kernel,start_kernel,new_kernel_id,', 'lsi_word': ' kernel,start,pre,error,duplicate,', 'lsi_method': ' pre_start_kernel,start_kernel,new_kernel_id,duplicatekernelerror,', 'spm_method': '  &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; DuplicateKernelError(multikernelmanager.py) . <br> &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; new_kernel_id(multikernelmanager.py) . <br> &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; DuplicateKernelError(multikernelmanager.py) . <br> &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; new_kernel_id(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)', '389': 'start_kernel(multikernelmanager.py)'}, 'execution_paths': {70: 1, 71: 1, 79: 1, 80: 1}}, {'key': 100055, 'parent': 10038, 'tfidf_word': 'check get id finish interrupt restart signal kernel shutdown ', 'tfidf_method': '_check_kernel_id get_kernel finish_shutdown interrupt_kernel restart_kernel shutdown_all shutdown_kernel signal_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,get,check,shutdown,interrupt,', 'lda_method': ' get_kernel,check_kernel_id,signal_kernel,interrupt_kernel,restart_kernel,', 'lsi_word': ' kernel,check,get,shutdown,restart,', 'lsi_method': ' get_kernel,check_kernel_id,shutdown_all,shutdown_kernel,finish_shutdown,', 'spm_method': '  &#187; interrupt_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; restart_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; signal_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'421': 'shutdown_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)'}, 'execution_paths': {73: 1, 77: 1, 82: 1, 83: 1, 84: 1, 85: 1, 88: 1}}, {'key': 100059, 'parent': 10042, 'tfidf_word': 'deserialize sign test send recv handle raw serialize unserialize ', 'tfidf_method': 'deserialize sign recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' send,test,deserialize,sign,raw,', 'lda_method': ' deserialize,sign,test_send,test_serialize,recv,', 'lsi_word': ' deserialize,sign,test,send,recv,', 'lsi_method': ' deserialize,sign,recv,test_send,handle,', 'spm_method': '  &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; sign(session.py) . <br> &#187; test_send_raw(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '695': 'test_send_raw(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {112: 1, 743: 1, 756: 1, 780: 1, 860: 1, 1397: 1}}, {'key': 100035, 'parent': 10024, 'tfidf_word': 'serialize raw naive pickle msgpack ms handle default precision unserialize ', 'tfidf_method': 'test_datetimes_msgpack test_datetimes test_extract_date_from_naive test_extract_dates test_send_raw test_date_default handle unserialize test_parse_ms_precision test_serialize ', 'lda_word': ' date,parse,extract,test,ensure,', 'lda_method': ' datetime_test,parse_date,ensure_tzinfo,extract_dates,test_datetimes_msgpack,', 'lsi_word': ' date,extract,test,parse,ensure,', 'lsi_method': ' ensure_tzinfo,parse_date,extract_dates,deserialize,datetime_test,', 'spm_method': '  &#187; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['session.py', 'jsonutil.py', 'test_session.py', 'test_jsonutil.py', 'forward.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '695': 'test_send_raw(test_session.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '575': 'test_date_default(test_jsonutil.py)', '492': 'handle(forward.py)'}, 'execution_paths': {113: 1, 744: 1, 757: 1, 781: 1, 843: 1, 846: 1, 852: 1, 861: 1, 1352: 1, 1353: 1, 1354: 1, 1356: 1, 1398: 1}}, {'key': 100045, 'parent': 10029, 'tfidf_word': 'recv send default interrupt kernel raw serialize tracking unserialize version ', 'tfidf_method': 'send test_send recv handle interrupt_kernel unserialize test_default_version test_send_raw test_serialize test_tracking ', 'lda_word': ' adapt,utcnow,send,test,deserialize,', 'lda_method': ' adapt,test_send,deserialize,utcnow,recv,', 'lsi_word': ' adapt,utcnow,send,test,deserialize,', 'lsi_method': ' utcnow,adapt,deserialize,send,test_send,', 'spm_method': '  &#187; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; handle(forward.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['session.py', 'adapter.py', 'manager.py', 'test_session.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '698': 'test_tracking(test_session.py)', '695': 'test_send_raw(test_session.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {114: 1, 359: 1, 745: 1, 758: 1, 778: 1, 782: 1, 792: 1, 862: 1, 908: 1, 1393: 1, 1399: 1}}, {'key': 100050, 'parent': 10034, 'tfidf_word': 'history send recv digest clone handle raw serialize unserialize zero ', 'tfidf_method': 'deserialize recv test_send unserialize handle test_clone test_cull_digest_history test_send_raw test_serialize test_zero_digest_history ', 'lda_word': ' digest,history,cull,test,add,', 'lda_method': ' cull_digest_history,add_digest,deserialize,test_send,test_zero_digest_history,', 'lsi_word': ' digest,history,cull,add,test,', 'lsi_method': ' cull_digest_history,add_digest,deserialize,recv,test_send,', 'spm_method': '  &#187; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 9, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '695': 'test_send_raw(test_session.py)', '686': 'test_clone(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {115: 1, 746: 1, 759: 1, 783: 1, 814: 1, 819: 1, 863: 1, 875: 1, 1400: 1}}, {'key': 100034, 'parent': 10023, 'tfidf_word': 'find get install specs prefix priority subclass spec kernel remove ', 'tfidf_method': 'get_all_specs find_kernel_specs remove_kernel_spec test_find_all_specs test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority test_remove_kernel_spec test_subclass ', 'lda_word': ' kernel,specs,find,list,test,', 'lda_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,test_kernel_spec_priority,', 'lsi_word': ' kernel,specs,find,list,test,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,get_all_specs,', 'spm_method': '  &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_kernel_spec_priority(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 16, 'function_id_to_name_file': {'259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {119: 1, 120: 1, 1220: 1, 1221: 1, 1235: 1, 1236: 1, 1238: 1, 1239: 1, 1243: 1, 1244: 1, 1247: 1, 1248: 1, 1252: 1, 1253: 1, 1262: 1, 1263: 1}}, {'key': 100065, 'parent': 10044, 'tfidf_word': 'destination dir get name valid install spec cant prefix kernel ', 'tfidf_method': 'install_kernel_spec _is_valid_kernel_name _get_destination_dir install_kernel_spec test_cant_install_kernel_spec test_install_kernel_spec test_install_kernel_spec_prefix ', 'lda_word': ' install,kernel,spec,test,valid,', 'lda_method': ' install_kernel_spec,is_valid_kernel_name,test_install_kernel_spec_prefix,test_cant_install_kernel_spec,get_destination_dir,', 'lsi_word': ' kernel,install,spec,test,name,', 'lsi_method': ' install_kernel_spec,get_destination_dir,is_valid_kernel_name,test_install_kernel_spec_prefix,test_install_kernel_spec,', 'spm_method': '  &#187; install_kernel_spec(kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; install_kernel_spec(kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br> &#187; test_cant_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_cant_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br> &#187; test_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br> &#187; test_install_kernel_spec_prefix(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_install_kernel_spec_prefix(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '620': 'test_cant_install_kernel_spec(test_kernelspec.py)'}, 'execution_paths': {121: 1, 122: 1, 1241: 1, 1242: 1, 1245: 1, 1246: 1, 1249: 1, 1250: 1}}, {'key': 100022, 'parent': 10013, 'tfidf_word': 'list ksm file connection native up manager spec kernel async ', 'tfidf_method': '_kernel_spec_manager_default MyKSM RemoveKernelSpec ListKernelSpecs InstallNativeKernelSpec InstallKernelSpec KernelApp IOLoopKernelManager _kernel_spec_manager_default test_connection_file_real_path ', 'lda_word': ' kernel,spec,manager,default,app,', 'lda_method': ' kernelspec,kernelspecmanager,kernelapp,kernel_spec_manager_default,kernelspecapp,', 'lsi_word': ' kernel,spec,manager,app,async,', 'lsi_method': ' kernelspecmanager,kernelspec,kernel_spec_manager_default,kernelmanager,kernelspecapp,', 'spm_method': '  &#187; KernelSpecApp(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MyKSM(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['kernelapp.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'test_kernelspec.py', 'test_manager.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '618': 'setUp(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {124: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 295: 1, 406: 1, 602: 1, 612: 1, 1214: 1, 1255: 1, 1269: 1, 1359: 1}}, {'key': 100028, 'parent': 10017, 'tfidf_word': 'no local stable uniq netifaces output get load dumb ip ', 'tfidf_method': '_load_ips_ifconfig _load_ips_ip _load_ips_ipconfig NoIPAddresses _uniq_stable local_ips public_ips _get_output _load_ips_netifaces _load_ips_dumb ', 'lda_word': ' ip,load,require,list,populate,', 'lda_method': ' requires_ips,load_ips,ips_loaded,populate_from_list,load_ips_ifconfig,', 'lsi_word': ' ip,load,require,list,populate,', 'lsi_method': ' ips_loaded,load_ips,requires_ips,populate_from_list,load_ips_ipconfig,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)'}, 'execution_paths': {138: 1, 139: 1, 140: 1, 141: 1, 142: 1, 143: 1, 144: 1, 145: 1, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1, 152: 1, 153: 1, 154: 1, 155: 1, 156: 1, 157: 1}}, {'key': 100029, 'parent': 10018, 'tfidf_word': 'addresses local netifaces output get load gethostbyname require dumb ip ', 'tfidf_method': '_load_ips_ipconfig NoIPAddresses local_ips public_ips _get_output _load_ips_netifaces _load_ips_gethostbyname _load_ips_dumb _requires_ips ips_loaded ', 'lda_word': ' load,ip,test,list,populate,', 'lda_method': ' populate_from_list,load_ips,load_ips_ifconfig,test_load_ips,uniq_stable,', 'lsi_word': ' ip,load,test,populate,list,', 'lsi_method': ' load_ips,test_load_ips,populate_from_list,uniq_stable,load_ips_ip,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 22, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)'}, 'execution_paths': {158: 1, 1113: 1, 1114: 1, 1115: 1, 1116: 1, 1117: 1, 1118: 1, 1119: 1, 1120: 1, 1121: 1, 1122: 1, 1123: 1, 1124: 1, 1125: 1, 1126: 1, 1127: 1, 1128: 1, 1129: 1, 1130: 1, 1131: 1, 1132: 1, 1133: 1}}, {'key': 100032, 'parent': 10021, 'tfidf_word': 'default ip manager load such no client file connection kernel ', 'tfidf_method': '_record_random_port_names init_ssh localhost load_connection_info write_connection_file init_connection_file _ip_default init_kernel_manager init_kernel_client NoSuchKernel ', 'lda_word': ' initialize,ssh,localhost,init,connection,', 'lda_method': ' initialize,init_kernel_manager,nosuchkernel,localhost,init_ssh,', 'lsi_word': ' connection,initialize,file,load,init,', 'lsi_method': ' initialize,load_connection_file,record_random_port_names,init_ssh,localhost,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_info(connect.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '220': 'init_kernel_client(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)'}, 'execution_paths': {162: 1, 163: 1, 164: 1, 165: 1, 166: 1, 167: 1, 168: 1, 169: 1, 170: 1, 171: 1, 172: 1}}, {'key': 100082, 'parent': 10047, 'tfidf_word': 'initialize header extract id info kernel unpause get shell msg ', 'tfidf_method': 'kernel_info msg msg msg extract_header msg_header msg_id unpause unpause get_shell_msg ', 'lda_word': ' msg,info,kernel,initialize,header,', 'lda_method': ' initialize,init_kernel_info,unpause,msg,kernel_info,', 'lsi_word': ' msg,info,kernel,initialize,init,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,msg_id,', 'spm_method': '  &#187; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['runapp.py', 'client.py', 'session.py', 'test_adapter.py', 'channels.py', 'channelsabc.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '158': 'get_shell_msg(client.py)'}, 'execution_paths': {173: 1, 174: 1, 175: 1, 176: 1, 177: 1, 178: 1, 179: 1, 180: 1, 181: 1, 182: 1, 183: 1, 184: 1, 185: 1}}, {'key': 100079, 'parent': 10045, 'tfidf_word': 'signal sign adapt message control serialize utcnow socket connect msg ', 'tfidf_method': 'send send send_interrupt Message interrupt_kernel interrupt_kernel signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' kernel,initialize,interrupt,msg,sigint,', 'lda_method': ' send,initialize,handle_sigint,interrupt_kernel,adapt,', 'lsi_word': ' msg,kernel,interrupt,sigint,initialize,', 'lsi_method': ' msg,initialize,interrupt_kernel,handle_sigint,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 11, 'files': ['runapp.py', 'multikernelmanager.py', 'manager.py', 'session.py', 'connect.py', 'channels.py', 'win_interrupt.py', 'adapter.py', 'test_adapter.py', 'threaded.py', 'managerabc.py'], 'execution_path_count': 25, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '365': 'signal_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '372': 'interrupt_kernel(managerabc.py)'}, 'execution_paths': {186: 1, 187: 1, 188: 1, 189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 195: 1, 196: 1, 197: 1, 198: 1, 199: 1, 200: 1, 201: 1, 202: 1, 203: 1, 204: 1, 205: 1, 206: 1, 207: 1, 208: 1, 209: 1, 210: 1}}, {'key': 100016, 'parent': 10009, 'tfidf_word': 'stdin ready reply control kernel reqrep shell wrap hook output ', 'tfidf_method': 'is_alive is_alive wrapped _output_hook_kernel reqrep msg_ready is_alive get_msg get_control_msg msg_ready ', 'lda_word': ' start,interactive,execute,alive,msg,', 'lda_method': ' start,recv_reply,execute_interactive,get_control_msg,get_shell_msg,', 'lsi_word': ' start,interactive,execute,msg,alive,', 'lsi_method': ' start,execute_interactive,is_alive,msg_ready,stdin_hook_default,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '121': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '118': '_output_hook_default(client.py)', '119': '_output_hook_kernel(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '112': 'is_alive(channels.py)'}, 'execution_paths': {220: 1, 221: 1, 222: 1, 233: 1, 234: 1, 235: 1, 236: 1, 238: 1, 239: 1, 240: 1, 241: 1, 242: 1, 243: 1, 244: 1, 245: 1}}, {'key': 100015, 'parent': 10009, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'execute_interactive input start start msg msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,interactive,stdin,header,', 'lda_method': ' start,stdin_hook_default,msg_id,msg_header,msg,', 'lsi_word': ' msg,start,default,interactive,hook,', 'lsi_method': ' msg,start,input,stdin_hook_default,execute_interactive,', 'spm_method': '  &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {223: 1, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1}}, {'key': 100018, 'parent': 10010, 'tfidf_word': 'stdin ready msg kernel reqrep wrap recv get hook output ', 'tfidf_method': 'is_alive is_alive msg_ready reqrep msg_ready _output_hook_kernel is_alive wrapped is_alive is_alive ', 'lda_word': ' start,output,hook,interactive,execute,', 'lda_method': ' start,execute_interactive,is_alive,recv,get_msg,', 'lsi_word': ' start,interactive,execute,msg,get,', 'lsi_method': ' start,execute_interactive,recv,get_msg,is_alive,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; get_msg(channels.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv(channels.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; get_msg(channels.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; execute_interactive(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; execute_interactive(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'threaded.py', 'channelsabc.py', 'channels.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '98': 'get_control_msg(client.py)', '96': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)'}, 'execution_paths': {247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 258: 1, 259: 1, 260: 1, 261: 1, 272: 1, 273: 1}}, {'key': 100017, 'parent': 10010, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'start start msg _stdin_hook_default execute_interactive msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,default,execute,header,', 'lda_method': ' msg,start,input,execute_interactive,stdin_hook_default,', 'lsi_word': ' msg,start,stdin,execute,interactive,', 'lsi_method': ' msg,start,stdin_hook_default,execute_interactive,input,', 'spm_method': '  &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 1, 269: 1, 270: 1, 271: 1}}, {'key': 100083, 'parent': 10048, 'tfidf_word': 'header input extract id start msg ', 'tfidf_method': 'input start start msg msg msg extract_header msg_header msg_id ', 'lda_word': ' start,extract,input,header,msg,', 'lda_method': ' msg,start,input,extract_header,msg_id,', 'lsi_word': ' msg,start,input,header,extract,', 'lsi_method': ' msg,start,input,msg_id,msg_header,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {285: 1, 286: 1, 287: 1, 288: 1, 289: 1, 290: 1, 291: 1, 292: 1, 293: 1, 294: 1}}, {'key': 100086, 'parent': 10050, 'tfidf_word': 'restart start interrupt del close control shutdown iopub stdin shell ', 'tfidf_method': 'connect_hb start_new_async_kernel interrupt_kernel restart_kernel stdin_channel shell_channel iopub_channel __del__ _close_control_socket control_channel ', 'lda_word': ' connect,socket,kernel,create,make,', 'lda_method': ' create_connected_socket,make_url,ioloopkernelmanager,asyncioloopkernelmanager,connect_shell,', 'lsi_word': ' connect,socket,kernel,create,url,', 'lsi_method': ' create_connected_socket,make_url,ioloopkernelmanager,asyncioloopkernelmanager,shutdown_kernel,', 'spm_method': '  &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _make_url(connect.py) . <br> &#187; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; connect_control(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; connect_iopub(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; connect_shell(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; connect_stdin(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; request_shutdown(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'client.py'], 'execution_path_count': 21, 'function_id_to_name_file': {'334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)', '168': 'shell_channel(client.py)', '206': 'connect_shell(connect.py)', '164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {297: 1, 311: 1, 312: 1, 349: 1, 350: 1, 382: 1, 383: 1, 479: 1, 482: 1, 485: 1, 489: 1, 596: 1, 597: 1, 598: 1, 599: 1, 600: 1, 606: 1, 607: 1, 608: 1, 609: 1, 610: 1}}, {'key': 100088, 'parent': 10051, 'tfidf_word': 'new restart start alive wait signal shutdown async interrupt kernel ', 'tfidf_method': 'has_kernel shutdown_kernel _kill_kernel finish_shutdown start_new_async_kernel restart_kernel _async_wait is_alive signal_kernel interrupt_kernel ', 'lda_word': ' kernel,shutdown,async,launch,wait,', 'lda_method': ' shutdown_kernel,has_kernel,launch_kernel,restart_kernel,kill_kernel,', 'lsi_word': ' kernel,shutdown,launch,async,kill,', 'lsi_method': ' launch_kernel,has_kernel,shutdown_kernel,kill_kernel,finish_shutdown,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '327': 'finish_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {298: 1, 299: 1, 300: 1, 329: 1, 330: 1, 331: 1, 332: 1, 346: 1, 369: 1, 370: 1, 371: 1, 400: 1, 401: 1, 402: 1, 403: 1}}, {'key': 100091, 'parent': 10053, 'tfidf_word': 'async finish kill new restart start shutdown restarter stop kernel ', 'tfidf_method': 'shutdown_kernel _launch_kernel start_new_async_kernel _kill_kernel finish_shutdown restart_kernel stop_restarter ', 'lda_word': ' kernel,shutdown,launch,async,restart,', 'lda_method': ' shutdown_kernel,launch_kernel,start_new_async_kernel,kill_kernel,finish_shutdown,', 'lsi_word': ' kernel,shutdown,launch,kill,finish,', 'lsi_method': ' shutdown_kernel,launch_kernel,finish_shutdown,kill_kernel,restart_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '327': 'finish_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {301: 1, 305: 1, 333: 1, 334: 1, 372: 1, 376: 1, 404: 1, 405: 1}}, {'key': 100092, 'parent': 10053, 'tfidf_word': 'shutdown async connection ipc new port restart start kernel cleanup ', 'tfidf_method': 'shutdown_kernel cleanup_resources cleanup_connection_file cleanup_ipc_files ports start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' cleanup,kernel,file,resource,shutdown,', 'lda_method': ' port,cleanup_ipc_files,cleanup_resources,shutdown_kernel,start_new_async_kernel,', 'lsi_word': ' cleanup,kernel,resource,shutdown,file,', 'lsi_method': ' cleanup_resources,shutdown_kernel,cleanup_ipc_files,port,cleanup,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; ports(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; ports(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {302: 1, 304: 1, 306: 1, 308: 1, 373: 1, 375: 1, 377: 1, 379: 1}}, {'key': 100085, 'parent': 10050, 'tfidf_word': 'start new restart cleanup socket execute poll run async kernel ', 'tfidf_method': 'shutdown_kernel cleanup shutdown_kernel poll run_kernel start_new_async_kernel start_new_kernel restart_kernel restart_kernel do_execute ', 'lda_word': ' cleanup,socket,kernel,resource,connect,', 'lda_method': ' close_control_socket,create_connected_socket,shutdown_kernel,cleanup_resources,make_url,', 'lsi_word': ' kernel,socket,cleanup,make,shutdown,', 'lsi_method': ' cleanup_resources,make_url,shutdown_kernel,close_control_socket,create_connected_socket,', 'spm_method': '  &#187; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '349': 'cleanup(manager.py)', '322': 'start_new_async_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)'}, 'execution_paths': {303: 1, 307: 1, 374: 1, 378: 1, 437: 1, 441: 1, 1295: 1, 1299: 1}}, {'key': 100089, 'parent': 10052, 'tfidf_word': 'header request async new restart start kernel shutdown send msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg start_new_async_kernel restart_kernel msg msg send ', 'lda_word': ' msg,kernel,shutdown,header,request,', 'lda_method': ' msg,request_shutdown,extract_header,shutdown_kernel,restart_kernel,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,extract_header,shutdown_kernel,request_shutdown,start_new_async_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {309: 1, 315: 1, 320: 1, 322: 1, 324: 1, 326: 1, 380: 1, 386: 1, 391: 1, 393: 1, 395: 1, 397: 1}}, {'key': 100005, 'parent': 10003, 'tfidf_word': 'id request async new restart start kernel shutdown send msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id start_new_async_kernel restart_kernel msg msg send ', 'lda_word': ' msg,shutdown,kernel,header,request,', 'lda_method': ' msg,start_new_async_kernel,request_shutdown,shutdown_kernel,msg_id,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,shutdown_kernel,request_shutdown,msg_header,msg_id,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {310: 1, 316: 1, 321: 1, 323: 1, 325: 1, 327: 1, 381: 1, 387: 1, 392: 1, 394: 1, 396: 1, 398: 1}}, {'key': 100090, 'parent': 10052, 'tfidf_word': 'start kernel send shutdown adapt message serialize sign thread utcnow ', 'tfidf_method': 'send send Message utcnow serialize sign adapt send thread_send send ', 'lda_word': ' kernel,shutdown,send,request,restart,', 'lda_method': ' request_shutdown,start_new_async_kernel,shutdown_kernel,send,thread_send,', 'lsi_word': ' shutdown,kernel,send,request,async,', 'lsi_method': ' shutdown_kernel,send,request_shutdown,restart_kernel,start_new_async_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; send(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; send(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'channels.py', 'session.py', 'adapter.py', 'threaded.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {313: 1, 314: 1, 317: 1, 318: 1, 319: 1, 328: 1, 384: 1, 385: 1, 388: 1, 389: 1, 390: 1, 399: 1}}, {'key': 100036, 'parent': 10025, 'tfidf_word': 'control create launch make restarter url kernel start connect socket ', 'tfidf_method': 'start_kernel post_start_kernel start_new_async_kernel restart_kernel _create_connected_socket _make_url _launch_kernel _connect_control_socket start_restarter ', 'lda_word': ' start,kernel,restart,launch,post,', 'lda_method': ' start_kernel,launch_kernel,restart_kernel,start_new_async_kernel,post_start_kernel,', 'lsi_word': ' kernel,start,socket,connect,post,', 'lsi_method': ' start_kernel,post_start_kernel,restart_kernel,start_new_async_kernel,create_connected_socket,', 'spm_method': '  &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; start_restarter(manager.py) . <br> &#187; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {336: 1, 337: 1, 345: 1, 410: 1, 411: 1, 419: 1}}, {'key': 100037, 'parent': 10025, 'tfidf_word': 'path real substitution get env start connection file spec kernel ', 'tfidf_method': 'restart_kernel _record_random_port_names write_connection_file KernelSpec kernel_spec from_ns test_connection_file_real_path is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,connection,file,start,write,', 'lda_method': ' start_kernel,pre_start_kernel,write_connection_file,record_random_port_names,start_new_async_kernel,', 'lsi_word': ' kernel,start,pre,format,cmd,', 'lsi_method': ' pre_start_kernel,start_kernel,format_kernel_cmd,restart_kernel,start_new_async_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'localinterfaces.py', 'connect.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 17, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {338: 1, 339: 1, 340: 1, 341: 1, 342: 1, 343: 1, 344: 1, 412: 1, 413: 1, 414: 1, 415: 1, 416: 1, 417: 1, 418: 1, 1361: 1, 1362: 1, 1363: 1}}, {'key': 100009, 'parent': 10005, 'tfidf_word': 'raw identity handle feed default channels tracking version send execute ', 'tfidf_method': 'start_channels test_default_version test_feed_identities test_msg is_complete test_send_raw test_serialize test_tracking execute handle ', 'lda_word': ' msg,extract,header,kernel,client,', 'lda_method': ' msg,extract_header,blockingkernelclient,kernel_info,history,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' extract_header,msg,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; complete(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; history(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; inspect(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; interrupt_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; test_send(test_session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; shutdown(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'client.py', 'test_session.py', 'utils.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 28, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {347: 1, 355: 1, 467: 1, 490: 1, 503: 1, 514: 1, 527: 1, 537: 1, 547: 1, 558: 1, 568: 1, 618: 1, 633: 1, 643: 1, 653: 1, 663: 1, 673: 1, 683: 1, 729: 1, 739: 1, 771: 1, 774: 1, 788: 1, 796: 1, 857: 1, 891: 1, 902: 1, 1389: 1}}, {'key': 100006, 'parent': 10003, 'tfidf_word': 'serialize identity handle feed default channels unique version send execute ', 'tfidf_method': 'test_tracking test_serialize test_send_raw is_complete test_feed_identities test_default_version execute start_channels test_msg handle ', 'lda_word': ' msg,header,kernel,client,test,', 'lda_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,client,test,', 'lsi_method': ' msg_id,msg_header,msg,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; send(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'client.py', 'test_session.py', 'utils.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {348: 1, 356: 1, 468: 1, 491: 1, 504: 1, 515: 1, 528: 1, 538: 1, 548: 1, 559: 1, 569: 1, 619: 1, 634: 1, 644: 1, 654: 1, 664: 1, 674: 1, 684: 1, 730: 1, 740: 1, 772: 1, 775: 1, 789: 1, 795: 1, 797: 1, 858: 1, 892: 1, 903: 1, 1390: 1}}, {'key': 100061, 'parent': 10043, 'tfidf_word': 'sign test serialize send handle interrupt kernel tracking ', 'tfidf_method': 'serialize sign send interrupt_kernel handle test_send test_serialize test_tracking ', 'lda_word': ' sign,send,handle,serialize,test,', 'lda_method': ' sign,serialize,test_serialize,send,interrupt_kernel,', 'lsi_word': ' serialize,send,sign,test,tracking,', 'lsi_method': ' sign,serialize,send,test_send,handle,', 'spm_method': '  &#187; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {357: 1, 742: 1, 776: 1, 790: 1, 1391: 1}}, {'key': 100060, 'parent': 10043, 'tfidf_word': 'message test send handle interrupt kernel tracking ', 'tfidf_method': 'Message send interrupt_kernel handle test_send test_tracking ', 'lda_word': ' send,test,message,tracking,interrupt,', 'lda_method': ' send,message,interrupt_kernel,test_send,test_tracking,', 'lsi_word': ' send,message,test,tracking,interrupt,', 'lsi_method': ' message,send,handle,interrupt_kernel,test_send,', 'spm_method': '  &#187; interrupt_kernel(manager.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; handle(forward.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; Message(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {358: 1, 777: 1, 791: 1, 1392: 1}}, {'key': 100011, 'parent': 10006, 'tfidf_word': 'type identity found feed display data channels interrupt version execute ', 'tfidf_method': 'test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels is_complete test_no_adapt test_display_data ', 'lda_word': ' msg,header,extract,test,client,', 'lda_method': ' msg,extract_header,blockingkernelclient,execute,asynckernelclient,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {360: 1, 469: 1, 492: 1, 505: 1, 516: 1, 529: 1, 539: 1, 549: 1, 560: 1, 570: 1, 620: 1, 635: 1, 645: 1, 655: 1, 665: 1, 675: 1, 685: 1, 731: 1, 747: 1, 760: 1, 798: 1, 864: 1, 893: 1, 915: 1, 921: 1, 925: 1, 930: 1, 935: 1, 941: 1, 945: 1, 950: 1, 955: 1, 960: 1, 965: 1, 970: 1, 975: 1}}, {'key': 100004, 'parent': 10002, 'tfidf_word': 'type identity found feed display data channels version msg execute ', 'tfidf_method': 'test_kernel_info_reply test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_display_data ', 'lda_word': ' msg,header,kernel,test,client,', 'lda_method': ' msg,msg_id,msg_header,execute,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {361: 1, 470: 1, 493: 1, 506: 1, 517: 1, 530: 1, 540: 1, 550: 1, 561: 1, 571: 1, 621: 1, 636: 1, 646: 1, 656: 1, 666: 1, 676: 1, 686: 1, 732: 1, 748: 1, 761: 1, 799: 1, 865: 1, 894: 1, 916: 1, 922: 1, 926: 1, 931: 1, 936: 1, 942: 1, 946: 1, 951: 1, 956: 1, 961: 1, 966: 1, 971: 1, 976: 1}}, {'key': 100007, 'parent': 10004, 'tfidf_word': 'type identity found feed display data channels interrupt version execute ', 'tfidf_method': 'test_input_request test_execute_request execute test_display_data test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_execute_reply ', 'lda_word': ' msg,extract,header,kernel,client,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {362: 1, 471: 1, 494: 1, 507: 1, 518: 1, 531: 1, 541: 1, 551: 1, 562: 1, 572: 1, 622: 1, 637: 1, 647: 1, 657: 1, 667: 1, 677: 1, 687: 1, 733: 1, 749: 1, 762: 1, 800: 1, 866: 1, 895: 1, 917: 1, 923: 1, 927: 1, 932: 1, 937: 1, 943: 1, 947: 1, 952: 1, 957: 1, 962: 1, 967: 1, 972: 1, 977: 1}}, {'key': 100001, 'parent': 10001, 'tfidf_word': 'type identity found feed display data channels version execute msg ', 'tfidf_method': 'test_input_request test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_display_data ', 'lda_word': ' msg,header,test,client,kernel,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {363: 1, 472: 1, 495: 1, 508: 1, 519: 1, 532: 1, 542: 1, 552: 1, 563: 1, 573: 1, 623: 1, 638: 1, 648: 1, 658: 1, 668: 1, 678: 1, 688: 1, 734: 1, 750: 1, 763: 1, 801: 1, 867: 1, 896: 1, 918: 1, 924: 1, 928: 1, 933: 1, 938: 1, 944: 1, 948: 1, 953: 1, 958: 1, 963: 1, 968: 1, 973: 1, 978: 1}}, {'key': 100008, 'parent': 10004, 'tfidf_word': 'interrupt type identity feed display data channels raw version execute ', 'tfidf_method': 'test_inspect_reply test_execute_request execute test_complete_request test_complete_reply interrupt_kernel start_channels is_complete test_inspect_request_token test_display_data ', 'lda_word': ' msg,kernel,client,header,extract,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {364: 1, 473: 1, 496: 1, 509: 1, 520: 1, 533: 1, 543: 1, 553: 1, 564: 1, 574: 1, 624: 1, 639: 1, 649: 1, 659: 1, 669: 1, 679: 1, 689: 1, 735: 1, 751: 1, 766: 1, 802: 1, 868: 1, 897: 1, 981: 1, 987: 1, 991: 1, 996: 1, 1002: 1, 1006: 1, 1011: 1, 1016: 1, 1021: 1, 1026: 1, 1031: 1, 1036: 1}}, {'key': 100002, 'parent': 10001, 'tfidf_word': 'type identity feed display data channels raw version msg execute ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,test,execute,complete,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {365: 1, 474: 1, 497: 1, 510: 1, 521: 1, 534: 1, 544: 1, 554: 1, 565: 1, 575: 1, 625: 1, 640: 1, 650: 1, 660: 1, 670: 1, 680: 1, 690: 1, 736: 1, 752: 1, 767: 1, 803: 1, 869: 1, 898: 1, 982: 1, 988: 1, 992: 1, 997: 1, 1003: 1, 1007: 1, 1012: 1, 1017: 1, 1022: 1, 1027: 1, 1032: 1, 1037: 1}}, {'key': 100010, 'parent': 10006, 'tfidf_word': 'interrupt type identity feed display data channels raw version execute ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,extract,header,test,client,', 'lda_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {366: 1, 475: 1, 498: 1, 511: 1, 522: 1, 535: 1, 545: 1, 555: 1, 566: 1, 576: 1, 626: 1, 641: 1, 651: 1, 661: 1, 671: 1, 681: 1, 691: 1, 737: 1, 753: 1, 768: 1, 804: 1, 870: 1, 899: 1, 983: 1, 989: 1, 993: 1, 998: 1, 1004: 1, 1008: 1, 1013: 1, 1018: 1, 1023: 1, 1028: 1, 1033: 1, 1038: 1}}, {'key': 100003, 'parent': 10002, 'tfidf_word': 'type identity feed display data channels raw version msg execute ', 'tfidf_method': 'test_inspect_reply is_complete test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,client,test,kernel,', 'lda_method': ' msg,msg_id,msg_header,kernel_info,test_inspect_request_token,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {367: 1, 476: 1, 499: 1, 512: 1, 523: 1, 536: 1, 546: 1, 556: 1, 567: 1, 577: 1, 627: 1, 642: 1, 652: 1, 662: 1, 672: 1, 682: 1, 692: 1, 738: 1, 754: 1, 769: 1, 805: 1, 871: 1, 900: 1, 984: 1, 990: 1, 994: 1, 999: 1, 1005: 1, 1009: 1, 1014: 1, 1019: 1, 1024: 1, 1029: 1, 1034: 1, 1039: 1}}, {'key': 100074, 'parent': 10044, 'tfidf_word': 'thread handle interrupt kernel test send ', 'tfidf_method': 'send thread_send interrupt_kernel handle test_send ', 'lda_word': ' send,thread,kernel,interrupt,test,', 'lda_method': ' send,thread_send,interrupt_kernel,handle,test_send,', 'lsi_word': ' send,thread,test,kernel,interrupt,', 'lsi_method': ' send,thread_send,test_send,interrupt_kernel,handle,', 'spm_method': '  &#187; interrupt_kernel(manager.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; handle(forward.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; test_send(test_session.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'threaded.py', 'test_session.py', 'forward.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '694': 'test_send(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {368: 1, 764: 1, 1402: 1}}, {'key': 100070, 'parent': 10044, 'tfidf_word': 'connection file new path real start test kernel manager async ', 'tfidf_method': 'ConnectionFileMixin KernelManager AsyncKernelManager AsyncIOLoopKernelManager IOLoopKernelManager start_new_async_kernel test_connection_file_real_path ', 'lda_word': ' manager,kernel,file,connection,mixin,', 'lda_method': ' kernelmanager,connectionfilemixin,test_connection_file_real_path,asynckernelmanager,ioloopkernelmanager,', 'lsi_word': ' kernel,manager,async,connection,file,', 'lsi_method': ' kernelmanager,connectionfilemixin,asynckernelmanager,asyncioloopkernelmanager,start_new_async_kernel,', 'spm_method': '  &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {407: 1, 603: 1, 613: 1, 1360: 1}}, {'key': 100027, 'parent': 10016, 'tfidf_word': 'port restarter alive async mixin stop manager cleanup kernel spec ', 'tfidf_method': 'client signal_kernel cleanup cleanup_connection_file is_alive ConnectionFileMixin KernelSpecManager KernelSpec start_new_async_kernel stop_restarter ', 'lda_word': ' mixin,kernel,manager,connection,file,', 'lda_method': ' start_new_kernel,shutdown_kernel,run_kernel,get_connection_info,has_kernel,', 'lsi_word': ' kernel,shutdown,new,start,run,', 'lsi_method': ' run_kernel,start_new_kernel,shutdown_kernel,has_kernel,launch_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'kernelspec.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {408: 1, 420: 1, 421: 1, 432: 1, 434: 1, 435: 1, 436: 1, 438: 1, 439: 1, 440: 1, 442: 1, 463: 1, 464: 1, 465: 1, 466: 1}}, {'key': 100033, 'parent': 10022, 'tfidf_word': 'mixin load find run cleanup async app file connection kernel ', 'tfidf_method': 'client test_load_connection_file_session test_load_connection_file_session_with_kn run_kernel start_new_async_kernel start_new_kernel test_app_load_connection_file test_find_connection_file test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' record,port,random,mixin,test,', 'lda_method': ' record_random_port_names,client,write_connection_file,start_new_async_kernel,load_connection_file,', 'lsi_word': ' file,connection,load,port,random,', 'lsi_method': ' write_connection_file,record_random_port_names,load_connection_file,init_connection_file,initialize,', 'spm_method': '  &#187; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'test_connect.py', 'consoleapp.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}, 'execution_paths': {409: 1, 433: 1, 1057: 1, 1064: 1, 1076: 1, 1083: 1, 1095: 1, 1100: 1, 1108: 1, 1111: 1}}, {'key': 100025, 'parent': 10015, 'tfidf_word': 'env get url make create start connect socket spec kernel ', 'tfidf_method': 'kernel_spec _launch_kernel _connect_control_socket start_restarter local_ips is_local_ip KernelSpec _make_url _get_env_substitutions from_ns ', 'lda_word': ' kernel,start,new,run,pre,', 'lda_method': ' start_new_kernel,start_kernel,run_kernel,post_start_kernel,make_url,', 'lsi_word': ' kernel,start,new,run,pre,', 'lsi_method': ' start_kernel,run_kernel,start_new_kernel,pre_start_kernel,format_kernel_cmd,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)'}, 'execution_paths': {422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1}}, {'key': 100026, 'parent': 10016, 'tfidf_word': 'thread sign adapt message control serialize utcnow socket connect msg ', 'tfidf_method': 'send adapt sign send thread_send utcnow Message _connect_control_socket serialize send ', 'lda_word': ' kernel,shutdown,connect,request,socket,', 'lda_method': ' msg,request_shutdown,run_kernel,start_new_kernel,shutdown_kernel,', 'lsi_word': ' kernel,msg,shutdown,run,start,', 'lsi_method': ' msg,start_new_kernel,shutdown_kernel,run_kernel,request_shutdown,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'connect.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 20, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)'}, 'execution_paths': {443: 1, 444: 1, 445: 1, 446: 1, 447: 1, 448: 1, 449: 1, 450: 1, 451: 1, 452: 1, 453: 1, 454: 1, 455: 1, 456: 1, 457: 1, 458: 1, 459: 1, 460: 1, 461: 1, 462: 1}}, {'key': 100063, 'parent': 10044, 'tfidf_word': 'recv ready wait get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready wait_for_ready get_msgs get_iopub_msg ', 'lda_word': ' msg,get,recv,wait,ready,', 'lda_method': ' get_msg,recv,wait_for_ready,get_msgs,get_stdin_msg,', 'lsi_word': ' get,msg,recv,ready,wait,', 'lsi_method': ' get_msg,recv,wait_for_ready,get_iopub_msg,get_stdin_msg,', 'spm_method': '  &#187; get_stdin_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_msgs(channels.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_iopub_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'client.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '99': 'get_iopub_msg(client.py)', '101': 'get_stdin_msg(client.py)', '104': 'wait_for_ready(client.py)', '123': 'wait_for_ready(client.py)'}, 'execution_paths': {501: 1, 579: 1, 581: 1, 592: 1, 696: 1}}, {'key': 100069, 'parent': 10044, 'tfidf_word': 'async blocking client kernel connection file hb mixin abc channel ', 'tfidf_method': 'KernelClient ChannelABC BlockingKernelClient AsyncKernelClient HBChannelABC ConnectionFileMixin ', 'lda_word': ' client,kernel,channel,abc,async,', 'lda_method': ' kernelclient,channelabc,asynckernelclient,connectionfilemixin,blockingkernelclient,', 'lsi_word': ' kernel,client,channel,abc,async,', 'lsi_method': ' kernelclient,channelabc,blockingkernelclient,asynckernelclient,hbchannelabc,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ConnectionFileMixin(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'channelsabc.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '188': 'ConnectionFileMixin(connect.py)', '116': 'BlockingKernelClient(client.py)'}, 'execution_paths': {524: 1, 525: 1, 526: 1, 630: 1, 631: 1, 632: 1}}, {'key': 100072, 'parent': 10044, 'tfidf_word': 'dict string validate client kernel execute async blocking ', 'tfidf_method': 'validate_string_dict execute BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' execute,string,validate,dict,kernel,', 'lda_method': ' execute,validate_string_dict,asynckernelclient,blockingkernelclient,', 'lsi_word': ' execute,validate,dict,string,client,', 'lsi_method': ' execute,validate_string_dict,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; validate_string_dict(client.py) . <br> &#187; execute(utils.py) &rarr; execute(client.py) &rarr; validate_string_dict(client.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; validate_string_dict(client.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'utils.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '116': 'BlockingKernelClient(client.py)', '704': 'execute(utils.py)'}, 'execution_paths': {578: 1, 693: 1, 901: 1}}, {'key': 100064, 'parent': 10044, 'tfidf_word': 'recv ready wait get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready get_msgs wait_for_ready get_iopub_msg ', 'lda_word': ' msg,get,recv,ready,wait,', 'lda_method': ' recv,wait_for_ready,get_msg,get_msgs,get_stdin_msg,', 'lsi_word': ' msg,get,recv,ready,wait,', 'lsi_method': ' get_msg,recv,wait_for_ready,get_stdin_msg,get_msgs,', 'spm_method': '  &#187; get_stdin_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_msgs(channels.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_iopub_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '104': 'wait_for_ready(client.py)', '111': 'get_msgs(channels.py)', '123': 'wait_for_ready(client.py)'}, 'execution_paths': {580: 1, 582: 1, 593: 1, 616: 1, 694: 1}}, {'key': 100056, 'parent': 10039, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': '  &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channelsabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(managerabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(threaded.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {585: 1, 587: 1, 588: 1, 589: 1, 590: 1, 591: 1}}, {'key': 100077, 'parent': 10044, 'tfidf_word': 'poll callback execute fire start stop ', 'tfidf_method': 'poll start _fire_callbacks stop do_execute ', 'lda_word': ' start,poll,stop,execute,fire,', 'lda_method': ' poll,do_execute,stop,start,fire_callbacks,', 'lsi_word': ' poll,callback,fire,start,execute,', 'lsi_method': ' poll,start,stop,fire_callbacks,do_execute,', 'spm_method': '  &#187; start(restarter.py) &rarr; poll(restarter.py) &rarr; _fire_callbacks(restarter.py) . <br> &#187; start(restarter.py) &rarr; poll(restarter.py) &rarr; stop(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; _fire_callbacks(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; stop(restarter.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['restarter.py', 'signalkernel.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)', '510': 'do_execute(signalkernel.py)'}, 'execution_paths': {594: 1, 595: 1, 1331: 1, 1332: 1}}, {'key': 100057, 'parent': 10040, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,ready,wait,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': '  &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channelsabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(managerabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(threaded.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {697: 1, 699: 1, 700: 1, 701: 1, 702: 1, 703: 1}}, {'key': 100040, 'parent': 10028, 'tfidf_word': 'dir directory find init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec setUp NoSuchKernel _is_kernel_dir _is_valid_kernel_name _find_spec_directory _get_kernel_spec_by_name __init__ ', 'lda_word': ' spec,kernel,dir,find,directory,', 'lda_method': ' get_kernel_spec,setup,is_valid_kernel_name,nosuchkernel,init,', 'lsi_word': ' kernel,spec,get,set,name,', 'lsi_method': ' get_kernel_spec,setup,find_spec_directory,is_kernel_dir,get_kernel_spec_by_name,', 'spm_method': '  &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {707: 1, 708: 1, 709: 1, 710: 1, 711: 1}}, {'key': 100043, 'parent': 10028, 'tfidf_word': 'set up name get kernel spec init no such valid ', 'tfidf_method': 'get_kernel_spec setUp NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' get,kernel,spec,set,name,', 'lda_method': ' setup,get_kernel_spec,is_valid_kernel_name,nosuchkernel,init,', 'lsi_word': ' kernel,get,spec,set,name,', 'lsi_method': ' get_kernel_spec,setup,get_kernel_spec_by_name,nosuchkernel,is_valid_kernel_name,', 'spm_method': '  &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {713: 1, 714: 1, 715: 1, 717: 1}}, {'key': 100038, 'parent': 10026, 'tfidf_word': 'directory test find get subclass kernel spec set up specs ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec get_all_specs test_get_kernel_spec test_subclass setUp test_find_all_specs find_kernel_specs get_kernel_spec ', 'lda_word': ' kernel,spec,find,get,dir,', 'lda_method': ' find_spec_directory,is_kernel_dir,get_kernel_spec,get_all_specs,setup,', 'lsi_word': ' kernel,spec,get,find,directory,', 'lsi_method': ' find_spec_directory,is_kernel_dir,get_kernel_spec,get_all_specs,test_subclass,', 'spm_method': '  &#187; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)'}, 'execution_paths': {716: 1, 1222: 1, 1227: 1, 1233: 1, 1260: 1, 1267: 1, 1273: 1, 1275: 1}}, {'key': 100073, 'parent': 10044, 'tfidf_word': 'datetime datetimes utcnow test msgpack pickle ', 'tfidf_method': 'utcnow _datetime_test test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' test,datetimes,utcnow,datetime,pickle,', 'lda_method': ' utcnow,datetime_test,test_datetimes_msgpack,test_datetimes_pickle,test_datetimes,', 'lsi_word': ' test,datetime,utcnow,datetimes,pickle,', 'lsi_method': ' utcnow,datetime_test,test_datetimes,test_datetimes_pickle,test_datetimes_msgpack,', 'spm_method': '  &#187; test_datetimes(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; utcnow(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; utcnow(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)'}, 'execution_paths': {842: 1, 845: 1, 851: 1}}, {'key': 100054, 'parent': 10037, 'tfidf_word': 'select test close random port ', 'tfidf_method': 'select_random_ports test_random_ports close close ports close close close ', 'lda_word': ' port,random,close,test,select,', 'lda_method': ' test_random_ports,close,select_random_ports,port,', 'lsi_word': ' port,random,select,test,close,', 'lsi_method': ' select_random_ports,test_random_ports,close,port,', 'spm_method': '  &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_ssh.py', 'tunnel.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}, 'execution_paths': {876: 1, 877: 1, 878: 1, 879: 1, 880: 1, 881: 1}}, {'key': 100048, 'parent': 10032, 'tfidf_word': 'test close connection file write localhost port ', 'tfidf_method': 'write_connection_file test_write_connection_file close close ports localhost close close close ', 'lda_word': ' file,write,connection,test,localhost,', 'lda_method': ' test_write_connection_file,write_connection_file,port,close,localhost,', 'lsi_word': ' file,connection,write,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,localhost,port,', 'spm_method': '  &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1041: 1, 1042: 1, 1043: 1, 1044: 1, 1045: 1, 1046: 1, 1047: 1}}, {'key': 100049, 'parent': 10033, 'tfidf_word': 'load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close close ports localhost close close close ', 'lda_word': ' port,file,connection,test,write,', 'lda_method': ' close,write_connection_file,test_load_connection_file_session,localhost,port,', 'lsi_word': ' file,connection,load,write,session,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,localhost,port,', 'spm_method': '  &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1050: 1, 1051: 1, 1052: 1, 1053: 1, 1054: 1, 1055: 1, 1056: 1}}, {'key': 100031, 'parent': 10020, 'tfidf_word': 'names localhost ip default kn find app file load connection ', 'tfidf_method': 'load_connection_info init_connection_file initialize _ip_default _record_random_port_names localhost test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' connection,load,file,info,session,', 'lda_method': ' test_load_connection_file_session_with_kn,load_connection_info,load_connection_file,ip_default,localhost,', 'lsi_word': ' connection,load,file,test,info,', 'lsi_method': ' load_connection_file,load_connection_info,init_connection_file,initialize,ip_default,', 'spm_method': '  &#187; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {1058: 1, 1059: 1, 1065: 1, 1066: 1, 1077: 1, 1078: 1, 1084: 1, 1085: 1, 1096: 1, 1097: 1, 1101: 1, 1102: 1}}, {'key': 100047, 'parent': 10031, 'tfidf_word': 'kn load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close close ports localhost close close close ', 'lda_word': ' connection,file,kn,close,load,', 'lda_method': ' write_connection_file,test_load_connection_file_session_with_kn,close,localhost,port,', 'lsi_word': ' connection,file,load,test,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,port,localhost,', 'spm_method': '  &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1069: 1, 1070: 1, 1071: 1, 1072: 1, 1073: 1, 1074: 1, 1075: 1}}, {'key': 100046, 'parent': 10030, 'tfidf_word': 'app load test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close close ports localhost close close close ', 'lda_word': ' file,test,connection,app,load,', 'lda_method': ' test_app_load_connection_file,write_connection_file,close,port,localhost,', 'lsi_word': ' file,connection,load,test,write,', 'lsi_method': ' test_app_load_connection_file,write_connection_file,close,localhost,port,', 'spm_method': '  &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1088: 1, 1089: 1, 1090: 1, 1091: 1, 1092: 1, 1093: 1, 1094: 1}}, {'key': 100052, 'parent': 10036, 'tfidf_word': 'test loop process thread lifecycle tcp cinfo id sequence shutdown ', 'tfidf_method': '__init__ _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,init,get,km,test,', 'lda_method': ' get_tcp_km,init,test_tcp_lifecycle,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'lsi_word': ' tcp,test,lifecycle,get,init,', 'lsi_method': ' get_tcp_km,init,test_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'spm_method': '  &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1134: 1, 1138: 1, 1142: 1, 1155: 1, 1163: 1, 1167: 1, 1171: 1, 1175: 1}}, {'key': 100024, 'parent': 10014, 'tfidf_word': 'process cinfo loop thread lifecycle shutdown id tcp kernel ipc ', 'tfidf_method': 'tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_ipc_cinfo test_ipc_lifecycle test_shutdown_all test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,spec,test,get,', 'lda_method': ' get_tcp_km,kernelspec,multikernelmanager,kernelspecmanager,test_tcp_lifecycle,', 'lsi_word': ' kernel,manager,spec,tcp,test,', 'lsi_method': ' multikernelmanager,kernelspec,kernelspecmanager,get_tcp_km,test_tcp_lifecycle,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1135: 1, 1139: 1, 1143: 1, 1148: 1, 1152: 1, 1156: 1, 1160: 1, 1164: 1, 1168: 1, 1172: 1, 1176: 1}}, {'key': 100021, 'parent': 10012, 'tfidf_word': 'thread process sequence cinfo kernel lifecycle id shutdown tcp ipc ', 'tfidf_method': 'tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_ipc_cinfo test_ipc_lifecycle test_shutdown_all test_start_sequence_ipc_kernels test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,ipc,multi,method,get,', 'lda_method': ' multikernelmanager,wrap,get_tcp_km,kernel_method,test_tcp_lifecycle,', 'lsi_word': ' kernel,tcp,test,multi,km,', 'lsi_method': ' wrap,kernel_method,multikernelmanager,get_tcp_km,test_tcp_lifecycle,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1136: 1, 1140: 1, 1144: 1, 1149: 1, 1153: 1, 1157: 1, 1161: 1, 1165: 1, 1169: 1, 1173: 1, 1177: 1}}, {'key': 100075, 'parent': 10044, 'tfidf_word': 'get init km test ipc cinfo kernel lifecycle sequence start ', 'tfidf_method': '__init__ _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' ipc,km,get,init,test,', 'lda_method': ' init,get_ipc_km,test_start_sequence_ipc_kernels,test_ipc_cinfo,test_ipc_lifecycle,', 'lsi_word': ' ipc,km,test,get,init,', 'lsi_method': ' get_ipc_km,init,test_start_sequence_ipc_kernels,test_ipc_cinfo,test_ipc_lifecycle,', 'spm_method': '  &#187; test_ipc_cinfo(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_ipc_lifecycle(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1147: 1, 1151: 1, 1159: 1}}, {'key': 100071, 'parent': 10044, 'tfidf_word': 'kernel parallel run start loop process thread tcp test lifecycle ', 'tfidf_method': '_run_lifecycle test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' test,lifecycle,kernel,run,parallel,', 'lda_method': ' test_start_parallel_process_kernels,test_tcp_lifecycle,run_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'lsi_word': ' lifecycle,test,tcp,parallel,run,', 'lsi_method': ' test_tcp_lifecycle,run_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_process_kernels,test_start_parallel_thread_kernels,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1162: 1, 1166: 1, 1170: 1, 1174: 1}}, {'key': 100023, 'parent': 10014, 'tfidf_word': 'sequence cinfo thread manager lifecycle shutdown id tcp ipc kernel ', 'tfidf_method': 'test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_cinfo test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,tcp,spec,multi,', 'lda_method': ' kernelspecmanager,asyncmultikernelmanager,kernelspec,multikernelmanager,get_tcp_km,', 'lsi_word': ' kernel,manager,spec,multi,tcp,', 'lsi_method': ' asyncmultikernelmanager,kernelspecmanager,kernelspec,multikernelmanager,get_tcp_km,', 'spm_method': '  &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1178: 1, 1181: 1, 1184: 1, 1186: 1, 1191: 1, 1193: 1, 1196: 1, 1200: 1, 1202: 1, 1205: 1, 1208: 1, 1211: 1}}, {'key': 100020, 'parent': 10012, 'tfidf_word': 'process sequence cinfo thread lifecycle id shutdown tcp kernel ipc ', 'tfidf_method': 'test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_cinfo test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,multi,manager,tcp,test,', 'lda_method': ' wrap,asyncmultikernelmanager,multikernelmanager,kernel_method,get_ipc_km,', 'lsi_word': ' kernel,manager,multi,tcp,lifecycle,', 'lsi_method': ' asyncmultikernelmanager,multikernelmanager,kernel_method,wrap,get_tcp_km,', 'spm_method': '  &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1179: 1, 1182: 1, 1185: 1, 1187: 1, 1192: 1, 1194: 1, 1197: 1, 1201: 1, 1203: 1, 1206: 1, 1209: 1, 1212: 1}}, {'key': 100058, 'parent': 10041, 'tfidf_word': 'test kernel parallel start tcp loop process thread id lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,tcp,kernel,raw,test,', 'lda_method': ' run_lifecycle,raw_tcp_lifecycle,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,tcp_lifecycle_with_loop,', 'lsi_word': ' lifecycle,tcp,raw,run,test,', 'lsi_method': ' run_lifecycle,raw_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1180: 1, 1183: 1, 1204: 1, 1207: 1, 1210: 1, 1213: 1}}, {'key': 100044, 'parent': 10028, 'tfidf_word': 'test name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec test_get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,test,init,', 'lda_method': ' test_get_kernel_spec,get_kernel_spec,nosuchkernel,is_valid_kernel_name,get_kernel_spec_by_name,', 'lsi_word': ' kernel,spec,get,test,name,', 'lsi_method': ' get_kernel_spec,test_get_kernel_spec,init,is_valid_kernel_name,nosuchkernel,', 'spm_method': '  &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1224: 1, 1225: 1, 1226: 1, 1228: 1}}, {'key': 100039, 'parent': 10027, 'tfidf_word': 'find subclass kernel spec specs init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs test_subclass _get_kernel_spec_by_name NoSuchKernel _is_valid_kernel_name __init__ ', 'lda_word': ' get,kernel,test,spec,specs,', 'lda_method': ' get_all_specs,test_subclass,get_kernel_spec,get_kernel_spec_by_name,test_find_all_specs,', 'lsi_word': ' get,kernel,specs,spec,test,', 'lsi_method': ' get_all_specs,get_kernel_spec,test_subclass,test_find_all_specs,get_kernel_spec_by_name,', 'spm_method': '  &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {1229: 1, 1230: 1, 1231: 1, 1232: 1, 1234: 1, 1256: 1, 1257: 1, 1258: 1, 1259: 1, 1261: 1}}, {'key': 100042, 'parent': 10028, 'tfidf_word': 'subclass test name get kernel spec init no such valid ', 'tfidf_method': 'get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,valid,name,subclass,test,', 'lda_method': ' get_kernel_spec,test_subclass,is_valid_kernel_name,get_kernel_spec_by_name,init,', 'lsi_word': ' kernel,spec,get,subclass,test,', 'lsi_method': ' get_kernel_spec,test_subclass,is_valid_kernel_name,init,nosuchkernel,', 'spm_method': '  &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1264: 1, 1265: 1, 1266: 1, 1268: 1}}, {'key': 100041, 'parent': 10028, 'tfidf_word': 'name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,get,spec,init,name,', 'lda_method': ' get_kernel_spec,get_kernel_spec_by_name,init,is_valid_kernel_name,nosuchkernel,', 'lsi_word': ' kernel,get,spec,name,valid,', 'lsi_method': ' get_kernel_spec,is_valid_kernel_name,init,get_kernel_spec_by_name,nosuchkernel,', 'spm_method': '  &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'633': 'get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1270: 1, 1271: 1, 1272: 1, 1274: 1}}, {'key': 100013, 'parent': 10008, 'tfidf_word': 'execute poll alive kernel restart callback fire stop ', 'tfidf_method': 'is_alive is_alive stop is_alive restart_kernel is_alive restart_kernel _fire_callbacks is_alive is_alive ', 'lda_word': ' execute,poll,restart,kernel,alive,', 'lda_method': ' poll,do_execute,is_alive,fire_callbacks,restart_kernel,', 'lsi_word': ' poll,execute,alive,restart,kernel,', 'lsi_method': ' do_execute,poll,is_alive,restart_kernel,stop,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(channels.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(channelsabc.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; stop(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(managerabc.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(managerabc.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(multikernelmanager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; _fire_callbacks(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(threaded.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '239': 'stop(restarter.py)', '732': 'is_alive(threaded.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '140': 'is_alive(channelsabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {1276: 1, 1278: 1, 1279: 1, 1280: 1, 1325: 1, 1326: 1, 1327: 1, 1328: 1, 1329: 1, 1330: 1}}, {'key': 100014, 'parent': 10008, 'tfidf_word': 'get env create control n kernel socket spec connect cleanup ', 'tfidf_method': '_create_connected_socket from_ns local_ips is_local_ip KernelSpec cleanup_random_ports cleanup_connection_file _make_url _get_env_substitutions _connect_control_socket ', 'lda_word': ' kernel,start,write,connection,poll,', 'lda_method': ' get_env_substitutions,pre_start_kernel,poll,restart_kernel,do_execute,', 'lsi_word': ' kernel,start,execute,restart,poll,', 'lsi_method': ' restart_kernel,do_execute,poll,start_kernel,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)'}, 'execution_paths': {1281: 1, 1282: 1, 1283: 1, 1284: 1, 1285: 1, 1286: 1, 1287: 1, 1288: 1, 1289: 1, 1290: 1, 1291: 1}}, {'key': 100012, 'parent': 10007, 'tfidf_word': 'message control alive utcnow send kernel connect socket cleanup msg ', 'tfidf_method': 'sign send utcnow Message stop_restarter thread_send is_alive _connect_control_socket serialize send ', 'lda_word': ' shutdown,kernel,request,restart,execute,', 'lda_method': ' msg,request_shutdown,msg_id,poll,msg_header,', 'lsi_word': ' kernel,shutdown,msg,restart,poll,', 'lsi_method': ' msg,shutdown_kernel,poll,restart_kernel,do_execute,', 'spm_method': '  &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br>', 'text_summary': '', 'files_count': 9, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'session.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 31, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {1292: 1, 1293: 1, 1294: 1, 1296: 1, 1297: 1, 1298: 1, 1300: 1, 1301: 1, 1302: 1, 1303: 1, 1304: 1, 1305: 1, 1306: 1, 1307: 1, 1308: 1, 1309: 1, 1310: 1, 1311: 1, 1312: 1, 1313: 1, 1314: 1, 1315: 1, 1316: 1, 1317: 1, 1318: 1, 1319: 1, 1320: 1, 1321: 1, 1322: 1, 1323: 1, 1324: 1}}, {'key': 100066, 'parent': 10044, 'tfidf_word': 'signaltest start test execute parallel prepare process sequence kernel thread ', 'tfidf_method': '_run_signaltest_lifecycle _prepare_kernel execute test_start_parallel_process_kernels test_start_parallel_thread_kernels test_start_sequence_kernels test_start_sequence_process_kernels ', 'lda_word': ' kernel,sequence,signaltest,run,start,', 'lda_method': ' run_signaltest_lifecycle,execute,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,prepare_kernel,', 'lsi_word': ' kernel,run,test,signaltest,start,', 'lsi_method': ' run_signaltest_lifecycle,execute,prepare_kernel,test_start_parallel_thread_kernels,test_start_sequence_process_kernels,', 'spm_method': '  &#187; test_start_parallel_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br> &#187; test_start_sequence_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_sequence_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br> &#187; test_start_sequence_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_sequence_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)', '612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '614': 'test_start_sequence_process_kernels(test_kernelmanager.py)'}, 'execution_paths': {1339: 1, 1340: 1, 1342: 1, 1343: 1, 1344: 1, 1345: 1, 1347: 1, 1348: 1}}, {'key': 100081, 'parent': 10046, 'tfidf_word': 'openssh port exception forward server split ssh stop tunnel paramiko ', 'tfidf_method': 'close close ports forward_tunnel SSHException _split_server _stop_tunnel close close close ', 'lda_word': ' tunnel,open,connection,random,select,', 'lda_method': ' tunnel_connection,open_tunnel,openssh_tunnel,sshexception,select_random_ports,', 'lsi_word': ' tunnel,open,connection,port,paramiko,', 'lsi_method': ' open_tunnel,tunnel_connection,select_random_ports,close,paramiko_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; select_random_ports(tunnel.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; openssh_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['tunnel.py', 'channels.py', 'connect.py', 'threaded.py', 'forward.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)'}, 'execution_paths': {1364: 1, 1365: 1, 1366: 1, 1367: 1, 1368: 1, 1369: 1, 1370: 1, 1371: 1, 1372: 1, 1373: 1}}, {'key': 100080, 'parent': 10046, 'tfidf_word': 'passwordless try header extract id paramiko tunnel server split msg ', 'tfidf_method': 'open_tunnel paramiko_tunnel tunnel_connection msg msg msg extract_header msg_header msg_id _split_server ', 'lda_word': ' tunnel,msg,paramiko,connection,passwordless,', 'lda_method': ' open_tunnel,try_passwordless_paramiko,paramiko_tunnel,tunnel_connection,split_server,', 'lsi_word': ' msg,tunnel,paramiko,passwordless,open,', 'lsi_method': ' msg,tunnel_connection,paramiko_tunnel,open_tunnel,try_passwordless_paramiko,', 'spm_method': '  &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)'}, 'execution_paths': {1374: 1, 1375: 1, 1376: 1, 1377: 1, 1378: 1, 1379: 1, 1380: 1, 1381: 1, 1382: 1, 1383: 1, 1384: 1}}, {'key': 1000365, 'parent': 100078, 'tfidf_word': 'call handler run ', 'tfidf_method': 'call_handlers run ', 'lda_word': ' run,call,handler,', 'lda_method': ' call_handlers,run,', 'lsi_word': ' call,handler,run,', 'lsi_method': ' run,call_handlers,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'135': 'run(channels.py)', '131': 'call_handlers(channels.py)'}, 'execution_paths': {0: 1}}, {'key': 1000100, 'parent': 100062, 'tfidf_word': 'close create run socket ', 'tfidf_method': '_create_socket run close close close close close ', 'lda_word': ' socket,create,close,run,', 'lda_method': ' run,create_socket,close,', 'lsi_word': ' create,run,socket,close,', 'lsi_method': ' close,create_socket,run,', 'spm_method': '  &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(channels.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(channels.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(threaded.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(threaded.py) . <br> &#187; run(channels.py) &rarr; _create_socket(channels.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'threaded.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'135': 'run(channels.py)', '128': '_create_socket(channels.py)', '83': 'close(channels.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '718': 'close(threaded.py)'}, 'execution_paths': {1: 1, 2: 1, 3: 1, 4: 1, 5: 1}}, {'key': 1000366, 'parent': 100078, 'tfidf_word': 'dead poll run time ', 'tfidf_method': '_poll run time_to_dead ', 'lda_word': ' time,run,poll,dead,', 'lda_method': ' time_to_dead,poll,run,', 'lsi_word': ' poll,run,time,dead,', 'lsi_method': ' poll,run,time_to_dead,', 'spm_method': '  &#187; run(channels.py) &rarr; _poll(channels.py) &rarr; time_to_dead(channelsabc.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'channelsabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'135': 'run(channels.py)', '130': '_poll(channels.py)', '145': 'time_to_dead(channelsabc.py)'}, 'execution_paths': {6: 1}}, {'key': 1000367, 'parent': 100078, 'tfidf_word': 'dead run time ', 'tfidf_method': 'run time_to_dead ', 'lda_word': ' dead,time,run,', 'lda_method': ' run,time_to_dead,', 'lsi_word': ' dead,run,time,', 'lsi_method': ' time_to_dead,run,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'channelsabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'135': 'run(channels.py)', '145': 'time_to_dead(channelsabc.py)'}, 'execution_paths': {7: 1}}, {'key': 1000368, 'parent': 100078, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive ', 'lda_word': ' beating,alive,', 'lda_method': ' is_alive,is_beating,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '86': 'is_alive(channels.py)'}, 'execution_paths': {8: 1}}, {'key': 1000393, 'parent': 100087, 'tfidf_word': 'alive kernel interactive ready wait beating channels poll stop start ', 'tfidf_method': 'is_alive wait_for_ready execute_interactive wait_for_ready is_beating is_alive poll do_execute stop_channels execute_interactive ', 'lda_word': ' kernel,launch,alive,execute,start,', 'lda_method': ' start,has_kernel,launch_kernel,is_alive,execute_interactive,', 'lsi_word': ' kernel,alive,launch,start,execute,', 'lsi_method': ' is_alive,has_kernel,launch_kernel,start,wait_for_ready,', 'spm_method': '  &#187; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; is_alive(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; start(runapp.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['channels.py', 'manager.py', 'threaded.py', 'kernelspecapp.py', 'runapp.py', 'client.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '357': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '725': 'stop_channels(threaded.py)', '291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '97': 'execute_interactive(client.py)', '104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)'}, 'execution_paths': {9: 1, 100: 1, 237: 1, 246: 1, 586: 1, 698: 1, 1277: 1}}, {'key': 1000350, 'parent': 100078, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_alive is_beating ', 'lda_word': ' alive,beating,', 'lda_method': ' is_alive,is_beating,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '112': 'is_alive(channels.py)'}, 'execution_paths': {10: 1}}, {'key': 1000351, 'parent': 100078, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive ', 'lda_word': ' alive,beating,', 'lda_method': ' is_beating,is_alive,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '732': 'is_alive(threaded.py)'}, 'execution_paths': {11: 1}}, {'key': 1000352, 'parent': 100078, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive ', 'lda_word': ' beating,alive,', 'lda_method': ' is_alive,is_beating,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'channelsabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '140': 'is_alive(channelsabc.py)'}, 'execution_paths': {12: 1}}, {'key': 1000347, 'parent': 100078, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive ', 'lda_word': ' alive,beating,', 'lda_method': ' is_beating,is_alive,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '412': 'is_alive(multikernelmanager.py)'}, 'execution_paths': {13: 1}}, {'key': 1000348, 'parent': 100078, 'tfidf_word': 'alive beating ', 'tfidf_method': 'is_beating is_alive ', 'lda_word': ' alive,beating,', 'lda_method': ' is_beating,is_alive,', 'lsi_word': ' beating,alive,', 'lsi_method': ' is_beating,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'managerabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'133': 'is_beating(channels.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {14: 1}}, {'key': 1000349, 'parent': 100078, 'tfidf_word': 'close stop ', 'tfidf_method': 'close stop ', 'lda_word': ' close,stop,', 'lda_method': ' stop,close,', 'lsi_word': ' stop,close,', 'lsi_method': ' stop,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'136': 'stop(channels.py)', '132': 'close(channels.py)'}, 'execution_paths': {15: 1}}, {'key': 1000087, 'parent': 100051, 'tfidf_word': 'i jupyter python connection file mixin session app console ', 'tfidf_method': 'IPythonConsoleApp JupyterConsoleApp ConnectionFileMixin Session ', 'lda_word': ' app,console,jupyter,python,session,', 'lda_method': ' ipythonconsoleapp,jupyterconsoleapp,connectionfilemixin,session,', 'lsi_word': ' console,app,python,jupyter,file,', 'lsi_method': ' ipythonconsoleapp,jupyterconsoleapp,session,connectionfilemixin,', 'spm_method': '  &#187; IPythonConsoleApp(consoleapp.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; IPythonConsoleApp(consoleapp.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'213': 'IPythonConsoleApp(consoleapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}, 'execution_paths': {16: 1, 17: 1}}, {'key': 1000353, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '453': '__init__(session.py)'}, 'execution_paths': {18: 1}}, {'key': 1000354, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '716': '__init__(threaded.py)'}, 'execution_paths': {19: 1}}, {'key': 1000355, 'parent': 100078, 'tfidf_word': 'call handle handler recv setup stream init ', 'tfidf_method': '__init__ __init__ _handle_recv call_handlers setup_stream ', 'lda_word': ' init,stream,handle,recv,call,', 'lda_method': ' call_handlers,init,handle_recv,setup_stream,', 'lsi_word': ' init,handler,handle,setup,stream,', 'lsi_method': ' init,handle_recv,setup_stream,call_handlers,', 'spm_method': '  &#187; __init__(consoleapp.py) &rarr; __init__(threaded.py) &rarr; _handle_recv(threaded.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(threaded.py) &rarr; _handle_recv(threaded.py) &rarr; call_handlers(threaded.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(threaded.py) &rarr; setup_stream(threaded.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(threaded.py) &rarr; setup_stream(threaded.py) &rarr; _handle_recv(threaded.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(threaded.py) &rarr; setup_stream(threaded.py) &rarr; _handle_recv(threaded.py) &rarr; call_handlers(threaded.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(threaded.py) &rarr; setup_stream(threaded.py) &rarr; call_handlers(threaded.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '726': '__init__(threaded.py)', '737': 'setup_stream(threaded.py)', '728': '_handle_recv(threaded.py)', '729': 'call_handlers(threaded.py)'}, 'execution_paths': {20: 1}}, {'key': 1000356, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '392': '__init__(multikernelmanager.py)'}, 'execution_paths': {21: 1}}, {'key': 1000026, 'parent': 100019, 'tfidf_word': 'args pickle pack msgpack version kn id cull roundtrip zero ', 'tfidf_method': 'setUp test_args test_session_id test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' test,check,packer,init,utcnow,', 'lda_method': ' check_packers,init,utcnow,squash_dates,setup,', 'lsi_word': ' packer,init,check,test,squash,', 'lsi_method': ' init,check_packers,utcnow,squash_dates,setup,', 'spm_method': '  &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {22: 1, 23: 1, 61: 1, 62: 1, 725: 1, 726: 1, 784: 1, 785: 1, 806: 1, 807: 1, 810: 1, 811: 1, 815: 1, 816: 1, 820: 1, 821: 1, 825: 1, 826: 1, 830: 1, 831: 1, 834: 1, 835: 1, 838: 1, 839: 1, 848: 1, 849: 1, 853: 1, 854: 1, 904: 1, 905: 1, 911: 1, 912: 1, 1060: 1, 1061: 1, 1079: 1, 1080: 1}}, {'key': 1000051, 'parent': 100030, 'tfidf_word': 'args packer pack msgpack version kn id cull pickle zero ', 'tfidf_method': 'test_args test_session_id setUp test_load_connection_file_session_with_kn test_load_connection_file_session setUp test_default_version __init__ test_bad_pack test_zero_digest_history ', 'lda_word': ' auth,init,new,test,digest,', 'lda_method': ' init,new_auth,test_default_version,test_bad_packer,test_bad_unpacker,', 'lsi_word': ' init,auth,new,test,bad,', 'lsi_method': ' init,new_auth,setup,test_load_connection_file_session,test_cull_digest_history,', 'spm_method': '  &#187; setUp(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_args(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_pack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_packer(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_roundtrip(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_bad_unpacker(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_session_id(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['consoleapp.py', 'session.py', 'connect.py', 'test_session.py', 'test_adapter.py', 'test_connect.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '457': '__init__(session.py)', '465': '_new_auth(session.py)', '198': '_session_default(connect.py)', '678': 'setUp(test_session.py)', '680': 'test_args(test_session.py)', '697': 'test_session_id(test_session.py)', '700': 'test_zero_digest_history(test_session.py)', '687': 'test_cull_digest_history(test_session.py)', '681': 'test_bad_pack(test_session.py)', '684': 'test_bad_unpack(test_session.py)', '682': 'test_bad_packer(test_session.py)', '685': 'test_bad_unpacker(test_session.py)', '683': 'test_bad_roundtrip(test_session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '516': 'test_default_version(test_adapter.py)', '519': 'setUp(test_adapter.py)', '564': 'test_load_connection_file_session(test_connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)'}, 'execution_paths': {24: 1, 63: 1, 727: 1, 786: 1, 808: 1, 812: 1, 817: 1, 822: 1, 827: 1, 832: 1, 836: 1, 840: 1, 850: 1, 855: 1, 906: 1, 913: 1, 1062: 1, 1081: 1}}, {'key': 1000357, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '81': '__init__(channels.py)'}, 'execution_paths': {25: 1}}, {'key': 1000358, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '107': '__init__(channels.py)'}, 'execution_paths': {26: 1}}, {'key': 1000359, 'parent': 100078, 'tfidf_word': 'invalid number port init ', 'tfidf_method': 'InvalidPortNumber __init__ __init__ ', 'lda_word': ' init,number,invalid,port,', 'lda_method': ' init,invalidportnumber,', 'lsi_word': ' init,invalid,number,port,', 'lsi_method': ' init,invalidportnumber,', 'spm_method': '  &#187; __init__(consoleapp.py) &rarr; __init__(channels.py) &rarr; InvalidPortNumber(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '127': '__init__(channels.py)', '126': 'InvalidPortNumber(channels.py)'}, 'execution_paths': {27: 1}}, {'key': 1000112, 'parent': 100068, 'tfidf_word': 'check packer auth date new session squash utcnow init ', 'tfidf_method': '__init__ __init__ __init__ _check_packers squash_dates Session utcnow _new_auth ', 'lda_word': ' init,session,check,packer,auth,', 'lda_method': ' init,check_packers,session,utcnow,new_auth,', 'lsi_word': ' init,packer,check,squash,date,', 'lsi_method': ' init,check_packers,squash_dates,utcnow,new_auth,', 'spm_method': '  &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(consoleapp.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br> &#187; __init__(session.py) &rarr; __init__(session.py) &rarr; _new_auth(session.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; squash_dates(jsonutil.py) . <br> &#187; __init__(session.py) &rarr; _check_packers(session.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['consoleapp.py', 'session.py', 'jsonutil.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '485': '__init__(session.py)', '457': '__init__(session.py)', '459': '_check_packers(session.py)', '450': 'utcnow(session.py)', '244': 'squash_dates(jsonutil.py)', '465': '_new_auth(session.py)', '441': 'Session(session.py)'}, 'execution_paths': {28: 1, 29: 1, 30: 1, 31: 1}}, {'key': 1000360, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {32: 1}}, {'key': 1000361, 'parent': 100078, 'tfidf_word': 'init ', 'tfidf_method': '__init__ __init__ ', 'lda_word': ' init,', 'lda_method': ' init,', 'lsi_word': ' init,', 'lsi_method': ' init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['consoleapp.py', 'signalkernel.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'215': '__init__(consoleapp.py)', '509': '__init__(signalkernel.py)'}, 'execution_paths': {33: 1}}, {'key': 1000362, 'parent': 100078, 'tfidf_word': 'attributes create event interrupt kernel launch security ', 'tfidf_method': 'launch_kernel create_interrupt_event SECURITY_ATTRIBUTES ', 'lda_word': ' create,security,kernel,launch,event,', 'lda_method': ' create_interrupt_event,security_attributes,launch_kernel,', 'lsi_word': ' security,kernel,launch,attribute,event,', 'lsi_method': ' create_interrupt_event,launch_kernel,security_attributes,', 'spm_method': '  &#187; launch_kernel(launcher.py) &rarr; create_interrupt_event(win_interrupt.py) &rarr; SECURITY_ATTRIBUTES(win_interrupt.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['launcher.py', 'win_interrupt.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '739': 'create_interrupt_event(win_interrupt.py)', '741': 'SECURITY_ATTRIBUTES(win_interrupt.py)'}, 'execution_paths': {34: 1}}, {'key': 1000363, 'parent': 100078, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'launch_kernel close ', 'lda_word': ' kernel,launch,close,', 'lda_method': ' launch_kernel,close,', 'lsi_word': ' close,kernel,launch,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['launcher.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '718': 'close(threaded.py)'}, 'execution_paths': {35: 1}}, {'key': 1000364, 'parent': 100078, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'close launch_kernel ', 'lda_word': ' launch,close,kernel,', 'lda_method': ' close,launch_kernel,', 'lsi_word': ' close,kernel,launch,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['launcher.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '132': 'close(channels.py)'}, 'execution_paths': {36: 1}}, {'key': 1000343, 'parent': 100078, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'launch_kernel close ', 'lda_word': ' close,launch,kernel,', 'lda_method': ' launch_kernel,close,', 'lsi_word': ' close,kernel,launch,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['launcher.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '730': 'close(threaded.py)'}, 'execution_paths': {37: 1}}, {'key': 1000344, 'parent': 100078, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'launch_kernel close ', 'lda_word': ' launch,kernel,close,', 'lda_method': ' close,launch_kernel,', 'lsi_word': ' close,kernel,launch,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['launcher.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '83': 'close(channels.py)'}, 'execution_paths': {38: 1}}, {'key': 1000345, 'parent': 100078, 'tfidf_word': 'close kernel launch ', 'tfidf_method': 'close launch_kernel ', 'lda_word': ' close,kernel,launch,', 'lda_method': ' launch_kernel,close,', 'lsi_word': ' close,kernel,launch,', 'lsi_method': ' launch_kernel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['launcher.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'298': 'launch_kernel(launcher.py)', '109': 'close(channels.py)'}, 'execution_paths': {39: 1}}, {'key': 1000384, 'parent': 100084, 'tfidf_word': 'exception kernel openssh tunnel passwordless ssh try ', 'tfidf_method': 'tunnel_to_kernel SSHException _try_passwordless_openssh try_passwordless_ssh ', 'lda_word': ' try,ssh,passwordless,exception,kernel,', 'lda_method': ' sshexception,try_passwordless_ssh,tunnel_to_kernel,try_passwordless_openssh,', 'lsi_word': ' ssh,passwordless,try,exception,tunnel,', 'lsi_method': ' try_passwordless_openssh,try_passwordless_ssh,tunnel_to_kernel,sshexception,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; _try_passwordless_openssh(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_openssh(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_openssh(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_openssh(tunnel.py) &rarr; SSHException(tunnel.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['connect.py', 'tunnel.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '498': '_try_passwordless_openssh(tunnel.py)', '494': 'SSHException(tunnel.py)'}, 'execution_paths': {40: 1}}, {'key': 1000383, 'parent': 100084, 'tfidf_word': 'paramiko ssh tunnel extract header passwordless try server split msg ', 'tfidf_method': 'tunnel_to_kernel _try_passwordless_paramiko try_passwordless_ssh extract_header msg msg msg _split_server ', 'lda_word': ' passwordless,try,kernel,ssh,tunnel,', 'lda_method': ' msg,tunnel_to_kernel,try_passwordless_paramiko,try_passwordless_ssh,extract_header,', 'lsi_word': ' passwordless,try,msg,tunnel,ssh,', 'lsi_method': ' msg,try_passwordless_paramiko,try_passwordless_ssh,tunnel_to_kernel,extract_header,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; extract_header(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; extract_header(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)'}, 'execution_paths': {41: 1, 43: 1, 45: 1, 47: 1, 49: 1, 51: 1}}, {'key': 1000382, 'parent': 100084, 'tfidf_word': 'header id kernel paramiko ssh tunnel passwordless try msg ', 'tfidf_method': 'tunnel_to_kernel msg msg_header msg_id _try_passwordless_paramiko try_passwordless_ssh msg msg ', 'lda_word': ' msg,passwordless,try,paramiko,ssh,', 'lda_method': ' msg,try_passwordless_paramiko,msg_header,tunnel_to_kernel,try_passwordless_ssh,', 'lsi_word': ' msg,passwordless,try,paramiko,tunnel,', 'lsi_method': ' msg,msg_header,msg_id,try_passwordless_paramiko,try_passwordless_ssh,', 'spm_method': '  &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg_header(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; try_passwordless_ssh(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '504': 'try_passwordless_ssh(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {42: 1, 44: 1, 46: 1, 48: 1, 50: 1}}, {'key': 1000126, 'parent': 100078, 'tfidf_word': 'kernel openssh exception ssh stop tunnel ', 'tfidf_method': 'tunnel_to_kernel openssh_tunnel SSHException _stop_tunnel ', 'lda_word': ' tunnel,openssh,kernel,stop,ssh,', 'lda_method': ' tunnel_to_kernel,openssh_tunnel,stop_tunnel,sshexception,', 'lsi_word': ' tunnel,kernel,openssh,stop,exception,', 'lsi_method': ' tunnel_to_kernel,openssh_tunnel,sshexception,stop_tunnel,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; openssh_tunnel(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; openssh_tunnel(tunnel.py) &rarr; _stop_tunnel(tunnel.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['connect.py', 'tunnel.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}, 'execution_paths': {52: 1, 53: 1}}, {'key': 1000091, 'parent': 100053, 'tfidf_word': 'kernel random select tunnel close port ', 'tfidf_method': 'tunnel_to_kernel select_random_ports close close ports close close close ', 'lda_word': ' kernel,tunnel,random,select,port,', 'lda_method': ' tunnel_to_kernel,select_random_ports,close,port,', 'lsi_word': ' port,tunnel,kernel,random,select,', 'lsi_method': ' select_random_ports,tunnel_to_kernel,close,port,', 'spm_method': '  &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_to_kernel(connect.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['connect.py', 'tunnel.py', 'channels.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'190': 'tunnel_to_kernel(connect.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}, 'execution_paths': {54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1}}, {'key': 1000346, 'parent': 100078, 'tfidf_word': 'default session ', 'tfidf_method': '_session_default Session ', 'lda_word': ' session,default,', 'lda_method': ' session_default,session,', 'lsi_word': ' session,default,', 'lsi_method': ' session_default,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['connect.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'198': '_session_default(connect.py)', '441': 'Session(session.py)'}, 'execution_paths': {60: 1}}, {'key': 1000342, 'parent': 100078, 'tfidf_word': 'blocking client connection get info ', 'tfidf_method': 'blocking_client get_connection_info ', 'lda_word': ' blocking,get,client,connection,info,', 'lda_method': ' blocking_client,get_connection_info,', 'lsi_word': ' blocking,client,connection,get,info,', 'lsi_method': ' get_connection_info,blocking_client,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'199': 'blocking_client(connect.py)', '208': 'get_connection_info(connect.py)'}, 'execution_paths': {64: 1}}, {'key': 1000111, 'parent': 100067, 'tfidf_word': 'change class context find port create factory default kernel manager ', 'tfidf_method': '_create_kernel_manager_factory create_kernel_manager _context_default _find_available_port _kernel_manager_class_changed _kernel_manager_factory_default ', 'lda_word': ' kernel,manager,create,factory,default,', 'lda_method': ' create_kernel_manager_factory,find_available_port,create_kernel_manager,kernel_manager_class_changed,kernel_manager_factory_default,', 'lsi_word': ' manager,kernel,create,factory,default,', 'lsi_method': ' create_kernel_manager,create_kernel_manager_factory,context_default,kernel_manager_factory_default,kernel_manager_class_changed,', 'spm_method': '  &#187; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_class_changed(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; _create_kernel_manager_factory(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _context_default(multikernelmanager.py) . <br> &#187; _kernel_manager_factory_default(multikernelmanager.py) &rarr; create_kernel_manager(multikernelmanager.py) &rarr; _find_available_port(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'398': '_kernel_manager_class_changed(multikernelmanager.py)', '396': '_create_kernel_manager_factory(multikernelmanager.py)', '424': 'create_kernel_manager(multikernelmanager.py)', '397': '_find_available_port(multikernelmanager.py)', '395': '_context_default(multikernelmanager.py)', '399': '_kernel_manager_factory_default(multikernelmanager.py)'}, 'execution_paths': {65: 1, 66: 1, 67: 1, 68: 1}}, {'key': 1000337, 'parent': 100078, 'tfidf_word': 'id kernel len list ', 'tfidf_method': '__len__ list_kernel_ids ', 'lda_word': ' list,kernel,len,', 'lda_method': ' list_kernel_ids,len,', 'lsi_word': ' kernel,len,list,', 'lsi_method': ' list_kernel_ids,len,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'393': '__len__(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)'}, 'execution_paths': {69: 1}}, {'key': 1000122, 'parent': 100076, 'tfidf_word': 'pre duplicate error id new start kernel ', 'tfidf_method': 'pre_start_kernel start_kernel DuplicateKernelError new_kernel_id ', 'lda_word': ' kernel,pre,start,duplicate,new,', 'lda_method': ' pre_start_kernel,new_kernel_id,duplicatekernelerror,start_kernel,', 'lsi_word': ' kernel,start,pre,duplicate,error,', 'lsi_method': ' pre_start_kernel,start_kernel,duplicatekernelerror,new_kernel_id,', 'spm_method': '  &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; DuplicateKernelError(multikernelmanager.py) . <br> &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; new_kernel_id(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'423': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)'}, 'execution_paths': {70: 1, 71: 1}}, {'key': 1000338, 'parent': 100078, 'tfidf_word': 'remove shutdown kernel ', 'tfidf_method': 'remove_kernel shutdown_kernel ', 'lda_word': ' kernel,remove,shutdown,', 'lda_method': ' shutdown_kernel,remove_kernel,', 'lsi_word': ' kernel,remove,shutdown,', 'lsi_method': ' shutdown_kernel,remove_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'421': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)'}, 'execution_paths': {72: 1}}, {'key': 1000093, 'parent': 100055, 'tfidf_word': 'check get id finish interrupt restart signal kernel shutdown ', 'tfidf_method': '_check_kernel_id get_kernel finish_shutdown interrupt_kernel restart_kernel shutdown_all shutdown_kernel signal_kernel shutdown_all shutdown_kernel ', 'lda_word': ' kernel,get,check,restart,interrupt,', 'lda_method': ' get_kernel,check_kernel_id,shutdown_kernel,shutdown_all,finish_shutdown,', 'lsi_word': ' kernel,get,check,shutdown,signal,', 'lsi_method': ' check_kernel_id,get_kernel,shutdown_all,shutdown_kernel,finish_shutdown,', 'spm_method': '  &#187; interrupt_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; restart_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; finish_shutdown(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; signal_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_all(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br> &#187; shutdown_kernel(multikernelmanager.py) &rarr; get_kernel(multikernelmanager.py) &rarr; _check_kernel_id(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'421': 'shutdown_kernel(multikernelmanager.py)', '410': 'get_kernel(multikernelmanager.py)', '394': '_check_kernel_id(multikernelmanager.py)', '420': 'shutdown_all(multikernelmanager.py)', '387': 'shutdown_kernel(multikernelmanager.py)', '384': 'interrupt_kernel(multikernelmanager.py)', '388': 'signal_kernel(multikernelmanager.py)', '385': 'restart_kernel(multikernelmanager.py)', '386': 'shutdown_all(multikernelmanager.py)', '383': 'finish_shutdown(multikernelmanager.py)'}, 'execution_paths': {73: 1, 77: 1, 82: 1, 83: 1, 84: 1, 85: 1, 88: 1}}, {'key': 1000339, 'parent': 100078, 'tfidf_word': 'request shutdown ', 'tfidf_method': 'request_shutdown shutdown_all ', 'lda_word': ' shutdown,request,', 'lda_method': ' shutdown_all,request_shutdown,', 'lsi_word': ' shutdown,request,', 'lsi_method': ' shutdown_all,request_shutdown,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)'}, 'execution_paths': {74: 1}}, {'key': 1000340, 'parent': 100078, 'tfidf_word': 'kernel remove shutdown ', 'tfidf_method': 'remove_kernel shutdown_all ', 'lda_word': ' kernel,remove,shutdown,', 'lda_method': ' shutdown_all,remove_kernel,', 'lsi_word': ' kernel,remove,shutdown,', 'lsi_method': ' shutdown_all,remove_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)'}, 'execution_paths': {75: 1}}, {'key': 1000341, 'parent': 100078, 'tfidf_word': 'finish shutdown ', 'tfidf_method': 'finish_shutdown shutdown_all ', 'lda_word': ' shutdown,finish,', 'lda_method': ' finish_shutdown,shutdown_all,', 'lsi_word': ' shutdown,finish,', 'lsi_method': ' shutdown_all,finish_shutdown,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '408': 'finish_shutdown(multikernelmanager.py)'}, 'execution_paths': {76: 1}}, {'key': 1000335, 'parent': 100078, 'tfidf_word': 'id kernel list shutdown ', 'tfidf_method': 'list_kernel_ids shutdown_all ', 'lda_word': ' list,kernel,shutdown,', 'lda_method': ' list_kernel_ids,shutdown_all,', 'lsi_word': ' kernel,list,shutdown,', 'lsi_method': ' shutdown_all,list_kernel_ids,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'420': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)'}, 'execution_paths': {78: 1}}, {'key': 1000123, 'parent': 100076, 'tfidf_word': 'pre duplicate error id new start kernel ', 'tfidf_method': 'start_kernel pre_start_kernel DuplicateKernelError new_kernel_id ', 'lda_word': ' kernel,start,pre,duplicate,new,', 'lda_method': ' start_kernel,pre_start_kernel,new_kernel_id,duplicatekernelerror,', 'lsi_word': ' kernel,start,pre,error,duplicate,', 'lsi_method': ' pre_start_kernel,start_kernel,new_kernel_id,duplicatekernelerror,', 'spm_method': '  &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; DuplicateKernelError(multikernelmanager.py) . <br> &#187; start_kernel(multikernelmanager.py) &rarr; pre_start_kernel(multikernelmanager.py) &rarr; new_kernel_id(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'389': 'start_kernel(multikernelmanager.py)', '415': 'pre_start_kernel(multikernelmanager.py)', '380': 'DuplicateKernelError(multikernelmanager.py)', '414': 'new_kernel_id(multikernelmanager.py)'}, 'execution_paths': {79: 1, 80: 1}}, {'key': 1000327, 'parent': 100078, 'tfidf_word': 'remove shutdown kernel ', 'tfidf_method': 'shutdown_kernel remove_kernel ', 'lda_word': ' kernel,remove,shutdown,', 'lda_method': ' remove_kernel,shutdown_kernel,', 'lsi_word': ' kernel,remove,shutdown,', 'lsi_method': ' shutdown_kernel,remove_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'387': 'shutdown_kernel(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)'}, 'execution_paths': {81: 1}}, {'key': 1000320, 'parent': 100078, 'tfidf_word': 'request shutdown ', 'tfidf_method': 'shutdown_all request_shutdown ', 'lda_word': ' shutdown,request,', 'lda_method': ' request_shutdown,shutdown_all,', 'lsi_word': ' shutdown,request,', 'lsi_method': ' shutdown_all,request_shutdown,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '418': 'request_shutdown(multikernelmanager.py)'}, 'execution_paths': {86: 1}}, {'key': 1000321, 'parent': 100078, 'tfidf_word': 'cleanup resource shutdown ', 'tfidf_method': 'shutdown_all cleanup_resources ', 'lda_word': ' shutdown,cleanup,resource,', 'lda_method': ' shutdown_all,cleanup_resources,', 'lsi_word': ' cleanup,resource,shutdown,', 'lsi_method': ' shutdown_all,cleanup_resources,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '402': 'cleanup_resources(multikernelmanager.py)'}, 'execution_paths': {87: 1}}, {'key': 1000317, 'parent': 100078, 'tfidf_word': 'kernel remove shutdown ', 'tfidf_method': 'shutdown_all remove_kernel ', 'lda_word': ' remove,shutdown,kernel,', 'lda_method': ' shutdown_all,remove_kernel,', 'lsi_word': ' kernel,remove,shutdown,', 'lsi_method': ' shutdown_all,remove_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '416': 'remove_kernel(multikernelmanager.py)'}, 'execution_paths': {89: 1}}, {'key': 1000318, 'parent': 100078, 'tfidf_word': 'id kernel list shutdown ', 'tfidf_method': 'shutdown_all list_kernel_ids ', 'lda_word': ' kernel,shutdown,list,', 'lda_method': ' shutdown_all,list_kernel_ids,', 'lsi_word': ' kernel,list,shutdown,', 'lsi_method': ' shutdown_all,list_kernel_ids,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'386': 'shutdown_all(multikernelmanager.py)', '413': 'list_kernel_ids(multikernelmanager.py)'}, 'execution_paths': {90: 1}}, {'key': 1000319, 'parent': 100078, 'tfidf_word': 'flush ', 'tfidf_method': '_flush flush ', 'lda_word': ' flush,', 'lda_method': ' flush,', 'lsi_word': ' flush,', 'lsi_method': ' flush,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'731': 'flush(threaded.py)', '727': '_flush(threaded.py)'}, 'execution_paths': {91: 1}}, {'key': 1000322, 'parent': 100078, 'tfidf_word': 'channel client hb kernel threaded ', 'tfidf_method': 'HBChannel ThreadedKernelClient ', 'lda_word': ' thread,kernel,channel,hb,client,', 'lda_method': ' hbchannel,threadedkernelclient,', 'lsi_word': ' hb,kernel,client,thread,channel,', 'lsi_method': ' threadedkernelclient,hbchannel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'714': 'ThreadedKernelClient(threaded.py)', '125': 'HBChannel(channels.py)'}, 'execution_paths': {92: 1}}, {'key': 1000323, 'parent': 100078, 'tfidf_word': 'channel client kernel socket zmq threaded ', 'tfidf_method': 'ThreadedKernelClient ThreadedZMQSocketChannel ', 'lda_word': ' thread,kernel,zmq,channel,socket,', 'lda_method': ' threadedzmqsocketchannel,threadedkernelclient,', 'lsi_word': ' thread,channel,socket,zmq,kernel,', 'lsi_method': ' threadedzmqsocketchannel,threadedkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'714': 'ThreadedKernelClient(threaded.py)', '715': 'ThreadedZMQSocketChannel(threaded.py)'}, 'execution_paths': {93: 1}}, {'key': 1000324, 'parent': 100078, 'tfidf_word': 'client io kernel loop thread threaded ', 'tfidf_method': 'IOLoopThread ThreadedKernelClient ', 'lda_word': ' thread,loop,io,client,kernel,', 'lda_method': ' ioloopthread,threadedkernelclient,', 'lsi_word': ' thread,client,kernel,loop,io,', 'lsi_method': ' threadedkernelclient,ioloopthread,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'714': 'ThreadedKernelClient(threaded.py)', '713': 'IOLoopThread(threaded.py)'}, 'execution_paths': {94: 1}}, {'key': 1000325, 'parent': 100078, 'tfidf_word': 'channels start ', 'tfidf_method': 'start start_channels ', 'lda_word': ' start,channels,', 'lda_method': ' start_channels,start,', 'lsi_word': ' start,channels,', 'lsi_method': ' start_channels,start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '720': 'start(threaded.py)'}, 'execution_paths': {95: 1}}, {'key': 1000326, 'parent': 100078, 'tfidf_word': 'channels io loop start thread ', 'tfidf_method': 'IOLoopThread start_channels ', 'lda_word': ' loop,channels,thread,io,start,', 'lda_method': ' start_channels,ioloopthread,', 'lsi_word': ' loop,start,io,thread,channels,', 'lsi_method': ' start_channels,ioloopthread,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '713': 'IOLoopThread(threaded.py)'}, 'execution_paths': {96: 1}}, {'key': 1000328, 'parent': 100078, 'tfidf_word': 'channels init start ', 'tfidf_method': '__init__ start_channels ', 'lda_word': ' init,channels,start,', 'lda_method': ' start_channels,init,', 'lsi_word': ' channels,init,start,', 'lsi_method': ' start_channels,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '716': '__init__(threaded.py)'}, 'execution_paths': {97: 1}}, {'key': 1000329, 'parent': 100078, 'tfidf_word': 'channels check handle start info kernel reply ', 'tfidf_method': '_handle_kernel_info_reply _check_kernel_info_reply start_channels ', 'lda_word': ' info,kernel,reply,handle,channels,', 'lda_method': ' handle_kernel_info_reply,start_channels,check_kernel_info_reply,', 'lsi_word': ' kernel,reply,info,channels,check,', 'lsi_method': ' check_kernel_info_reply,handle_kernel_info_reply,start_channels,', 'spm_method': '  &#187; start_channels(threaded.py) &rarr; _check_kernel_info_reply(threaded.py) &rarr; _handle_kernel_info_reply(client.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'724': 'start_channels(threaded.py)', '722': '_check_kernel_info_reply(threaded.py)', '150': '_handle_kernel_info_reply(client.py)'}, 'execution_paths': {98: 1}}, {'key': 1000330, 'parent': 100078, 'tfidf_word': 'alive channels stop ', 'tfidf_method': 'stop_channels is_alive ', 'lda_word': ' alive,stop,channels,', 'lda_method': ' stop_channels,is_alive,', 'lsi_word': ' alive,channels,stop,', 'lsi_method': ' stop_channels,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '86': 'is_alive(channels.py)'}, 'execution_paths': {99: 1}}, {'key': 1000331, 'parent': 100078, 'tfidf_word': 'alive channels stop ', 'tfidf_method': 'is_alive stop_channels ', 'lda_word': ' channels,stop,alive,', 'lda_method': ' is_alive,stop_channels,', 'lsi_word': ' alive,channels,stop,', 'lsi_method': ' stop_channels,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '112': 'is_alive(channels.py)'}, 'execution_paths': {101: 1}}, {'key': 1000332, 'parent': 100078, 'tfidf_word': 'alive channels stop ', 'tfidf_method': 'stop_channels is_alive ', 'lda_word': ' channels,stop,alive,', 'lda_method': ' stop_channels,is_alive,', 'lsi_word': ' alive,channels,stop,', 'lsi_method': ' stop_channels,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '732': 'is_alive(threaded.py)'}, 'execution_paths': {102: 1}}, {'key': 1000333, 'parent': 100078, 'tfidf_word': 'alive channels stop ', 'tfidf_method': 'is_alive stop_channels ', 'lda_word': ' channels,stop,alive,', 'lda_method': ' stop_channels,is_alive,', 'lsi_word': ' alive,channels,stop,', 'lsi_method': ' stop_channels,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'channelsabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '140': 'is_alive(channelsabc.py)'}, 'execution_paths': {103: 1}}, {'key': 1000334, 'parent': 100078, 'tfidf_word': 'channels close stop ', 'tfidf_method': 'close stop stop_channels ', 'lda_word': ' stop,close,channels,', 'lda_method': ' stop,stop_channels,close,', 'lsi_word': ' stop,channels,close,', 'lsi_method': ' close,stop,stop_channels,', 'spm_method': '  &#187; stop_channels(threaded.py) &rarr; stop(threaded.py) &rarr; close(threaded.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '721': 'stop(threaded.py)', '718': 'close(threaded.py)'}, 'execution_paths': {104: 1}}, {'key': 1000336, 'parent': 100078, 'tfidf_word': 'alive channels stop ', 'tfidf_method': 'is_alive stop_channels ', 'lda_word': ' stop,channels,alive,', 'lda_method': ' stop_channels,is_alive,', 'lsi_word': ' alive,channels,stop,', 'lsi_method': ' stop_channels,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '412': 'is_alive(multikernelmanager.py)'}, 'execution_paths': {105: 1}}, {'key': 1000316, 'parent': 100078, 'tfidf_word': 'alive channels stop ', 'tfidf_method': 'is_alive stop_channels ', 'lda_word': ' channels,stop,alive,', 'lda_method': ' stop_channels,is_alive,', 'lsi_word': ' alive,channels,stop,', 'lsi_method': ' stop_channels,is_alive,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['threaded.py', 'managerabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'725': 'stop_channels(threaded.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {106: 1}}, {'key': 1000314, 'parent': 100078, 'tfidf_word': 'byte default id new secure ', 'tfidf_method': 'default_secure new_id_bytes ', 'lda_word': ' default,byte,new,secure,', 'lda_method': ' new_id_bytes,default_secure,', 'lsi_word': ' default,new,secure,byte,', 'lsi_method': ' new_id_bytes,default_secure,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'443': 'default_secure(session.py)', '447': 'new_id_bytes(session.py)'}, 'execution_paths': {107: 1}}, {'key': 1000315, 'parent': 100078, 'tfidf_word': 'default id new session ', 'tfidf_method': 'new_id _session_default ', 'lda_word': ' session,new,default,', 'lda_method': ' session_default,new_id,', 'lsi_word': ' default,new,session,', 'lsi_method': ' session_default,new_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'469': '_session_default(session.py)', '446': 'new_id(session.py)'}, 'execution_paths': {108: 1}}, {'key': 1000292, 'parent': 100078, 'tfidf_word': 'byte default id key new ', 'tfidf_method': 'new_id_bytes _key_default ', 'lda_word': ' byte,new,default,key,', 'lda_method': ' new_id_bytes,key_default,', 'lsi_word': ' default,key,new,byte,', 'lsi_method': ' new_id_bytes,key_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'463': '_key_default(session.py)', '447': 'new_id_bytes(session.py)'}, 'execution_paths': {109: 1}}, {'key': 1000293, 'parent': 100078, 'tfidf_word': 'auth change key new ', 'tfidf_method': '_key_changed _new_auth ', 'lda_word': ' change,auth,key,new,', 'lda_method': ' new_auth,key_changed,', 'lsi_word': ' change,key,new,auth,', 'lsi_method': ' new_auth,key_changed,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'462': '_key_changed(session.py)', '465': '_new_auth(session.py)'}, 'execution_paths': {110: 1}}, {'key': 1000294, 'parent': 100078, 'tfidf_word': 'auth change new scheme signature ', 'tfidf_method': '_new_auth _signature_scheme_changed ', 'lda_word': ' change,scheme,auth,signature,new,', 'lda_method': ' signature_scheme_changed,new_auth,', 'lsi_word': ' auth,change,new,scheme,signature,', 'lsi_method': ' signature_scheme_changed,new_auth,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'470': '_signature_scheme_changed(session.py)', '465': '_new_auth(session.py)'}, 'execution_paths': {111: 1}}, {'key': 1000097, 'parent': 100059, 'tfidf_word': 'deserialize sign test send recv handle raw serialize unserialize ', 'tfidf_method': 'deserialize sign recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' deserialize,test,sign,send,recv,', 'lda_method': ' deserialize,sign,test_send_raw,test_send,recv,', 'lsi_word': ' deserialize,sign,test,send,recv,', 'lsi_method': ' deserialize,sign,recv,test_send,handle,', 'spm_method': '  &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; handle(forward.py) &rarr; recv(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; sign(session.py) . <br> &#187; test_send_raw(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; deserialize(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '483': 'sign(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '695': 'test_send_raw(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {112: 1, 743: 1, 756: 1, 780: 1, 860: 1, 1397: 1}}, {'key': 1000061, 'parent': 100035, 'tfidf_word': 'parse tzinfo test send date recv handle raw serialize unserialize ', 'tfidf_method': '_ensure_tzinfo extract_dates parse_date deserialize recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' serialize,date,ensure,extract,tzinfo,', 'lda_method': ' extract_dates,deserialize,ensure_tzinfo,parse_date,unserialize,', 'lsi_word': ' date,parse,deserialize,tzinfo,ensure,', 'lsi_method': ' deserialize,ensure_tzinfo,parse_date,extract_dates,recv,', 'spm_method': '  &#187; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['session.py', 'jsonutil.py', 'test_session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '695': 'test_send_raw(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {113: 1, 744: 1, 757: 1, 781: 1, 861: 1, 1398: 1}}, {'key': 1000078, 'parent': 100045, 'tfidf_word': 'adapt deserialize utcnow test send recv handle raw serialize unserialize ', 'tfidf_method': 'utcnow deserialize adapt recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' deserialize,utcnow,adapt,unserialize,test,', 'lda_method': ' deserialize,utcnow,adapt,test_send_raw,recv,', 'lsi_word': ' utcnow,deserialize,adapt,test,send,', 'lsi_method': ' adapt,deserialize,utcnow,recv,test_send,', 'spm_method': '  &#187; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; recv(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['session.py', 'adapter.py', 'test_session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '695': 'test_send_raw(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {114: 1, 745: 1, 758: 1, 782: 1, 862: 1, 1399: 1}}, {'key': 1000085, 'parent': 100050, 'tfidf_word': 'deserialize history test send digest recv handle raw serialize unserialize ', 'tfidf_method': '_add_digest _cull_digest_history deserialize recv test_send unserialize handle test_send_raw test_serialize ', 'lda_word': ' digest,history,cull,test,add,', 'lda_method': ' deserialize,add_digest,cull_digest_history,recv,test_send,', 'lsi_word': ' digest,add,deserialize,history,cull,', 'lsi_method': ' cull_digest_history,add_digest,deserialize,recv,test_send,', 'spm_method': '  &#187; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; recv(session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_send(test_session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; deserialize(session.py) &rarr; _cull_digest_history(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'484': 'unserialize(session.py)', '474': 'deserialize(session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '479': 'recv(session.py)', '695': 'test_send_raw(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {115: 1, 746: 1, 759: 1, 783: 1, 863: 1, 1400: 1}}, {'key': 1000295, 'parent': 100078, 'tfidf_word': 'init msg2obj test ', 'tfidf_method': 'test_msg2obj __init__ ', 'lda_word': ' init,msg2obj,test,', 'lda_method': ' test_msg2obj,init,', 'lsi_word': ' init,msg2obj,test,', 'lsi_method': ' test_msg2obj,init,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'449': 'test_msg2obj(session.py)', '453': '__init__(session.py)'}, 'execution_paths': {116: 1}}, {'key': 1000296, 'parent': 100078, 'tfidf_word': 'message msg2obj test ', 'tfidf_method': 'Message test_msg2obj ', 'lda_word': ' msg2obj,test,message,', 'lda_method': ' test_msg2obj,message,', 'lsi_word': ' message,msg2obj,test,', 'lsi_method': ' test_msg2obj,message,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'449': 'test_msg2obj(session.py)', '440': 'Message(session.py)'}, 'execution_paths': {117: 1}}, {'key': 1000297, 'parent': 100078, 'tfidf_word': 'dict json ', 'tfidf_method': 'to_dict to_json ', 'lda_word': ' json,dict,', 'lda_method': ' to_dict,to_json,', 'lsi_word': ' json,dict,', 'lsi_method': ' to_json,to_dict,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'265': 'to_json(kernelspec.py)', '264': 'to_dict(kernelspec.py)'}, 'execution_paths': {118: 1}}, {'key': 1000060, 'parent': 100034, 'tfidf_word': 'name valid find specs install prefix priority spec kernel remove ', 'tfidf_method': 'find_kernel_specs _is_kernel_dir _is_valid_kernel_name find_kernel_specs remove_kernel_spec test_find_kernel_specs test_install_kernel_spec test_install_kernel_spec_prefix test_kernel_spec_priority test_remove_kernel_spec ', 'lda_word': ' kernel,find,specs,list,test,', 'lda_method': ' find_kernel_specs,is_kernel_dir,list_kernels_in,test_find_kernel_specs,test_install_kernel_spec_prefix,', 'lsi_word': ' kernel,find,specs,list,spec,', 'lsi_method': ' find_kernel_specs,list_kernels_in,is_kernel_dir,is_valid_kernel_name,remove_kernel_spec,', 'spm_method': '  &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_find_kernel_specs(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_install_kernel_spec(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_install_kernel_spec_prefix(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_kernel_spec_priority(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_remove_kernel_spec(test_kernelspec.py) &rarr; remove_kernel_spec(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'259': 'find_kernel_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '622': 'test_find_kernel_specs(test_kernelspec.py)', '626': 'test_kernel_spec_priority(test_kernelspec.py)', '624': 'test_install_kernel_spec(test_kernelspec.py)', '625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '627': 'test_remove_kernel_spec(test_kernelspec.py)', '277': 'remove_kernel_spec(kernelspec.py)'}, 'execution_paths': {119: 1, 120: 1, 1220: 1, 1221: 1, 1238: 1, 1239: 1, 1243: 1, 1244: 1, 1247: 1, 1248: 1, 1252: 1, 1253: 1}}, {'key': 1000105, 'parent': 100065, 'tfidf_word': 'destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec install_kernel_spec _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' spec,kernel,install,dir,valid,', 'lda_method': ' install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'lsi_word': ' kernel,spec,install,name,valid,', 'lsi_method': ' install_kernel_spec,get_destination_dir,is_valid_kernel_name,', 'spm_method': '  &#187; install_kernel_spec(kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; install_kernel_spec(kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'261': 'install_kernel_spec(kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}, 'execution_paths': {121: 1, 122: 1}}, {'key': 1000298, 'parent': 100078, 'tfidf_word': 'install kernel native spec ', 'tfidf_method': 'install_native_kernel_spec install_native_kernel_spec ', 'lda_word': ' native,spec,kernel,install,', 'lda_method': ' install_native_kernel_spec,', 'lsi_word': ' kernel,native,spec,install,', 'lsi_method': ' install_native_kernel_spec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'262': 'install_native_kernel_spec(kernelspec.py)', '276': 'install_native_kernel_spec(kernelspec.py)'}, 'execution_paths': {123: 1}}, {'key': 1000031, 'parent': 100022, 'tfidf_word': 'ksm list my native remove set specs up kernel spec ', 'tfidf_method': 'InstallNativeKernelSpec ListKernelSpecs RemoveKernelSpec _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default _kernel_spec_manager_default setUp MyKSM ', 'lda_word': ' kernel,spec,manager,app,default,', 'lda_method': ' kernelspecmanager,kernelspec,kernel_spec_manager_default,kernelspecapp,test_subclass,', 'lsi_word': ' kernel,spec,manager,app,default,', 'lsi_method': ' kernelspec,kernelspecmanager,kernel_spec_manager_default,kernelspecapp,test_subclass,', 'spm_method': '  &#187; KernelSpecApp(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _kernel_spec_manager_default(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _kernel_spec_manager_default(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _kernel_spec_manager_default(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _kernel_spec_manager_default(kernelspecapp.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _kernel_spec_manager_default(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; setUp(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; MyKSM(test_kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; MyKSM(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; MyKSM(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MyKSM(test_kernelspec.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['kernelapp.py', 'kernelspec.py', 'kernelspecapp.py', 'manager.py', 'test_kernelspec.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'245': 'KernelApp(kernelapp.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '292': '_kernel_spec_manager_default(kernelspecapp.py)', '286': '_kernel_spec_manager_default(kernelspecapp.py)', '295': '_kernel_spec_manager_default(kernelspecapp.py)', '289': '_kernel_spec_manager_default(kernelspecapp.py)', '282': 'KernelSpecApp(kernelspecapp.py)', '280': 'InstallKernelSpec(kernelspecapp.py)', '281': 'InstallNativeKernelSpec(kernelspecapp.py)', '284': 'RemoveKernelSpec(kernelspecapp.py)', '283': 'ListKernelSpecs(kernelspecapp.py)', '345': '_kernel_spec_manager_default(manager.py)', '618': 'setUp(test_kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '631': 'MyKSM(test_kernelspec.py)'}, 'execution_paths': {124: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 295: 1, 1214: 1, 1255: 1, 1269: 1}}, {'key': 1000299, 'parent': 100078, 'tfidf_word': 'config initialize ', 'tfidf_method': 'initialize config ', 'lda_word': ' config,initialize,', 'lda_method': ' initialize,config,', 'lsi_word': ' initialize,config,', 'lsi_method': ' initialize,config,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelapp.py', 'test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'247': 'initialize(kernelapp.py)', '585': 'config(test_kernelmanager.py)'}, 'execution_paths': {125: 1}}, {'key': 1000300, 'parent': 100078, 'tfidf_word': 'initialize record start ', 'tfidf_method': '_record_started initialize ', 'lda_word': ' record,start,initialize,', 'lda_method': ' record_started,initialize,', 'lsi_word': ' initialize,record,start,', 'lsi_method': ' record_started,initialize,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['kernelapp.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'247': 'initialize(kernelapp.py)', '246': '_record_started(kernelapp.py)'}, 'execution_paths': {126: 1}}, {'key': 1000301, 'parent': 100078, 'tfidf_word': 'call header update ', 'tfidf_method': '__call__ update_header ', 'lda_word': ' header,update,call,', 'lda_method': ' update_header,call,', 'lsi_word': ' call,header,update,', 'lsi_method': ' update_header,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '55': 'update_header(adapter.py)'}, 'execution_paths': {127: 1}}, {'key': 1000302, 'parent': 100078, 'tfidf_word': 'call metadata update ', 'tfidf_method': '__call__ update_metadata ', 'lda_word': ' call,metadata,update,', 'lda_method': ' update_metadata,call,', 'lsi_word': ' call,metadata,update,', 'lsi_method': ' update_metadata,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '56': 'update_metadata(adapter.py)'}, 'execution_paths': {128: 1}}, {'key': 1000303, 'parent': 100078, 'tfidf_word': 'call msg type update ', 'tfidf_method': '__call__ update_msg_type ', 'lda_word': ' type,call,msg,update,', 'lda_method': ' update_msg_type,call,', 'lsi_word': ' msg,type,update,call,', 'lsi_method': ' update_msg_type,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '57': 'update_msg_type(adapter.py)'}, 'execution_paths': {129: 1}}, {'key': 1000304, 'parent': 100078, 'tfidf_word': 'call error handle reply status ', 'tfidf_method': '__call__ handle_reply_status_error ', 'lda_word': ' handle,status,error,call,reply,', 'lda_method': ' handle_reply_status_error,call,', 'lsi_word': ' call,error,handle,reply,status,', 'lsi_method': ' handle_reply_status_error,call,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'53': '__call__(adapter.py)', '54': 'handle_reply_status_error(adapter.py)'}, 'execution_paths': {130: 1}}, {'key': 1000305, 'parent': 100078, 'tfidf_word': 'adapter v4 v5to ', 'tfidf_method': 'Adapter V5toV4 ', 'lda_word': ' v5to,adapter,v4,', 'lda_method': ' v5tov4,adapter,', 'lsi_word': ' adapter,v4,v5to,', 'lsi_method': ' v5tov4,adapter,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'48': 'V5toV4(adapter.py)', '46': 'Adapter(adapter.py)'}, 'execution_paths': {131: 1}}, {'key': 1000306, 'parent': 100078, 'tfidf_word': 'info kernel list reply str version ', 'tfidf_method': '_version_str_to_list kernel_info_reply ', 'lda_word': ' info,reply,list,version,kernel,', 'lda_method': ' version_str_to_list,kernel_info_reply,', 'lsi_word': ' list,str,info,version,reply,', 'lsi_method': ' version_str_to_list,kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'75': 'kernel_info_reply(adapter.py)', '49': '_version_str_to_list(adapter.py)'}, 'execution_paths': {132: 1}}, {'key': 1000307, 'parent': 100078, 'tfidf_word': 'code complete line request ', 'tfidf_method': 'code_to_line complete_request ', 'lda_word': ' code,line,request,complete,', 'lda_method': ' code_to_line,complete_request,', 'lsi_word': ' complete,line,request,code,', 'lsi_method': ' complete_request,code_to_line,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'70': 'complete_request(adapter.py)', '51': 'code_to_line(adapter.py)'}, 'execution_paths': {133: 1}}, {'key': 1000308, 'parent': 100078, 'tfidf_word': 'code extract info line object oname request v4 ', 'tfidf_method': 'code_to_line extract_oname_v4 object_info_request ', 'lda_word': ' request,oname,object,info,line,', 'lda_method': ' extract_oname_v4,code_to_line,object_info_request,', 'lsi_word': ' v4,extract,oname,request,line,', 'lsi_method': ' code_to_line,extract_oname_v4,object_info_request,', 'spm_method': '  &#187; object_info_request(adapter.py) &rarr; extract_oname_v4(adapter.py) &rarr; code_to_line(adapter.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'77': 'object_info_request(adapter.py)', '52': 'extract_oname_v4(adapter.py)', '51': 'code_to_line(adapter.py)'}, 'execution_paths': {134: 1}}, {'key': 1000309, 'parent': 100078, 'tfidf_word': 'code info line object request ', 'tfidf_method': 'code_to_line object_info_request ', 'lda_word': ' request,code,object,line,info,', 'lda_method': ' object_info_request,code_to_line,', 'lsi_word': ' line,object,info,request,code,', 'lsi_method': ' object_info_request,code_to_line,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'77': 'object_info_request(adapter.py)', '51': 'code_to_line(adapter.py)'}, 'execution_paths': {135: 1}}, {'key': 1000310, 'parent': 100078, 'tfidf_word': 'adapter v4to v5 ', 'tfidf_method': 'Adapter V4toV5 ', 'lda_word': ' v4to,adapter,v5,', 'lda_method': ' v4tov5,adapter,', 'lsi_word': ' adapter,v4to,v5,', 'lsi_method': ' v4tov5,adapter,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'47': 'V4toV5(adapter.py)', '46': 'Adapter(adapter.py)'}, 'execution_paths': {136: 1}}, {'key': 1000311, 'parent': 100078, 'tfidf_word': 'wrap ', 'tfidf_method': '_only_once wrapped ', 'lda_word': ' wrap,', 'lda_method': ' only_once,wrap,', 'lsi_word': ' wrap,', 'lsi_method': ' wrap,only_once,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'308': '_only_once(localinterfaces.py)', '317': 'wrapped(localinterfaces.py)'}, 'execution_paths': {137: 1}}, {'key': 1000044, 'parent': 100028, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip _requires_ips ips_loaded _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,populate,list,', 'lda_method': ' requires_ips,populate_from_list,load_ips,ips_loaded,load_ips_ip,', 'lsi_word': ' ip,load,require,list,populate,', 'lsi_method': ' ips_loaded,load_ips_ip,requires_ips,load_ips,populate_from_list,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)'}, 'execution_paths': {138: 1, 139: 1, 140: 1, 141: 1, 142: 1}}, {'key': 1000043, 'parent': 100028, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig _requires_ips ips_loaded _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,ifconfig,require,uniq,', 'lda_method': ' load_ips,populate_from_list,requires_ips,ips_loaded,load_ips_ifconfig,', 'lsi_word': ' ip,load,ifconfig,require,list,', 'lsi_method': ' load_ips,load_ips_ifconfig,requires_ips,ips_loaded,populate_from_list,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)'}, 'execution_paths': {143: 1, 144: 1, 145: 1, 146: 1, 147: 1}}, {'key': 1000042, 'parent': 100028, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig _requires_ips ips_loaded _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,ipconfig,require,list,', 'lda_method': ' load_ips,requires_ips,populate_from_list,ips_loaded,load_ips_ipconfig,', 'lsi_word': ' ip,load,ipconfig,require,populate,', 'lsi_method': ' load_ips_ipconfig,load_ips,requires_ips,ips_loaded,populate_from_list,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}, 'execution_paths': {148: 1, 149: 1, 150: 1, 151: 1, 152: 1}}, {'key': 1000045, 'parent': 100028, 'tfidf_word': 'netifaces addresses dumb local no public stable uniq load ip ', 'tfidf_method': '_load_ips _requires_ips ips_loaded _load_ips_netifaces NoIPAddresses _load_ips_dumb _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,require,netifaces,public,', 'lda_method': ' load_ips_netifaces,load_ips,ips_loaded,requires_ips,public_ips,', 'lsi_word': ' ip,load,require,netifaces,local,', 'lsi_method': ' ips_loaded,requires_ips,load_ips,load_ips_netifaces,local_ips,', 'spm_method': '  &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) . <br> &#187; _requires_ips(localinterfaces.py) &rarr; ips_loaded(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}, 'execution_paths': {153: 1, 154: 1, 155: 1, 156: 1, 157: 1}}, {'key': 1000049, 'parent': 100029, 'tfidf_word': 'gethostbyname stable uniq require test load ip ', 'tfidf_method': '_load_ips _load_ips_gethostbyname _uniq_stable _requires_ips ips_loaded test_load_ips ', 'lda_word': ' ip,load,uniq,stable,gethostbyname,', 'lda_method': ' uniq_stable,load_ips_gethostbyname,load_ips,requires_ips,test_load_ips,', 'lsi_word': ' ip,load,gethostbyname,uniq,stable,', 'lsi_method': ' load_ips_gethostbyname,load_ips,uniq_stable,requires_ips,ips_loaded,', 'spm_method': '  &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_gethostbyname(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_gethostbyname(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; ips_loaded(localinterfaces.py) &rarr; _load_ips_gethostbyname(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_gethostbyname(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_gethostbyname(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_gethostbyname(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['localinterfaces.py', 'test_localinterfaces.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'310': '_requires_ips(localinterfaces.py)', '318': 'ips_loaded(localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '303': '_load_ips_gethostbyname(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '634': 'test_load_ips(test_localinterfaces.py)'}, 'execution_paths': {158: 1, 1133: 1}}, {'key': 1000088, 'parent': 100051, 'tfidf_word': 'console jupyter run connection file mixin session app ', 'tfidf_method': 'JupyterConsoleApp RunApp ConnectionFileMixin Session ', 'lda_word': ' app,run,jupyter,console,session,', 'lda_method': ' jupyterconsoleapp,runapp,session,connectionfilemixin,', 'lsi_word': ' app,jupyter,console,run,connection,', 'lsi_method': ' jupyterconsoleapp,runapp,session,connectionfilemixin,', 'spm_method': '  &#187; RunApp(runapp.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; RunApp(runapp.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'434': 'RunApp(runapp.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)'}, 'execution_paths': {159: 1, 160: 1}}, {'key': 1000312, 'parent': 100078, 'tfidf_word': 'argv build command kernel line parse ', 'tfidf_method': 'build_kernel_argv parse_command_line ', 'lda_word': ' argv,line,parse,command,build,', 'lda_method': ' build_kernel_argv,parse_command_line,', 'lsi_word': ' argv,line,command,kernel,build,', 'lsi_method': ' parse_command_line,build_kernel_argv,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['runapp.py', 'consoleapp.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'438': 'parse_command_line(runapp.py)', '218': 'build_kernel_argv(consoleapp.py)'}, 'execution_paths': {161: 1}}, {'key': 1000055, 'parent': 100032, 'tfidf_word': 'random record initialize load default ip localhost write connection file ', 'tfidf_method': 'load_connection_file init_connection_file initialize initialize _record_random_port_names load_connection_info _ip_default write_connection_file localhost ', 'lda_word': ' connection,initialize,file,load,init,', 'lda_method': ' initialize,load_connection_file,init_connection_file,record_random_port_names,load_connection_info,', 'lsi_word': ' connection,file,initialize,load,init,', 'lsi_method': ' initialize,load_connection_file,init_connection_file,load_connection_info,record_random_port_names,', 'spm_method': '  &#187; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)'}, 'execution_paths': {162: 1, 163: 1, 164: 1}}, {'key': 1000056, 'parent': 100032, 'tfidf_word': 'init localhost manager initialize kernel client no such ', 'tfidf_method': 'initialize initialize init_kernel_manager localhost init_kernel_client NoSuchKernel ', 'lda_word': ' initialize,kernel,init,localhost,manager,', 'lda_method': ' initialize,init_kernel_manager,localhost,init_kernel_client,nosuchkernel,', 'lsi_word': ' initialize,kernel,init,manager,localhost,', 'lsi_method': ' initialize,localhost,init_kernel_manager,init_kernel_client,nosuchkernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_kernel_manager(consoleapp.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_manager(consoleapp.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_manager(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_kernel_client(consoleapp.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_kernel_client(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_kernel_manager(consoleapp.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_kernel_manager(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; NoSuchKernel(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '220': 'init_kernel_client(consoleapp.py)', '315': 'localhost(localinterfaces.py)', '221': 'init_kernel_manager(consoleapp.py)', '255': 'NoSuchKernel(kernelspec.py)'}, 'execution_paths': {165: 1, 171: 1, 172: 1}}, {'key': 1000054, 'parent': 100032, 'tfidf_word': 'record info localhost write initialize connection file default ip load ', 'tfidf_method': 'init_ssh initialize initialize _record_random_port_names load_connection_file load_connection_info write_connection_file localhost _ip_default ', 'lda_word': ' initialize,init,connection,file,load,', 'lda_method': ' initialize,record_random_port_names,init_ssh,write_connection_file,load_connection_file,', 'lsi_word': ' initialize,connection,load,file,init,', 'lsi_method': ' initialize,init_ssh,load_connection_file,record_random_port_names,load_connection_info,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) . <br> &#187; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; init_ssh(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; init_ssh(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; init_ssh(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(runapp.py) &rarr; initialize(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '223': 'initialize(consoleapp.py)', '222': 'init_ssh(consoleapp.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)'}, 'execution_paths': {166: 1, 167: 1, 168: 1, 169: 1, 170: 1}}, {'key': 1000379, 'parent': 100082, 'tfidf_word': 'extract header init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize extract_header msg msg msg ', 'lda_word': ' msg,info,kernel,init,header,', 'lda_method': ' msg,init_kernel_info,initialize,extract_header,kernel_info,', 'lsi_word': ' msg,kernel,info,init,header,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,extract_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {173: 1, 175: 1, 177: 1, 179: 1, 181: 1}}, {'key': 1000378, 'parent': 100082, 'tfidf_word': 'header id init initialize info kernel msg ', 'tfidf_method': 'kernel_info init_kernel_info initialize msg msg_header msg_id msg msg ', 'lda_word': ' msg,kernel,info,initialize,init,', 'lda_method': ' msg,msg_id,initialize,init_kernel_info,msg_header,', 'lsi_word': ' msg,info,kernel,header,init,', 'lsi_method': ' msg,init_kernel_info,initialize,kernel_info,msg_header,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {174: 1, 176: 1, 178: 1, 180: 1, 182: 1}}, {'key': 1000377, 'parent': 100082, 'tfidf_word': 'info init initialize kernel unpause get msg shell ', 'tfidf_method': 'init_kernel_info initialize unpause unpause get_shell_msg ', 'lda_word': ' init,info,initialize,unpause,kernel,', 'lda_method': ' initialize,unpause,init_kernel_info,get_shell_msg,', 'lsi_word': ' init,kernel,initialize,info,unpause,', 'lsi_method': ' init_kernel_info,initialize,unpause,get_shell_msg,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; unpause(channels.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; unpause(channelsabc.py) . <br> &#187; initialize(runapp.py) &rarr; init_kernel_info(runapp.py) &rarr; get_shell_msg(client.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'channels.py', 'channelsabc.py', 'client.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '436': 'init_kernel_info(runapp.py)', '137': 'unpause(channels.py)', '146': 'unpause(channelsabc.py)', '158': 'get_shell_msg(client.py)'}, 'execution_paths': {183: 1, 184: 1, 185: 1}}, {'key': 1000371, 'parent': 100079, 'tfidf_word': 'handle initialize interrupt kernel sigint ', 'tfidf_method': 'handle_sigint initialize interrupt_kernel interrupt_kernel ', 'lda_word': ' handle,kernel,sigint,initialize,interrupt,', 'lda_method': ' initialize,interrupt_kernel,handle_sigint,', 'lsi_word': ' handle,initialize,interrupt,kernel,sigint,', 'lsi_method': ' handle_sigint,initialize,interrupt_kernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(managerabc.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['runapp.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '411': 'interrupt_kernel(multikernelmanager.py)', '372': 'interrupt_kernel(managerabc.py)'}, 'execution_paths': {186: 1, 210: 1}}, {'key': 1000370, 'parent': 100079, 'tfidf_word': 'extract handle header initialize interrupt kernel sigint send msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize extract_header msg msg msg send ', 'lda_word': ' msg,sigint,kernel,initialize,interrupt,', 'lda_method': ' msg,extract_header,initialize,interrupt_kernel,handle_sigint,', 'lsi_word': ' msg,extract,handle,initialize,sigint,', 'lsi_method': ' msg,extract_header,handle_sigint,initialize,interrupt_kernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {187: 1, 195: 1, 200: 1, 202: 1, 204: 1, 206: 1}}, {'key': 1000369, 'parent': 100079, 'tfidf_word': 'handle header id initialize interrupt kernel sigint send msg ', 'tfidf_method': 'interrupt_kernel handle_sigint initialize msg msg_header msg_id msg msg send ', 'lda_word': ' msg,kernel,initialize,interrupt,sigint,', 'lda_method': ' msg,handle_sigint,msg_header,interrupt_kernel,msg_id,', 'lsi_word': ' msg,initialize,sigint,interrupt,kernel,', 'lsi_method': ' msg,handle_sigint,msg_id,msg_header,interrupt_kernel,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; initialize(runapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['runapp.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {188: 1, 196: 1, 201: 1, 203: 1, 205: 1, 207: 1}}, {'key': 1000372, 'parent': 100079, 'tfidf_word': 'signal sign adapt message control serialize utcnow kernel socket connect ', 'tfidf_method': 'adapt sign serialize send Message send_interrupt signal_kernel _connect_control_socket utcnow send ', 'lda_word': ' thread,send,interrupt,handle,initialize,', 'lda_method': ' handle_sigint,interrupt_kernel,initialize,send,make_url,', 'lsi_word': ' kernel,interrupt,sigint,handle,initialize,', 'lsi_method': ' handle_sigint,interrupt_kernel,initialize,send,create_connected_socket,', 'spm_method': '  &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) . <br> &#187; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; send(session.py) . <br> &#187; initialize(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; send(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; send(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; send(session.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; _make_url(connect.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; initialize(runapp.py) &rarr; handle_sigint(runapp.py) &rarr; interrupt_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['runapp.py', 'manager.py', 'connect.py', 'channels.py', 'win_interrupt.py', 'session.py', 'adapter.py', 'threaded.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'437': 'initialize(runapp.py)', '435': 'handle_sigint(runapp.py)', '355': 'interrupt_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '365': 'signal_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)'}, 'execution_paths': {189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 197: 1, 198: 1, 199: 1, 208: 1, 209: 1}}, {'key': 1000313, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['kernelspecapp.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '290': 'start(kernelspecapp.py)'}, 'execution_paths': {219: 1}}, {'key': 1000022, 'parent': 100016, 'tfidf_word': 'stdin ready reply control kernel reqrep shell wrap hook output ', 'tfidf_method': 'is_alive is_alive wrapped _output_hook_kernel reqrep msg_ready is_alive get_msg get_control_msg msg_ready ', 'lda_word': ' start,msg,interactive,execute,default,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,msg_ready,', 'lsi_word': ' start,execute,interactive,msg,alive,', 'lsi_method': ' start,execute_interactive,is_alive,stdin_hook_default,msg_ready,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 15, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)', '120': '_recv_reply(client.py)', '156': 'get_control_msg(client.py)', '158': 'get_shell_msg(client.py)', '121': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)', '118': '_output_hook_default(client.py)', '119': '_output_hook_kernel(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '112': 'is_alive(channels.py)'}, 'execution_paths': {220: 1, 221: 1, 222: 1, 233: 1, 234: 1, 235: 1, 236: 1, 238: 1, 239: 1, 240: 1, 241: 1, 242: 1, 243: 1, 244: 1, 245: 1}}, {'key': 1000021, 'parent': 100015, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'execute_interactive input start start msg msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,input,default,header,', 'lda_method': ' msg,start,execute_interactive,stdin_hook_default,input,', 'lsi_word': ' msg,start,default,execute,interactive,', 'lsi_method': ' msg,start,stdin_hook_default,execute_interactive,input,', 'spm_method': '  &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '122': 'execute_interactive(client.py)', '121': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {223: 1, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1}}, {'key': 1000025, 'parent': 100018, 'tfidf_word': 'msg get ready recv stdin kernel reqrep wrap hook output ', 'tfidf_method': 'get_msg _recv is_alive is_alive is_alive _recv is_alive msg_ready get_msg wrapped ', 'lda_word': ' start,execute,alive,interactive,hook,', 'lda_method': ' start,execute_interactive,is_alive,output_hook_default,recv,', 'lsi_word': ' start,interactive,execute,alive,hook,', 'lsi_method': ' start,execute_interactive,is_alive,msg_ready,stdin_hook_default,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; execute_interactive(client.py) &rarr; _output_hook_kernel(client.py) &rarr; _output_hook_default(client.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg_ready(channels.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg_ready(channels.py) . <br>', 'text_summary': '', 'files_count': 8, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'threaded.py', 'channelsabc.py', 'channels.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 13, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '94': '_output_hook_kernel(client.py)', '93': '_output_hook_default(client.py)', '86': 'is_alive(channels.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)', '112': 'is_alive(channels.py)', '96': '_stdin_hook_default(client.py)', '113': 'msg_ready(channels.py)', '87': 'msg_ready(channels.py)'}, 'execution_paths': {247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 272: 1, 273: 1}}, {'key': 1000024, 'parent': 100018, 'tfidf_word': 'execute interactive reply control shell get msg recv start ', 'tfidf_method': 'start start _recv_reply execute_interactive get_shell_msg _recv get_msg _recv get_msg get_control_msg ', 'lda_word': ' recv,msg,get,start,reply,', 'lda_method': ' start,recv,recv_reply,execute_interactive,get_msg,', 'lsi_word': ' start,get,msg,recv,execute,', 'lsi_method': ' start,execute_interactive,get_msg,recv,recv_reply,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(kernelspecapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _recv_reply(client.py) . <br> &#187; execute_interactive(client.py) &rarr; _recv_reply(client.py) &rarr; _recv(channels.py) . <br> &#187; execute_interactive(client.py) &rarr; _recv_reply(client.py) &rarr; get_msg(channels.py) . <br> &#187; execute_interactive(client.py) &rarr; _recv_reply(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; execute_interactive(client.py) &rarr; _recv_reply(client.py) &rarr; get_control_msg(client.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'channels.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '95': '_recv_reply(client.py)', '100': 'get_shell_msg(client.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '98': 'get_control_msg(client.py)'}, 'execution_paths': {258: 1, 259: 1, 260: 1, 261: 1}}, {'key': 1000023, 'parent': 100017, 'tfidf_word': 'execute header hook input interactive stdin extract id start msg ', 'tfidf_method': 'start start msg _stdin_hook_default execute_interactive msg msg extract_header msg_header msg_id ', 'lda_word': ' msg,start,header,stdin,input,', 'lda_method': ' msg,start,input,execute_interactive,stdin_hook_default,', 'lsi_word': ' msg,start,execute,header,stdin,', 'lsi_method': ' msg,start,input,stdin_hook_default,execute_interactive,', 'spm_method': '  &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(runapp.py) &rarr; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br> &#187; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; execute_interactive(client.py) &rarr; _stdin_hook_default(client.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['kernelspecapp.py', 'runapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '439': 'start(runapp.py)', '97': 'execute_interactive(client.py)', '96': '_stdin_hook_default(client.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 1, 269: 1, 270: 1, 271: 1}}, {'key': 1000280, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '89': 'start(channels.py)'}, 'execution_paths': {274: 1}}, {'key': 1000281, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '115': 'start(channels.py)'}, 'execution_paths': {275: 1}}, {'key': 1000277, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'restarter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '432': 'start(restarter.py)'}, 'execution_paths': {276: 1}}, {'key': 1000278, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['kernelspecapp.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '288': 'start(kernelspecapp.py)'}, 'execution_paths': {277: 1}}, {'key': 1000279, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'channelsabc.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '141': 'start(channelsabc.py)'}, 'execution_paths': {278: 1}}, {'key': 1000282, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '720': 'start(threaded.py)'}, 'execution_paths': {279: 1}}, {'key': 1000283, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '711': 'start(utils.py)'}, 'execution_paths': {280: 1}}, {'key': 1000284, 'parent': 100078, 'tfidf_word': 'start ', 'tfidf_method': 'start start ', 'lda_word': ' start,', 'lda_method': ' start,', 'lsi_word': ' start,', 'lsi_method': ' start,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '735': 'start(threaded.py)'}, 'execution_paths': {281: 1}}, {'key': 1000285, 'parent': 100078, 'tfidf_word': 'key path start ', 'tfidf_method': 'start start path_key ', 'lda_word': ' start,key,path,', 'lda_method': ' start,path_key,', 'lsi_word': ' start,key,path,', 'lsi_method': ' start,path_key,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; path_key(kernelspecapp.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['kernelspecapp.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '293': 'start(kernelspecapp.py)', '294': 'path_key(kernelspecapp.py)'}, 'execution_paths': {282: 1}}, {'key': 1000133, 'parent': 100078, 'tfidf_word': 'connection handler info log setup signal start shutdown ', 'tfidf_method': 'start start log_connection_info setup_signals shutdown shutdown_handler ', 'lda_word': ' start,log,info,connection,shutdown,', 'lda_method': ' start,log_connection_info,shutdown_handler,setup_signals,shutdown,', 'lsi_word': ' start,shutdown,setup,signal,handler,', 'lsi_method': ' start,shutdown,shutdown_handler,setup_signals,log_connection_info,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; setup_signals(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; setup_signals(kernelapp.py) &rarr; shutdown(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; setup_signals(kernelapp.py) &rarr; shutdown_handler(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; setup_signals(kernelapp.py) &rarr; shutdown_handler(kernelapp.py) &rarr; shutdown(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; shutdown(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; shutdown_handler(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelapp.py) &rarr; shutdown_handler(kernelapp.py) &rarr; shutdown(kernelapp.py) . <br> &#187; start(kernelspecapp.py) &rarr; shutdown_handler(kernelapp.py) &rarr; shutdown(kernelapp.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['kernelspecapp.py', 'kernelapp.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '251': 'start(kernelapp.py)', '249': 'setup_signals(kernelapp.py)', '252': 'shutdown_handler(kernelapp.py)', '250': 'shutdown(kernelapp.py)', '248': 'log_connection_info(kernelapp.py)'}, 'execution_paths': {283: 1, 284: 1}}, {'key': 1000381, 'parent': 100083, 'tfidf_word': 'extract header input start msg ', 'tfidf_method': 'input start start extract_header msg msg msg ', 'lda_word': ' msg,start,header,extract,input,', 'lda_method': ' start,msg,input,extract_header,', 'lsi_word': ' msg,start,header,input,extract,', 'lsi_method': ' msg,start,extract_header,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; extract_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; start(kernelspecapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; extract_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {285: 1, 287: 1, 289: 1, 291: 1, 293: 1}}, {'key': 1000380, 'parent': 100083, 'tfidf_word': 'header id input start msg ', 'tfidf_method': 'input start start msg msg_header msg_id msg msg ', 'lda_word': ' msg,start,header,input,', 'lda_method': ' start,input,msg_header,msg,msg_id,', 'lsi_word': ' msg,start,header,input,', 'lsi_method': ' msg,start,msg_header,msg_id,input,', 'spm_method': '  &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; input(client.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; start(kernelspecapp.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['kernelspecapp.py', 'client.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'291': 'start(kernelspecapp.py)', '297': 'start(kernelspecapp.py)', '162': 'input(client.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {286: 1, 288: 1, 290: 1, 292: 1, 294: 1}}, {'key': 1000286, 'parent': 100078, 'tfidf_word': 'cleanup connection del file ', 'tfidf_method': 'cleanup_connection_file __del__ ', 'lda_word': ' del,file,cleanup,connection,', 'lda_method': ' del,cleanup_connection_file,', 'lsi_word': ' connection,del,file,cleanup,', 'lsi_method': ' del,cleanup_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'334': '__del__(manager.py)', '200': 'cleanup_connection_file(connect.py)'}, 'execution_paths': {296: 1}}, {'key': 1000391, 'parent': 100086, 'tfidf_word': 'io loop manager connect socket async close control del interrupt ', 'tfidf_method': '_create_connected_socket _make_url connect_hb AsyncIOLoopKernelManager IOLoopKernelManager interrupt_kernel __del__ _close_control_socket ', 'lda_word': ' connect,create,make,socket,kernel,', 'lda_method': ' create_connected_socket,make_url,interrupt_kernel,connect_hb,asyncioloopkernelmanager,', 'lsi_word': ' connect,socket,url,create,make,', 'lsi_method': ' make_url,create_connected_socket,connect_hb,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': '  &#187; connect_hb(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_hb(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_hb(connect.py) &rarr; _make_url(connect.py) . <br> &#187; interrupt_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; __del__(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; __del__(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; __del__(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; __del__(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'334': '__del__(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '328': 'interrupt_kernel(manager.py)', '225': 'IOLoopKernelManager(manager.py)', '204': 'connect_hb(connect.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {297: 1, 350: 1, 599: 1, 609: 1}}, {'key': 1000396, 'parent': 100088, 'tfidf_word': 'signal kill async finish new restart start shutdown interrupt kernel ', 'tfidf_method': 'signal_kernel _launch_kernel has_kernel _kill_kernel shutdown_kernel start_new_async_kernel finish_shutdown restart_kernel interrupt_kernel ', 'lda_word': ' kernel,signal,shutdown,launch,kill,', 'lda_method': ' signal_kernel,has_kernel,start_new_async_kernel,kill_kernel,launch_kernel,', 'lsi_word': ' kernel,shutdown,signal,launch,kill,', 'lsi_method': ' has_kernel,launch_kernel,signal_kernel,kill_kernel,shutdown_kernel,', 'spm_method': '  &#187; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; signal_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '332': 'signal_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {298: 1, 330: 1, 346: 1, 369: 1, 401: 1}}, {'key': 1000395, 'parent': 100088, 'tfidf_word': 'kill launch async finish new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel shutdown_kernel _launch_kernel has_kernel start_new_async_kernel finish_shutdown restart_kernel ', 'lda_word': ' kernel,shutdown,kill,launch,restart,', 'lda_method': ' restart_kernel,has_kernel,shutdown_kernel,launch_kernel,kill_kernel,', 'lsi_word': ' kernel,shutdown,kill,launch,finish,', 'lsi_method': ' launch_kernel,shutdown_kernel,kill_kernel,has_kernel,finish_shutdown,', 'spm_method': '  &#187; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {299: 1, 331: 1, 370: 1, 402: 1}}, {'key': 1000394, 'parent': 100088, 'tfidf_word': 'launch wait finish kill new restart start async shutdown kernel ', 'tfidf_method': '_async_wait is_alive shutdown_kernel _launch_kernel has_kernel _kill_kernel finish_shutdown start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,async,launch,alive,', 'lda_method': ' kill_kernel,has_kernel,async_wait,shutdown_kernel,launch_kernel,', 'lsi_word': ' kernel,shutdown,async,wait,launch,', 'lsi_method': ' launch_kernel,has_kernel,is_alive,shutdown_kernel,async_wait,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; _async_wait(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; is_alive(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; is_alive(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '324': '_async_wait(manager.py)', '329': 'is_alive(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {300: 1, 329: 1, 332: 1, 371: 1, 400: 1, 403: 1}}, {'key': 1000402, 'parent': 100091, 'tfidf_word': 'kill launch async finish new restart start shutdown kernel ', 'tfidf_method': '_kill_kernel _launch_kernel shutdown_kernel start_new_async_kernel finish_shutdown restart_kernel ', 'lda_word': ' kernel,kill,shutdown,finish,launch,', 'lda_method': ' launch_kernel,kill_kernel,shutdown_kernel,finish_shutdown,restart_kernel,', 'lsi_word': ' kernel,shutdown,kill,launch,finish,', 'lsi_method': ' kill_kernel,shutdown_kernel,launch_kernel,finish_shutdown,restart_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _kill_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '325': '_kill_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {301: 1, 333: 1, 372: 1, 404: 1}}, {'key': 1000404, 'parent': 100092, 'tfidf_word': 'connection file resource shutdown async new restart start kernel cleanup ', 'tfidf_method': 'cleanup_connection_file shutdown_kernel cleanup_resources start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' cleanup,kernel,file,connection,shutdown,', 'lda_method': ' cleanup_resources,shutdown_kernel,cleanup_connection_file,cleanup,start_new_async_kernel,', 'lsi_word': ' cleanup,kernel,shutdown,resource,connection,', 'lsi_method': ' cleanup_connection_file,cleanup_resources,shutdown_kernel,cleanup,restart_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; restart_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '349': 'cleanup(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {302: 1, 306: 1, 373: 1, 377: 1}}, {'key': 1000385, 'parent': 100085, 'tfidf_word': 'start new restart cleanup socket execute poll run async kernel ', 'tfidf_method': 'shutdown_kernel cleanup shutdown_kernel poll run_kernel start_new_async_kernel start_new_kernel restart_kernel restart_kernel do_execute ', 'lda_word': ' kernel,socket,start,async,shutdown,', 'lda_method': ' cleanup_resources,make_url,create_connected_socket,shutdown_kernel,close_control_socket,', 'lsi_word': ' kernel,socket,cleanup,create,close,', 'lsi_method': ' close_control_socket,cleanup_resources,create_connected_socket,shutdown_kernel,make_url,', 'spm_method': '  &#187; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; _close_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'signalkernel.py', 'restarter.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '337': '_close_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '349': 'cleanup(manager.py)', '322': 'start_new_async_kernel(manager.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)'}, 'execution_paths': {303: 1, 307: 1, 374: 1, 378: 1, 437: 1, 441: 1, 1295: 1, 1299: 1}}, {'key': 1000403, 'parent': 100092, 'tfidf_word': 'ipc port resource shutdown async new restart start kernel cleanup ', 'tfidf_method': 'cleanup_ipc_files ports shutdown_kernel cleanup_resources start_new_async_kernel restart_kernel cleanup ', 'lda_word': ' cleanup,kernel,file,shutdown,resource,', 'lda_method': ' shutdown_kernel,cleanup_ipc_files,cleanup_resources,port,restart_kernel,', 'lsi_word': ' cleanup,kernel,resource,ipc,port,', 'lsi_method': ' cleanup_ipc_files,port,cleanup_resources,shutdown_kernel,cleanup,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; ports(connect.py) . <br> &#187; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; cleanup(manager.py) &rarr; cleanup_resources(manager.py) &rarr; ports(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '349': 'cleanup(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {304: 1, 308: 1, 375: 1, 379: 1}}, {'key': 1000400, 'parent': 100091, 'tfidf_word': 'restarter shutdown stop async new restart start kernel ', 'tfidf_method': 'shutdown_kernel stop_restarter start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,stop,restarter,shutdown,async,', 'lda_method': ' stop_restarter,shutdown_kernel,start_new_async_kernel,restart_kernel,', 'lsi_word': ' kernel,stop,shutdown,restarter,async,', 'lsi_method': ' shutdown_kernel,stop_restarter,start_new_async_kernel,restart_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; stop_restarter(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; stop_restarter(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '368': 'stop_restarter(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {305: 1, 376: 1}}, {'key': 1000397, 'parent': 100089, 'tfidf_word': 'header request async new restart start kernel shutdown send msg ', 'tfidf_method': 'shutdown_kernel request_shutdown extract_header msg start_new_async_kernel restart_kernel msg msg send ', 'lda_word': ' kernel,shutdown,msg,new,start,', 'lda_method': ' msg,request_shutdown,shutdown_kernel,extract_header,restart_kernel,', 'lsi_word': ' msg,kernel,shutdown,header,request,', 'lsi_method': ' msg,extract_header,shutdown_kernel,request_shutdown,start_new_async_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {309: 1, 315: 1, 320: 1, 322: 1, 324: 1, 326: 1, 380: 1, 386: 1, 391: 1, 393: 1, 395: 1, 397: 1}}, {'key': 1000005, 'parent': 100005, 'tfidf_word': 'id request async new restart start kernel shutdown send msg ', 'tfidf_method': 'shutdown_kernel request_shutdown msg msg_header msg_id start_new_async_kernel restart_kernel msg msg send ', 'lda_word': ' msg,kernel,shutdown,header,request,', 'lda_method': ' msg,msg_id,msg_header,shutdown_kernel,request_shutdown,', 'lsi_word': ' msg,kernel,shutdown,request,header,', 'lsi_method': ' msg,msg_header,shutdown_kernel,request_shutdown,msg_id,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {310: 1, 316: 1, 321: 1, 323: 1, 325: 1, 327: 1, 381: 1, 387: 1, 392: 1, 394: 1, 396: 1, 398: 1}}, {'key': 1000386, 'parent': 100086, 'tfidf_word': 'control async new restart start connect kernel socket shutdown interrupt ', 'tfidf_method': '_create_connected_socket _make_url shutdown_kernel request_shutdown _connect_control_socket start_new_async_kernel restart_kernel interrupt_kernel ', 'lda_word': ' socket,connect,kernel,create,shutdown,', 'lda_method': ' create_connected_socket,make_url,request_shutdown,shutdown_kernel,connect_control_socket,', 'lsi_word': ' kernel,shutdown,socket,connect,create,', 'lsi_method': ' create_connected_socket,make_url,shutdown_kernel,request_shutdown,connect_control_socket,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _make_url(connect.py) . <br> &#187; request_shutdown(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; request_shutdown(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; request_shutdown(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; request_shutdown(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '328': 'interrupt_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {311: 1, 312: 1, 349: 1, 382: 1, 383: 1}}, {'key': 1000399, 'parent': 100090, 'tfidf_word': 'request async new restart start kernel send shutdown thread ', 'tfidf_method': 'shutdown_kernel request_shutdown start_new_async_kernel restart_kernel send send thread_send send ', 'lda_word': ' shutdown,kernel,send,request,restart,', 'lda_method': ' request_shutdown,send,shutdown_kernel,start_new_async_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,send,request,new,', 'lsi_method': ' send,request_shutdown,shutdown_kernel,start_new_async_kernel,restart_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(channels.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(threaded.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; thread_send(threaded.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(channels.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; request_shutdown(manager.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; restart_kernel(manager.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'channels.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {313: 1, 314: 1, 328: 1, 384: 1, 385: 1, 399: 1}}, {'key': 1000398, 'parent': 100090, 'tfidf_word': 'new restart start kernel shutdown adapt message serialize sign utcnow ', 'tfidf_method': 'shutdown_kernel request_shutdown send start_new_async_kernel restart_kernel Message utcnow serialize sign adapt ', 'lda_word': ' kernel,shutdown,send,request,start,', 'lda_method': ' request_shutdown,message,restart_kernel,send,shutdown_kernel,', 'lsi_word': ' kernel,shutdown,request,send,start,', 'lsi_method': ' send,shutdown_kernel,request_shutdown,start_new_async_kernel,restart_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; send(session.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; send(session.py) . <br> &#187; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; send(session.py) . <br> &#187; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {317: 1, 318: 1, 319: 1, 388: 1, 389: 1, 390: 1}}, {'key': 1000401, 'parent': 100091, 'tfidf_word': 'finish launch async new restart start shutdown kernel ', 'tfidf_method': '_launch_kernel finish_shutdown shutdown_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,shutdown,start,finish,launch,', 'lda_method': ' shutdown_kernel,finish_shutdown,launch_kernel,start_new_async_kernel,restart_kernel,', 'lsi_word': ' kernel,shutdown,finish,launch,new,', 'lsi_method': ' launch_kernel,shutdown_kernel,finish_shutdown,start_new_async_kernel,restart_kernel,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; finish_shutdown(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '331': 'shutdown_kernel(manager.py)', '327': 'finish_shutdown(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {334: 1, 405: 1}}, {'key': 1000128, 'parent': 100078, 'tfidf_word': 'connection file kernel mixin restart test port random cleanup ', 'tfidf_method': 'cleanup_connection_file cleanup_random_ports restart_kernel test_mixin_cleanup_random_ports ', 'lda_word': ' cleanup,port,random,file,connection,', 'lda_method': ' cleanup_random_ports,cleanup_connection_file,test_mixin_cleanup_random_ports,restart_kernel,', 'lsi_word': ' cleanup,random,port,file,connection,', 'lsi_method': ' cleanup_random_ports,cleanup_connection_file,restart_kernel,test_mixin_cleanup_random_ports,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; cleanup_random_ports(connect.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; test_mixin_cleanup_random_ports(test_connect.py) &rarr; cleanup_random_ports(connect.py) &rarr; cleanup_connection_file(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}, 'execution_paths': {335: 1, 1110: 1}}, {'key': 1000064, 'parent': 100036, 'tfidf_word': 'create make new restart restarter url kernel connect socket start ', 'tfidf_method': 'start_kernel post_start_kernel _create_connected_socket _make_url start_new_async_kernel restart_kernel _connect_control_socket start_restarter ', 'lda_word': ' start,kernel,post,restart,restarter,', 'lda_method': ' start_new_async_kernel,start_kernel,post_start_kernel,start_restarter,restart_kernel,', 'lsi_word': ' start,kernel,socket,connect,post,', 'lsi_method': ' start_kernel,post_start_kernel,connect_control_socket,make_url,create_connected_socket,', 'spm_method': '  &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; post_start_kernel(manager.py) &rarr; start_restarter(manager.py) . <br> &#187; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; post_start_kernel(manager.py) &rarr; _connect_control_socket(manager.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {336: 1, 337: 1, 410: 1, 411: 1}}, {'key': 1000068, 'parent': 100037, 'tfidf_word': 'ip local async new restart env get substitution kernel start ', 'tfidf_method': 'start_kernel pre_start_kernel start_new_async_kernel restart_kernel is_local_ip local_ips _get_env_substitutions ', 'lda_word': ' kernel,start,substitution,async,new,', 'lda_method': ' pre_start_kernel,start_kernel,get_env_substitutions,start_new_async_kernel,restart_kernel,', 'lsi_word': ' kernel,start,pre,ip,local,', 'lsi_method': ' pre_start_kernel,start_kernel,start_new_async_kernel,restart_kernel,is_local_ip,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; is_local_ip(localinterfaces.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _get_env_substitutions(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _get_env_substitutions(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; is_local_ip(localinterfaces.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _get_env_substitutions(manager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'localinterfaces.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {338: 1, 339: 1, 340: 1, 412: 1, 413: 1, 414: 1}}, {'key': 1000067, 'parent': 100037, 'tfidf_word': 'restart async new file connection real test path start kernel ', 'tfidf_method': '_record_random_port_names write_connection_file start_kernel pre_start_kernel format_kernel_cmd start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' connection,file,names,format,cmd,', 'lda_method': ' write_connection_file,record_random_port_names,pre_start_kernel,start_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,start,connection,file,record,', 'lsi_method': ' write_connection_file,record_random_port_names,pre_start_kernel,start_kernel,format_kernel_cmd,', 'spm_method': '  &#187; start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_manager.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {341: 1, 344: 1, 415: 1, 418: 1, 1363: 1}}, {'key': 1000066, 'parent': 100037, 'tfidf_word': 'async connection file new path real restart test kernel start ', 'tfidf_method': 'format_kernel_cmd from_ns start_kernel pre_start_kernel start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' kernel,start,cmd,pre,format,', 'lda_method': ' from_ns,format_kernel_cmd,start_kernel,pre_start_kernel,test_connection_file_real_path,', 'lsi_word': ' kernel,start,cmd,format,pre,', 'lsi_method': ' format_kernel_cmd,from_ns,pre_start_kernel,start_kernel,restart_kernel,', 'spm_method': '  &#187; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; from_ns(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; from_ns(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; from_ns(manager.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; from_ns(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; from_ns(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; from_ns(manager.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; from_ns(manager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'test_manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {342: 1, 416: 1, 1361: 1}}, {'key': 1000065, 'parent': 100037, 'tfidf_word': 'async connection file new path real restart test start kernel ', 'tfidf_method': 'KernelSpec format_kernel_cmd kernel_spec start_kernel pre_start_kernel start_new_async_kernel restart_kernel test_connection_file_real_path ', 'lda_word': ' kernel,spec,start,pre,format,', 'lda_method': ' format_kernel_cmd,kernel_spec,kernelspec,start_kernel,pre_start_kernel,', 'lsi_word': ' kernel,spec,start,format,cmd,', 'lsi_method': ' kernelspec,kernel_spec,format_kernel_cmd,start_kernel,pre_start_kernel,', 'spm_method': '  &#187; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; kernel_spec(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; pre_start_kernel(manager.py) &rarr; kernel_spec(manager.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '360': 'pre_start_kernel(manager.py)', '353': 'format_kernel_cmd(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '322': 'start_new_async_kernel(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {343: 1, 417: 1, 1362: 1}}, {'key': 1000063, 'parent': 100036, 'tfidf_word': 'launch async new restart start kernel ', 'tfidf_method': '_launch_kernel start_kernel start_new_async_kernel restart_kernel ', 'lda_word': ' kernel,start,launch,restart,async,', 'lda_method': ' start_kernel,start_new_async_kernel,launch_kernel,restart_kernel,', 'lsi_word': ' kernel,start,launch,new,async,', 'lsi_method': ' launch_kernel,start_kernel,restart_kernel,start_new_async_kernel,', 'spm_method': '  &#187; start_new_async_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'330': 'restart_kernel(manager.py)', '333': 'start_kernel(manager.py)', '326': '_launch_kernel(manager.py)', '322': 'start_new_async_kernel(manager.py)'}, 'execution_paths': {345: 1, 419: 1}}, {'key': 1000012, 'parent': 100009, 'tfidf_word': 'info inspect send serialize identity interrupt feed default raw version ', 'tfidf_method': 'comm_info complete is_complete interrupt_kernel test_serialize test_default_version test_feed_identities test_msg test_send test_send_raw ', 'lda_word': ' extract,header,msg,test,complete,', 'lda_method': ' inspect,blockingkernelclient,msg,extract_header,asynckernelclient,', 'lsi_word': ' msg,extract,header,kernel,client,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,complete,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; comm_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; complete(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; history(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; inspect(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; inspect(client.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; inspect(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; shutdown(client.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; shutdown(client.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; shutdown(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['manager.py', 'session.py', 'client.py', 'test_session.py', 'test_adapter.py'], 'execution_path_count': 18, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '516': 'test_default_version(test_adapter.py)'}, 'execution_paths': {347: 1, 490: 1, 503: 1, 514: 1, 527: 1, 537: 1, 558: 1, 618: 1, 633: 1, 643: 1, 653: 1, 673: 1, 729: 1, 739: 1, 771: 1, 796: 1, 857: 1, 902: 1}}, {'key': 1000006, 'parent': 100006, 'tfidf_word': 'serialize identity handle feed default channels unique version send execute ', 'tfidf_method': 'test_tracking test_serialize test_send_raw is_complete test_feed_identities test_default_version execute start_channels test_msg handle ', 'lda_word': ' msg,header,kernel,client,test,', 'lda_method': ' execute,msg,msg_header,msg_id,kernel_info,', 'lsi_word': ' msg,header,kernel,client,test,', 'lsi_method': ' msg_id,msg_header,msg,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; send(session.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; send(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'client.py', 'test_session.py', 'utils.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 29, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '699': 'test_unique_msg_ids(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {348: 1, 356: 1, 468: 1, 491: 1, 504: 1, 515: 1, 528: 1, 538: 1, 548: 1, 559: 1, 569: 1, 619: 1, 634: 1, 644: 1, 654: 1, 664: 1, 674: 1, 684: 1, 730: 1, 740: 1, 772: 1, 775: 1, 789: 1, 795: 1, 797: 1, 858: 1, 892: 1, 903: 1, 1390: 1}}, {'key': 1000287, 'parent': 100078, 'tfidf_word': 'interrupt kernel send ', 'tfidf_method': 'interrupt_kernel send ', 'lda_word': ' kernel,interrupt,send,', 'lda_method': ' send,interrupt_kernel,', 'lsi_word': ' interrupt,kernel,send,', 'lsi_method': ' send,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '88': 'send(channels.py)'}, 'execution_paths': {351: 1}}, {'key': 1000392, 'parent': 100087, 'tfidf_word': 'launch restarter start interrupt kernel ', 'tfidf_method': '_launch_kernel has_kernel start_restarter start_restarter interrupt_kernel ', 'lda_word': ' kernel,launch,restarter,start,interrupt,', 'lda_method': ' launch_kernel,has_kernel,start_restarter,interrupt_kernel,', 'lsi_word': ' kernel,launch,start,restarter,interrupt,', 'lsi_method': ' has_kernel,launch_kernel,start_restarter,interrupt_kernel,', 'spm_method': '  &#187; start_restarter(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_restarter(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; interrupt_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '231': 'start_restarter(manager.py)', '228': 'start_restarter(manager.py)'}, 'execution_paths': {352: 1, 605: 1, 615: 1}}, {'key': 1000288, 'parent': 100078, 'tfidf_word': 'kernel send interrupt ', 'tfidf_method': 'interrupt_kernel send_interrupt ', 'lda_word': ' interrupt,send,kernel,', 'lda_method': ' interrupt_kernel,send_interrupt,', 'lsi_word': ' interrupt,kernel,send,', 'lsi_method': ' send_interrupt,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'win_interrupt.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '740': 'send_interrupt(win_interrupt.py)'}, 'execution_paths': {353: 1}}, {'key': 1000289, 'parent': 100078, 'tfidf_word': 'interrupt kernel send ', 'tfidf_method': 'send interrupt_kernel ', 'lda_word': ' kernel,interrupt,send,', 'lda_method': ' interrupt_kernel,send,', 'lsi_word': ' interrupt,kernel,send,', 'lsi_method': ' send,interrupt_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '114': 'send(channels.py)'}, 'execution_paths': {354: 1}}, {'key': 1000009, 'parent': 100009, 'tfidf_word': 'extract header msg test send handle interrupt kernel tracking ', 'tfidf_method': 'extract_header msg send interrupt_kernel handle test_send test_tracking ', 'lda_word': ' extract,msg,header,send,test,', 'lda_method': ' send,extract_header,msg,handle,test_send,', 'lsi_word': ' send,header,msg,extract,test,', 'lsi_method': ' extract_header,send,msg,interrupt_kernel,handle,', 'spm_method': '  &#187; send(session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; test_send(test_session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; extract_header(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; msg(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; extract_header(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; msg(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {355: 1, 774: 1, 788: 1, 1389: 1}}, {'key': 1000099, 'parent': 100061, 'tfidf_word': 'sign test serialize send handle interrupt kernel tracking ', 'tfidf_method': 'serialize sign send interrupt_kernel handle test_send test_serialize test_tracking ', 'lda_word': ' sign,serialize,send,test,tracking,', 'lda_method': ' sign,serialize,send,test_serialize,test_send,', 'lsi_word': ' serialize,send,sign,test,tracking,', 'lsi_method': ' sign,serialize,send,interrupt_kernel,test_send,', 'spm_method': '  &#187; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; sign(session.py) . <br> &#187; test_send(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_serialize(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; sign(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; serialize(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {357: 1, 742: 1, 776: 1, 790: 1, 1391: 1}}, {'key': 1000098, 'parent': 100060, 'tfidf_word': 'message test send handle interrupt kernel tracking ', 'tfidf_method': 'Message send interrupt_kernel handle test_send test_tracking ', 'lda_word': ' send,message,test,handle,interrupt,', 'lda_method': ' send,message,handle,test_tracking,test_send,', 'lsi_word': ' send,message,test,tracking,interrupt,', 'lsi_method': ' send,message,interrupt_kernel,test_tracking,handle,', 'spm_method': '  &#187; interrupt_kernel(manager.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; handle(forward.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; Message(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; Message(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'session.py', 'test_session.py', 'forward.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '440': 'Message(session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {358: 1, 777: 1, 791: 1, 1392: 1}}, {'key': 1000079, 'parent': 100045, 'tfidf_word': 'adapt utcnow test send default handle interrupt kernel tracking version ', 'tfidf_method': 'utcnow adapt send interrupt_kernel handle test_default_version test_send test_tracking ', 'lda_word': ' send,utcnow,adapt,test,version,', 'lda_method': ' adapt,utcnow,send,test_default_version,test_tracking,', 'lsi_word': ' send,adapt,utcnow,test,tracking,', 'lsi_method': ' utcnow,adapt,send,interrupt_kernel,test_tracking,', 'spm_method': '  &#187; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_default_version(test_adapter.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; adapt(adapter.py) . <br> &#187; test_send(test_session.py) &rarr; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_send(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; utcnow(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; adapt(adapter.py) . <br> &#187; test_tracking(test_session.py) &rarr; send(session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br> &#187; test_tracking(test_session.py) &rarr; adapt(adapter.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'session.py', 'adapter.py', 'test_session.py', 'test_adapter.py', 'forward.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '480': 'send(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '694': 'test_send(test_session.py)', '698': 'test_tracking(test_session.py)', '516': 'test_default_version(test_adapter.py)', '492': 'handle(forward.py)'}, 'execution_paths': {359: 1, 778: 1, 792: 1, 908: 1, 1393: 1}}, {'key': 1000014, 'parent': 100011, 'tfidf_word': 'type identity found feed display data channels interrupt version execute ', 'tfidf_method': 'test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels is_complete test_no_adapt test_display_data ', 'lda_word': ' msg,extract,header,execute,test,', 'lda_method': ' msg,extract_header,blockingkernelclient,execute,kernel_info,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {360: 1, 469: 1, 492: 1, 505: 1, 516: 1, 529: 1, 539: 1, 549: 1, 560: 1, 570: 1, 620: 1, 635: 1, 645: 1, 655: 1, 665: 1, 675: 1, 685: 1, 731: 1, 747: 1, 760: 1, 798: 1, 864: 1, 893: 1, 915: 1, 921: 1, 925: 1, 930: 1, 935: 1, 941: 1, 945: 1, 950: 1, 955: 1, 960: 1, 965: 1, 970: 1, 975: 1}}, {'key': 1000004, 'parent': 100004, 'tfidf_word': 'type identity found feed display data channels version msg execute ', 'tfidf_method': 'test_kernel_info_reply test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_display_data ', 'lda_word': ' msg,header,test,adapt,reply,', 'lda_method': ' msg,msg_id,msg_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {361: 1, 470: 1, 493: 1, 506: 1, 517: 1, 530: 1, 540: 1, 550: 1, 561: 1, 571: 1, 621: 1, 636: 1, 646: 1, 656: 1, 666: 1, 676: 1, 686: 1, 732: 1, 748: 1, 761: 1, 799: 1, 865: 1, 894: 1, 916: 1, 922: 1, 926: 1, 931: 1, 936: 1, 942: 1, 946: 1, 951: 1, 956: 1, 961: 1, 966: 1, 971: 1, 976: 1}}, {'key': 1000007, 'parent': 100007, 'tfidf_word': 'type identity found feed display data channels interrupt version execute ', 'tfidf_method': 'test_input_request test_execute_request execute test_display_data test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_execute_reply ', 'lda_word': ' msg,extract,header,test,client,', 'lda_method': ' msg,extract_header,blockingkernelclient,comm_info,inspect,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {362: 1, 471: 1, 494: 1, 507: 1, 518: 1, 531: 1, 541: 1, 551: 1, 562: 1, 572: 1, 622: 1, 637: 1, 647: 1, 657: 1, 667: 1, 677: 1, 687: 1, 733: 1, 749: 1, 762: 1, 800: 1, 866: 1, 895: 1, 917: 1, 923: 1, 927: 1, 932: 1, 937: 1, 943: 1, 947: 1, 952: 1, 957: 1, 962: 1, 967: 1, 972: 1, 977: 1}}, {'key': 1000001, 'parent': 100001, 'tfidf_word': 'type identity found feed display data channels version execute msg ', 'tfidf_method': 'test_input_request test_execute_request test_execute_reply execute test_complete_request test_complete_reply interrupt_kernel start_channels test_object_info_reply test_display_data ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 36, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '533': 'test_same_version(test_adapter.py)', '528': 'test_no_adapt(test_adapter.py)', '532': 'test_rename_type(test_adapter.py)', '525': 'test_execute_request(test_adapter.py)', '524': 'test_execute_reply(test_adapter.py)', '522': 'test_complete_request(test_adapter.py)', '521': 'test_complete_reply(test_adapter.py)', '531': 'test_object_info_request(test_adapter.py)', '529': 'test_object_info_reply(test_adapter.py)', '530': 'test_object_info_reply_not_found(test_adapter.py)', '527': 'test_kernel_info_reply(test_adapter.py)', '523': 'test_display_data(test_adapter.py)', '526': 'test_input_request(test_adapter.py)'}, 'execution_paths': {363: 1, 472: 1, 495: 1, 508: 1, 519: 1, 532: 1, 542: 1, 552: 1, 563: 1, 573: 1, 623: 1, 638: 1, 648: 1, 658: 1, 668: 1, 678: 1, 688: 1, 734: 1, 750: 1, 763: 1, 801: 1, 867: 1, 896: 1, 918: 1, 924: 1, 928: 1, 933: 1, 938: 1, 944: 1, 948: 1, 953: 1, 958: 1, 963: 1, 968: 1, 973: 1, 978: 1}}, {'key': 1000008, 'parent': 100008, 'tfidf_word': 'interrupt type identity feed display data channels raw version execute ', 'tfidf_method': 'test_inspect_reply test_execute_request execute test_complete_request test_complete_reply interrupt_kernel start_channels is_complete test_inspect_request_token test_display_data ', 'lda_word': ' msg,extract,header,kernel,test,', 'lda_method': ' msg,extract_header,test_display_data,test_kernel_info_reply,test_feed_identities,', 'lsi_word': ' msg,header,extract,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; kernel_info(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {364: 1, 473: 1, 496: 1, 509: 1, 520: 1, 533: 1, 543: 1, 553: 1, 564: 1, 574: 1, 624: 1, 639: 1, 649: 1, 659: 1, 669: 1, 679: 1, 689: 1, 735: 1, 751: 1, 766: 1, 802: 1, 868: 1, 897: 1, 981: 1, 987: 1, 991: 1, 996: 1, 1002: 1, 1006: 1, 1011: 1, 1016: 1, 1021: 1, 1026: 1, 1031: 1, 1036: 1}}, {'key': 1000002, 'parent': 100002, 'tfidf_word': 'type identity feed display data channels raw version msg execute ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_id,msg_header,asynckernelclient,execute,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {365: 1, 474: 1, 497: 1, 510: 1, 521: 1, 534: 1, 544: 1, 554: 1, 565: 1, 575: 1, 625: 1, 640: 1, 650: 1, 660: 1, 670: 1, 680: 1, 690: 1, 736: 1, 752: 1, 767: 1, 803: 1, 869: 1, 898: 1, 982: 1, 988: 1, 992: 1, 997: 1, 1003: 1, 1007: 1, 1012: 1, 1017: 1, 1022: 1, 1027: 1, 1032: 1, 1037: 1}}, {'key': 1000013, 'parent': 100010, 'tfidf_word': 'interrupt type identity feed display data channels raw version execute ', 'tfidf_method': 'test_inspect_request test_inspect_reply test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,kernel,test,extract,', 'lda_method': ' msg,extract_header,blockingkernelclient,asynckernelclient,execute,', 'lsi_word': ' msg,extract,header,kernel,test,', 'lsi_method': ' msg,extract_header,asynckernelclient,blockingkernelclient,execute,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {366: 1, 475: 1, 498: 1, 511: 1, 522: 1, 535: 1, 545: 1, 555: 1, 566: 1, 576: 1, 626: 1, 641: 1, 651: 1, 661: 1, 671: 1, 681: 1, 691: 1, 737: 1, 753: 1, 768: 1, 804: 1, 870: 1, 899: 1, 983: 1, 989: 1, 993: 1, 998: 1, 1004: 1, 1008: 1, 1013: 1, 1018: 1, 1023: 1, 1028: 1, 1033: 1, 1038: 1}}, {'key': 1000003, 'parent': 100003, 'tfidf_word': 'type identity feed display data channels raw version msg execute ', 'tfidf_method': 'test_inspect_reply is_complete test_execute_request test_display_data execute test_complete_reply interrupt_kernel start_channels test_inspect_request_token test_complete_request ', 'lda_word': ' msg,header,test,kernel,client,', 'lda_method': ' msg,msg_header,msg_id,asynckernelclient,blockingkernelclient,', 'lsi_word': ' msg,header,kernel,test,client,', 'lsi_method': ' msg,msg_id,msg_header,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(test_adapter.py) &rarr; msg(test_adapter.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['manager.py', 'test_adapter.py', 'session.py', 'client.py', 'test_session.py', 'utils.py'], 'execution_path_count': 35, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '534': 'msg(test_adapter.py)', '520': 'msg(test_adapter.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '166': 'is_complete(client.py)', '90': 'AsyncKernelClient(client.py)', '161': 'history(client.py)', '153': 'complete(client.py)', '169': 'shutdown(client.py)', '152': 'comm_info(client.py)', '163': 'inspect(client.py)', '155': 'execute(client.py)', '116': 'BlockingKernelClient(client.py)', '693': 'test_msg(test_session.py)', '696': 'test_serialize(test_session.py)', '694': 'test_send(test_session.py)', '692': 'test_feed_identities(test_session.py)', '695': 'test_send_raw(test_session.py)', '704': 'execute(utils.py)', '546': 'test_same_version(test_adapter.py)', '544': 'test_no_adapt(test_adapter.py)', '545': 'test_rename_type(test_adapter.py)', '538': 'test_execute_request(test_adapter.py)', '536': 'test_complete_request(test_adapter.py)', '535': 'test_complete_reply(test_adapter.py)', '541': 'test_inspect_request(test_adapter.py)', '542': 'test_inspect_request_token(test_adapter.py)', '540': 'test_inspect_reply(test_adapter.py)', '543': 'test_kernel_info_reply(test_adapter.py)', '537': 'test_display_data(test_adapter.py)', '539': 'test_input_request(test_adapter.py)'}, 'execution_paths': {367: 1, 476: 1, 499: 1, 512: 1, 523: 1, 536: 1, 546: 1, 556: 1, 567: 1, 577: 1, 627: 1, 642: 1, 652: 1, 662: 1, 672: 1, 682: 1, 692: 1, 738: 1, 754: 1, 769: 1, 805: 1, 871: 1, 900: 1, 984: 1, 990: 1, 994: 1, 999: 1, 1005: 1, 1009: 1, 1014: 1, 1019: 1, 1024: 1, 1029: 1, 1034: 1, 1039: 1}}, {'key': 1000120, 'parent': 100074, 'tfidf_word': 'thread handle interrupt kernel test send ', 'tfidf_method': 'send thread_send interrupt_kernel handle test_send ', 'lda_word': ' send,thread,handle,interrupt,kernel,', 'lda_method': ' thread_send,send,test_send,handle,interrupt_kernel,', 'lsi_word': ' send,thread,test,kernel,interrupt,', 'lsi_method': ' send,thread_send,interrupt_kernel,test_send,handle,', 'spm_method': '  &#187; interrupt_kernel(manager.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; handle(forward.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br> &#187; test_send(test_session.py) &rarr; send(threaded.py) &rarr; thread_send(threaded.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'threaded.py', 'test_session.py', 'forward.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'328': 'interrupt_kernel(manager.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)', '694': 'test_send(test_session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {368: 1, 764: 1, 1402: 1}}, {'key': 1000030, 'parent': 100022, 'tfidf_word': 'connection file new path real start test async manager kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager KernelManager AsyncKernelManager AsyncIOLoopKernelManager IOLoopKernelManager start_new_async_kernel test_connection_file_real_path ', 'lda_word': ' kernel,manager,spec,connection,file,', 'lda_method': ' kernelmanager,kernelspecmanager,kernelspec,asynckernelmanager,ioloopkernelmanager,', 'lsi_word': ' kernel,manager,spec,async,loop,', 'lsi_method': ' kernelspec,kernelmanager,kernelspecmanager,asynckernelmanager,asyncioloopkernelmanager,', 'spm_method': '  &#187; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'test_manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {406: 1, 602: 1, 612: 1, 1359: 1}}, {'key': 1000116, 'parent': 100070, 'tfidf_word': 'connection file new path real start test kernel manager async ', 'tfidf_method': 'ConnectionFileMixin KernelManager AsyncKernelManager AsyncIOLoopKernelManager IOLoopKernelManager start_new_async_kernel test_connection_file_real_path ', 'lda_word': ' connection,file,real,kernel,test,', 'lda_method': ' kernelmanager,connectionfilemixin,asynckernelmanager,test_connection_file_real_path,ioloopkernelmanager,', 'lsi_word': ' kernel,manager,async,file,connection,', 'lsi_method': ' kernelmanager,connectionfilemixin,asynckernelmanager,asyncioloopkernelmanager,start_new_async_kernel,', 'spm_method': '  &#187; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; AsyncKernelManager(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_connection_file_real_path(test_manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_manager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '319': 'AsyncKernelManager(manager.py)', '320': 'KernelManager(manager.py)', '188': 'ConnectionFileMixin(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '635': 'test_connection_file_real_path(test_manager.py)'}, 'execution_paths': {407: 1, 603: 1, 613: 1, 1360: 1}}, {'key': 1000039, 'parent': 100027, 'tfidf_word': 'client connection get info new start async run kernel ', 'tfidf_method': 'get_connection_info client run_kernel start_new_async_kernel start_new_kernel ', 'lda_word': ' kernel,new,run,connection,info,', 'lda_method': ' client,run_kernel,get_connection_info,start_new_kernel,start_new_async_kernel,', 'lsi_word': ' kernel,get,client,start,connection,', 'lsi_method': ' get_connection_info,client,run_kernel,start_new_kernel,start_new_async_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; get_connection_info(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; client(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; client(manager.py) &rarr; get_connection_info(connect.py) . <br> &#187; run_kernel(manager.py) &rarr; client(manager.py) &rarr; get_connection_info(connect.py) . <br> &#187; start_new_async_kernel(manager.py) &rarr; client(manager.py) &rarr; get_connection_info(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; client(manager.py) &rarr; get_connection_info(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '208': 'get_connection_info(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)'}, 'execution_paths': {408: 1, 432: 1}}, {'key': 1000058, 'parent': 100033, 'tfidf_word': 'new mixin cleanup kn run async file connection load kernel ', 'tfidf_method': 'write_connection_file load_connection_file client run_kernel start_new_async_kernel start_new_kernel test_load_connection_file_session test_load_connection_file_session_with_kn test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' file,port,connection,random,record,', 'lda_method': ' record_random_port_names,write_connection_file,client,test_mixin_cleanup_random_ports,load_connection_file,', 'lsi_word': ' connection,file,random,port,record,', 'lsi_method': ' write_connection_file,record_random_port_names,client,load_connection_file,start_new_kernel,', 'spm_method': '  &#187; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; client(manager.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_mixin_cleanup_random_ports(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; test_mixin_record_random_ports(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'connect.py', 'test_connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'322': 'start_new_async_kernel(manager.py)', '351': 'client(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '564': 'test_load_connection_file_session(test_connect.py)', '209': 'load_connection_file(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '568': 'test_mixin_record_random_ports(test_connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}, 'execution_paths': {409: 1, 433: 1, 1064: 1, 1083: 1, 1108: 1, 1111: 1}}, {'key': 1000038, 'parent': 100027, 'tfidf_word': 'new run start connection file mixin manager spec kernel ', 'tfidf_method': 'KernelManager run_kernel start_new_kernel ConnectionFileMixin KernelSpec KernelSpecManager ', 'lda_word': ' kernel,manager,spec,start,new,', 'lda_method': ' run_kernel,kernelmanager,connectionfilemixin,start_new_kernel,kernelspecmanager,', 'lsi_word': ' kernel,manager,spec,new,start,', 'lsi_method': ' kernelmanager,run_kernel,start_new_kernel,kernelspecmanager,kernelspec,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; start_new_kernel(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; start_new_kernel(manager.py) &rarr; KernelManager(manager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'kernelspec.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '320': 'KernelManager(manager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '188': 'ConnectionFileMixin(connect.py)'}, 'execution_paths': {420: 1, 421: 1}}, {'key': 1000035, 'parent': 100025, 'tfidf_word': 'env get url make create start connect socket spec kernel ', 'tfidf_method': 'kernel_spec _launch_kernel _connect_control_socket start_restarter local_ips is_local_ip KernelSpec _make_url _get_env_substitutions from_ns ', 'lda_word': ' kernel,start,run,new,pre,', 'lda_method': ' pre_start_kernel,run_kernel,format_kernel_cmd,start_kernel,start_new_kernel,', 'lsi_word': ' kernel,start,new,run,pre,', 'lsi_method': ' run_kernel,start_new_kernel,start_kernel,pre_start_kernel,format_kernel_cmd,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br> &#187; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) &rarr; format_kernel_cmd(manager.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)'}, 'execution_paths': {422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1}}, {'key': 1000040, 'parent': 100027, 'tfidf_word': 'launch new run start finish kill shutdown signal alive kernel ', 'tfidf_method': 'run_kernel start_new_kernel _launch_kernel has_kernel shutdown_kernel _kill_kernel finish_shutdown signal_kernel is_alive ', 'lda_word': ' kernel,shutdown,launch,start,run,', 'lda_method': ' start_new_kernel,run_kernel,launch_kernel,has_kernel,kill_kernel,', 'lsi_word': ' kernel,shutdown,launch,start,run,', 'lsi_method': ' run_kernel,launch_kernel,shutdown_kernel,start_new_kernel,has_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {434: 1, 435: 1, 463: 1, 464: 1, 465: 1, 466: 1}}, {'key': 1000041, 'parent': 100027, 'tfidf_word': 'start file resource connection ipc port restarter stop kernel cleanup ', 'tfidf_method': 'run_kernel start_new_kernel shutdown_kernel cleanup_resources cleanup_connection_file cleanup_ipc_files ports cleanup stop_restarter ', 'lda_word': ' kernel,cleanup,shutdown,start,new,', 'lda_method': ' cleanup_resources,run_kernel,shutdown_kernel,start_new_kernel,cleanup,', 'lsi_word': ' kernel,cleanup,shutdown,run,new,', 'lsi_method': ' run_kernel,start_new_kernel,shutdown_kernel,cleanup_resources,port,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_connection_file(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; cleanup_ipc_files(connect.py) &rarr; ports(connect.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) &rarr; ports(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)'}, 'execution_paths': {436: 1, 438: 1, 439: 1, 440: 1, 442: 1}}, {'key': 1000037, 'parent': 100026, 'tfidf_word': 'thread sign adapt message control serialize utcnow msg socket connect ', 'tfidf_method': 'send send adapt utcnow serialize thread_send Message _connect_control_socket sign send ', 'lda_word': ' kernel,shutdown,new,request,run,', 'lda_method': ' start_new_kernel,run_kernel,request_shutdown,shutdown_kernel,msg,', 'lsi_word': ' kernel,shutdown,request,run,start,', 'lsi_method': ' msg,run_kernel,start_new_kernel,request_shutdown,shutdown_kernel,', 'spm_method': '  &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; run_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; start_new_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_new_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['manager.py', 'session.py', 'connect.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)'}, 'execution_paths': {443: 1, 445: 1, 446: 1, 447: 1, 448: 1, 449: 1, 451: 1, 452: 1, 453: 1, 454: 1, 456: 1, 458: 1, 460: 1, 462: 1}}, {'key': 1000036, 'parent': 100026, 'tfidf_word': 'header id new request run start shutdown send kernel msg ', 'tfidf_method': 'run_kernel start_new_kernel request_shutdown shutdown_kernel msg msg_header msg_id msg msg send ', 'lda_word': ' msg,kernel,shutdown,request,run,', 'lda_method': ' msg,msg_id,run_kernel,shutdown_kernel,request_shutdown,', 'lsi_word': ' msg,kernel,shutdown,run,start,', 'lsi_method': ' msg,start_new_kernel,msg_header,shutdown_kernel,request_shutdown,', 'spm_method': '  &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; shutdown_kernel(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'321': 'run_kernel(manager.py)', '323': 'start_new_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {444: 1, 450: 1, 455: 1, 457: 1, 459: 1, 461: 1}}, {'key': 1000010, 'parent': 100009, 'tfidf_word': 'extract header info msg client kernel async blocking channels start ', 'tfidf_method': 'kernel_info extract_header msg BlockingKernelClient start_channels AsyncKernelClient ', 'lda_word': ' kernel,info,header,extract,msg,', 'lda_method': ' kernel_info,extract_header,msg,start_channels,asynckernelclient,', 'lsi_word': ' kernel,header,info,extract,msg,', 'lsi_method': ' extract_header,kernel_info,msg,start_channels,asynckernelclient,', 'spm_method': '  &#187; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; extract_header(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; start_channels(client.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; start_channels(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; kernel_info(client.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; kernel_info(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'170': 'start_channels(client.py)', '167': 'kernel_info(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '90': 'AsyncKernelClient(client.py)', '116': 'BlockingKernelClient(client.py)'}, 'execution_paths': {467: 1, 547: 1, 663: 1}}, {'key': 1000290, 'parent': 100078, 'tfidf_word': 'channel make shell url ', 'tfidf_method': 'shell_channel _make_url ', 'lda_word': ' shell,channel,url,make,', 'lda_method': ' shell_channel,make_url,', 'lsi_word': ' make,shell,url,channel,', 'lsi_method': ' shell_channel,make_url,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '196': '_make_url(connect.py)'}, 'execution_paths': {477: 1}}, {'key': 1000291, 'parent': 100078, 'tfidf_word': 'channel ioloop shell ', 'tfidf_method': 'shell_channel ioloop ', 'lda_word': ' ioloop,channel,shell,', 'lda_method': ' shell_channel,ioloop,', 'lsi_word': ' channel,ioloop,shell,', 'lsi_method': ' shell_channel,ioloop,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '723': 'ioloop(threaded.py)'}, 'execution_paths': {478: 1}}, {'key': 1000389, 'parent': 100086, 'tfidf_word': 'socket url io kernel loop manager connect shell async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_shell shell_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' connect,shell,socket,make,create,', 'lda_method': ' create_connected_socket,make_url,connect_shell,ioloopkernelmanager,shell_channel,', 'lsi_word': ' connect,shell,url,make,create,', 'lsi_method': ' make_url,connect_shell,create_connected_socket,shell_channel,asyncioloopkernelmanager,', 'spm_method': '  &#187; connect_shell(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_shell(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_shell(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_shell(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_shell(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_shell(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_shell(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'168': 'shell_channel(client.py)', '206': 'connect_shell(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {479: 1, 597: 1, 607: 1}}, {'key': 1000275, 'parent': 100078, 'tfidf_word': 'channel iopub make url ', 'tfidf_method': 'iopub_channel _make_url ', 'lda_word': ' channel,make,iopub,url,', 'lda_method': ' make_url,iopub_channel,', 'lsi_word': ' iopub,make,url,channel,', 'lsi_method': ' make_url,iopub_channel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'164': 'iopub_channel(client.py)', '196': '_make_url(connect.py)'}, 'execution_paths': {480: 1}}, {'key': 1000276, 'parent': 100078, 'tfidf_word': 'channel ioloop iopub ', 'tfidf_method': 'iopub_channel ioloop ', 'lda_word': ' ioloop,channel,iopub,', 'lda_method': ' ioloop,iopub_channel,', 'lsi_word': ' channel,ioloop,iopub,', 'lsi_method': ' iopub_channel,ioloop,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'164': 'iopub_channel(client.py)', '723': 'ioloop(threaded.py)'}, 'execution_paths': {481: 1}}, {'key': 1000390, 'parent': 100086, 'tfidf_word': 'socket url io kernel loop manager connect iopub async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_iopub iopub_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' connect,iopub,make,kernel,url,', 'lda_method': ' connect_iopub,create_connected_socket,make_url,iopub_channel,ioloopkernelmanager,', 'lsi_word': ' connect,iopub,create,url,socket,', 'lsi_method': ' connect_iopub,create_connected_socket,make_url,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': '  &#187; connect_iopub(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_iopub(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_iopub(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_iopub(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_iopub(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_iopub(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_iopub(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'164': 'iopub_channel(client.py)', '205': 'connect_iopub(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {482: 1, 596: 1, 606: 1}}, {'key': 1000266, 'parent': 100078, 'tfidf_word': 'channel make stdin url ', 'tfidf_method': 'stdin_channel _make_url ', 'lda_word': ' stdin,channel,url,make,', 'lda_method': ' make_url,stdin_channel,', 'lsi_word': ' make,stdin,url,channel,', 'lsi_method': ' stdin_channel,make_url,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'171': 'stdin_channel(client.py)', '196': '_make_url(connect.py)'}, 'execution_paths': {483: 1}}, {'key': 1000267, 'parent': 100078, 'tfidf_word': 'channel ioloop stdin ', 'tfidf_method': 'stdin_channel ioloop ', 'lda_word': ' ioloop,channel,stdin,', 'lda_method': ' ioloop,stdin_channel,', 'lsi_word': ' channel,ioloop,stdin,', 'lsi_method': ' stdin_channel,ioloop,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'171': 'stdin_channel(client.py)', '723': 'ioloop(threaded.py)'}, 'execution_paths': {484: 1}}, {'key': 1000388, 'parent': 100086, 'tfidf_word': 'socket url io kernel loop manager connect stdin async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_stdin stdin_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' connect,stdin,create,socket,make,', 'lda_method': ' connect_stdin,make_url,create_connected_socket,stdin_channel,ioloopkernelmanager,', 'lsi_word': ' connect,stdin,url,make,socket,', 'lsi_method': ' connect_stdin,create_connected_socket,make_url,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': '  &#187; connect_stdin(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_stdin(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_stdin(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_stdin(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_stdin(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_stdin(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_stdin(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'171': 'stdin_channel(client.py)', '207': 'connect_stdin(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {485: 1, 598: 1, 608: 1}}, {'key': 1000250, 'parent': 100078, 'tfidf_word': 'channel hb make url ', 'tfidf_method': 'hb_channel _make_url ', 'lda_word': ' make,channel,hb,url,', 'lda_method': ' hb_channel,make_url,', 'lsi_word': ' hb,make,url,channel,', 'lsi_method': ' make_url,hb_channel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'160': 'hb_channel(client.py)', '196': '_make_url(connect.py)'}, 'execution_paths': {486: 1}}, {'key': 1000251, 'parent': 100078, 'tfidf_word': 'channel control make url ', 'tfidf_method': 'control_channel _make_url ', 'lda_word': ' url,channel,control,make,', 'lda_method': ' make_url,control_channel,', 'lsi_word': ' control,make,url,channel,', 'lsi_method': ' make_url,control_channel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'154': 'control_channel(client.py)', '196': '_make_url(connect.py)'}, 'execution_paths': {487: 1}}, {'key': 1000252, 'parent': 100078, 'tfidf_word': 'channel control ioloop ', 'tfidf_method': 'control_channel ioloop ', 'lda_word': ' ioloop,channel,control,', 'lda_method': ' control_channel,ioloop,', 'lsi_word': ' channel,control,ioloop,', 'lsi_method': ' ioloop,control_channel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'154': 'control_channel(client.py)', '723': 'ioloop(threaded.py)'}, 'execution_paths': {488: 1}}, {'key': 1000387, 'parent': 100086, 'tfidf_word': 'socket url io kernel loop manager connect control async channel ', 'tfidf_method': '_create_connected_socket _make_url connect_control control_channel AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' connect,control,socket,url,make,', 'lda_method': ' connect_control,create_connected_socket,make_url,control_channel,asyncioloopkernelmanager,', 'lsi_word': ' connect,control,create,url,make,', 'lsi_method': ' connect_control,create_connected_socket,make_url,ioloopkernelmanager,asyncioloopkernelmanager,', 'spm_method': '  &#187; connect_control(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_control(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_control(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; connect_control(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_control(connect.py) &rarr; _create_connected_socket(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_control(connect.py) &rarr; _create_connected_socket(connect.py) &rarr; _make_url(connect.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; connect_control(connect.py) &rarr; _make_url(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'manager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'154': 'control_channel(client.py)', '203': 'connect_control(connect.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '225': 'IOLoopKernelManager(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {489: 1, 600: 1, 610: 1}}, {'key': 1000253, 'parent': 100078, 'tfidf_word': 'channel close socket zmq ', 'tfidf_method': 'ZMQSocketChannel close ', 'lda_word': ' socket,zmq,close,channel,', 'lda_method': ' close,zmqsocketchannel,', 'lsi_word': ' close,socket,zmq,channel,', 'lsi_method': ' zmqsocketchannel,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'80': 'ZMQSocketChannel(channels.py)', '83': 'close(channels.py)'}, 'execution_paths': {500: 1}}, {'key': 1000101, 'parent': 100063, 'tfidf_word': 'recv ready wait get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready wait_for_ready get_msgs get_iopub_msg ', 'lda_word': ' get,msg,recv,wait,ready,', 'lda_method': ' get_msg,recv,wait_for_ready,get_iopub_msg,get_stdin_msg,', 'lsi_word': ' msg,get,recv,wait,ready,', 'lsi_method': ' get_msg,recv,wait_for_ready,get_msgs,get_iopub_msg,', 'spm_method': '  &#187; get_stdin_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_msgs(channels.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_iopub_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['channels.py', 'client.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'85': 'get_msgs(channels.py)', '84': 'get_msg(channels.py)', '82': '_recv(channels.py)', '99': 'get_iopub_msg(client.py)', '101': 'get_stdin_msg(client.py)', '104': 'wait_for_ready(client.py)', '123': 'wait_for_ready(client.py)'}, 'execution_paths': {501: 1, 579: 1, 581: 1, 592: 1, 696: 1}}, {'key': 1000254, 'parent': 100078, 'tfidf_word': 'async channel client hb kernel ', 'tfidf_method': 'HBChannel AsyncKernelClient ', 'lda_word': ' hb,async,channel,client,kernel,', 'lda_method': ' hbchannel,asynckernelclient,', 'lsi_word': ' client,hb,channel,kernel,async,', 'lsi_method': ' hbchannel,asynckernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '125': 'HBChannel(channels.py)'}, 'execution_paths': {502: 1}}, {'key': 1000129, 'parent': 100078, 'tfidf_word': 'channel client close kernel socket zmq async blocking ', 'tfidf_method': 'ZMQSocketChannel close BlockingKernelClient AsyncKernelClient ', 'lda_word': ' socket,kernel,zmq,client,channel,', 'lda_method': ' close,zmqsocketchannel,asynckernelclient,blockingkernelclient,', 'lsi_word': ' channel,client,zmq,socket,close,', 'lsi_method': ' close,zmqsocketchannel,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; ZMQSocketChannel(channels.py) &rarr; close(channels.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; ZMQSocketChannel(channels.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '106': 'ZMQSocketChannel(channels.py)', '109': 'close(channels.py)', '116': 'BlockingKernelClient(client.py)'}, 'execution_paths': {513: 1, 628: 1}}, {'key': 1000113, 'parent': 100069, 'tfidf_word': 'hb async blocking abc channel client kernel ', 'tfidf_method': 'ChannelABC HBChannelABC KernelClient BlockingKernelClient AsyncKernelClient ', 'lda_word': ' channel,abc,kernel,client,hb,', 'lda_method': ' hbchannelabc,kernelclient,channelabc,blockingkernelclient,asynckernelclient,', 'lsi_word': ' abc,kernel,client,channel,hb,', 'lsi_method': ' channelabc,hbchannelabc,kernelclient,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; HBChannelABC(channelsabc.py) &rarr; ChannelABC(channelsabc.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '139': 'HBChannelABC(channelsabc.py)', '138': 'ChannelABC(channelsabc.py)', '116': 'BlockingKernelClient(client.py)'}, 'execution_paths': {524: 1, 630: 1}}, {'key': 1000114, 'parent': 100069, 'tfidf_word': 'async abc channel connection file mixin client kernel ', 'tfidf_method': 'KernelClient AsyncKernelClient ChannelABC ConnectionFileMixin ', 'lda_word': ' client,kernel,async,connection,channel,', 'lda_method': ' kernelclient,asynckernelclient,connectionfilemixin,channelabc,', 'lsi_word': ' kernel,client,async,mixin,file,', 'lsi_method': ' asynckernelclient,kernelclient,channelabc,connectionfilemixin,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ConnectionFileMixin(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '147': 'KernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '138': 'ChannelABC(channelsabc.py)'}, 'execution_paths': {525: 1, 526: 1}}, {'key': 1000255, 'parent': 100078, 'tfidf_word': 'async client kernel reqrep wrap ', 'tfidf_method': 'wrapped AsyncKernelClient reqrep ', 'lda_word': ' reqrep,kernel,client,async,wrap,', 'lda_method': ' reqrep,asynckernelclient,wrap,', 'lsi_word': ' async,client,kernel,reqrep,wrap,', 'lsi_method': ' asynckernelclient,reqrep,wrap,', 'spm_method': '  &#187; AsyncKernelClient(client.py) &rarr; reqrep(client.py) &rarr; wrapped(client.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '91': 'reqrep(client.py)', '105': 'wrapped(client.py)'}, 'execution_paths': {557: 1}}, {'key': 1000011, 'parent': 100009, 'tfidf_word': 'extract header msg client kernel execute async blocking ', 'tfidf_method': 'execute extract_header msg BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' execute,header,extract,msg,async,', 'lda_method': ' msg,execute,extract_header,blockingkernelclient,asynckernelclient,', 'lsi_word': ' execute,header,msg,extract,client,', 'lsi_method': ' execute,extract_header,msg,asynckernelclient,blockingkernelclient,', 'spm_method': '  &#187; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(utils.py) &rarr; execute(client.py) &rarr; extract_header(session.py) . <br> &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(session.py) . <br> &#187; execute(utils.py) &rarr; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; execute(utils.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; msg(session.py) &rarr; extract_header(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'session.py', 'utils.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '116': 'BlockingKernelClient(client.py)', '704': 'execute(utils.py)'}, 'execution_paths': {568: 1, 683: 1, 891: 1}}, {'key': 1000118, 'parent': 100072, 'tfidf_word': 'dict string validate client kernel execute async blocking ', 'tfidf_method': 'validate_string_dict execute BlockingKernelClient execute AsyncKernelClient ', 'lda_word': ' execute,validate,string,dict,kernel,', 'lda_method': ' execute,validate_string_dict,blockingkernelclient,asynckernelclient,', 'lsi_word': ' execute,dict,validate,string,client,', 'lsi_method': ' execute,validate_string_dict,blockingkernelclient,asynckernelclient,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; execute(client.py) &rarr; validate_string_dict(client.py) . <br> &#187; execute(utils.py) &rarr; execute(client.py) &rarr; validate_string_dict(client.py) . <br> &#187; AsyncKernelClient(client.py) &rarr; execute(client.py) &rarr; validate_string_dict(client.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'utils.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'90': 'AsyncKernelClient(client.py)', '155': 'execute(client.py)', '148': 'validate_string_dict(client.py)', '116': 'BlockingKernelClient(client.py)', '704': 'execute(utils.py)'}, 'execution_paths': {578: 1, 693: 1, 901: 1}}, {'key': 1000102, 'parent': 100064, 'tfidf_word': 'recv ready wait get msg iopub stdin ', 'tfidf_method': '_recv get_msg get_stdin_msg wait_for_ready get_msgs wait_for_ready get_iopub_msg ', 'lda_word': ' get,msg,recv,wait,ready,', 'lda_method': ' get_msg,recv,wait_for_ready,get_msgs,get_stdin_msg,', 'lsi_word': ' msg,get,recv,ready,wait,', 'lsi_method': ' get_msg,recv,wait_for_ready,get_iopub_msg,get_msgs,', 'spm_method': '  &#187; get_stdin_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_msgs(channels.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br> &#187; get_iopub_msg(client.py) &rarr; get_msg(channels.py) &rarr; _recv(channels.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'99': 'get_iopub_msg(client.py)', '110': 'get_msg(channels.py)', '108': '_recv(channels.py)', '101': 'get_stdin_msg(client.py)', '104': 'wait_for_ready(client.py)', '111': 'get_msgs(channels.py)', '123': 'wait_for_ready(client.py)'}, 'execution_paths': {580: 1, 582: 1, 593: 1, 616: 1, 694: 1}}, {'key': 1000256, 'parent': 100078, 'tfidf_word': 'channel hb make url ', 'tfidf_method': 'hb_channel _make_url ', 'lda_word': ' channel,url,hb,make,', 'lda_method': ' hb_channel,make_url,', 'lsi_word': ' hb,make,url,channel,', 'lsi_method': ' make_url,hb_channel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'102': 'hb_channel(client.py)', '196': '_make_url(connect.py)'}, 'execution_paths': {583: 1}}, {'key': 1000257, 'parent': 100078, 'tfidf_word': 'handle info kernel ready reply wait ', 'tfidf_method': 'wait_for_ready _handle_kernel_info_reply ', 'lda_word': ' info,kernel,ready,handle,wait,', 'lda_method': ' handle_kernel_info_reply,wait_for_ready,', 'lsi_word': ' kernel,reply,handle,wait,ready,', 'lsi_method': ' wait_for_ready,handle_kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)'}, 'execution_paths': {584: 1}}, {'key': 1000094, 'parent': 100056, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'is_alive wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' alive,wait,ready,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': '  &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channelsabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(managerabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(threaded.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'104': 'wait_for_ready(client.py)', '103': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {585: 1, 587: 1, 588: 1, 589: 1, 590: 1, 591: 1}}, {'key': 1000124, 'parent': 100077, 'tfidf_word': 'poll start callback fire stop ', 'tfidf_method': 'start poll _fire_callbacks stop ', 'lda_word': ' start,poll,stop,callback,fire,', 'lda_method': ' start,poll,fire_callbacks,stop,', 'lsi_word': ' poll,start,callback,fire,stop,', 'lsi_method': ' start,poll,fire_callbacks,stop,', 'spm_method': '  &#187; start(restarter.py) &rarr; poll(restarter.py) &rarr; _fire_callbacks(restarter.py) . <br> &#187; start(restarter.py) &rarr; poll(restarter.py) &rarr; stop(restarter.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'238': 'start(restarter.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)'}, 'execution_paths': {594: 1, 595: 1}}, {'key': 1000130, 'parent': 100078, 'tfidf_word': 'io kernel loop manager wrap zmqstream async ', 'tfidf_method': 'as_zmqstream wrapped AsyncIOLoopKernelManager IOLoopKernelManager ', 'lda_word': ' loop,kernel,wrap,zmqstream,io,', 'lda_method': ' as_zmqstream,wrap,ioloopkernelmanager,asyncioloopkernelmanager,', 'lsi_word': ' io,wrap,zmqstream,manager,loop,', 'lsi_method': ' as_zmqstream,wrap,asyncioloopkernelmanager,ioloopkernelmanager,', 'spm_method': '  &#187; AsyncIOLoopKernelManager(manager.py) &rarr; as_zmqstream(manager.py) &rarr; wrapped(manager.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; as_zmqstream(manager.py) &rarr; wrapped(manager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['manager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '226': 'as_zmqstream(manager.py)', '233': 'wrapped(manager.py)', '224': 'AsyncIOLoopKernelManager(manager.py)'}, 'execution_paths': {601: 1, 611: 1}}, {'key': 1000132, 'parent': 100078, 'tfidf_word': 'manager io loop restarter async kernel ', 'tfidf_method': 'IOLoopKernelRestarter KernelRestarter AsyncIOLoopKernelManager IOLoopKernelManager AsyncIOLoopKernelRestarter ', 'lda_word': ' kernel,io,loop,restarter,manager,', 'lda_method': ' ioloopkernelrestarter,kernelrestarter,ioloopkernelmanager,asyncioloopkernelmanager,asyncioloopkernelrestarter,', 'lsi_word': ' kernel,io,loop,restarter,async,', 'lsi_method': ' ioloopkernelrestarter,kernelrestarter,asyncioloopkernelmanager,asyncioloopkernelrestarter,ioloopkernelmanager,', 'spm_method': '  &#187; AsyncIOLoopKernelManager(manager.py) &rarr; AsyncIOLoopKernelRestarter(restarter.py) &rarr; IOLoopKernelRestarter(restarter.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; AsyncIOLoopKernelRestarter(restarter.py) &rarr; IOLoopKernelRestarter(restarter.py) &rarr; KernelRestarter(restarter.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; AsyncIOLoopKernelRestarter(restarter.py) &rarr; KernelRestarter(restarter.py) . <br> &#187; AsyncIOLoopKernelManager(manager.py) &rarr; IOLoopKernelRestarter(restarter.py) &rarr; KernelRestarter(restarter.py) . <br> &#187; IOLoopKernelManager(manager.py) &rarr; IOLoopKernelRestarter(restarter.py) &rarr; KernelRestarter(restarter.py) . <br> &#187; AsyncIOLoopKernelRestarter(restarter.py) &rarr; IOLoopKernelRestarter(restarter.py) &rarr; KernelRestarter(restarter.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['manager.py', 'restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'225': 'IOLoopKernelManager(manager.py)', '235': 'IOLoopKernelRestarter(restarter.py)', '426': 'KernelRestarter(restarter.py)', '224': 'AsyncIOLoopKernelManager(manager.py)', '234': 'AsyncIOLoopKernelRestarter(restarter.py)'}, 'execution_paths': {604: 1, 614: 1}}, {'key': 1000258, 'parent': 100078, 'tfidf_word': 'blocking channel client hb kernel ', 'tfidf_method': 'BlockingKernelClient HBChannel ', 'lda_word': ' hb,kernel,channel,client,blocking,', 'lda_method': ' hbchannel,blockingkernelclient,', 'lsi_word': ' client,hb,channel,kernel,blocking,', 'lsi_method': ' hbchannel,blockingkernelclient,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['client.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '125': 'HBChannel(channels.py)'}, 'execution_paths': {617: 1}}, {'key': 1000247, 'parent': 100078, 'tfidf_word': 'blocking client kernel reqrep wrap ', 'tfidf_method': 'BlockingKernelClient reqrep wrapped ', 'lda_word': ' client,kernel,wrap,blocking,reqrep,', 'lda_method': ' reqrep,wrap,blockingkernelclient,', 'lsi_word': ' blocking,client,kernel,reqrep,wrap,', 'lsi_method': ' blockingkernelclient,reqrep,wrap,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; reqrep(client.py) &rarr; wrapped(client.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '117': 'reqrep(client.py)', '124': 'wrapped(client.py)'}, 'execution_paths': {629: 1}}, {'key': 1000115, 'parent': 100069, 'tfidf_word': 'blocking abc channel connection file mixin client kernel ', 'tfidf_method': 'BlockingKernelClient KernelClient ChannelABC ConnectionFileMixin ', 'lda_word': ' kernel,client,mixin,file,blocking,', 'lda_method': ' kernelclient,blockingkernelclient,connectionfilemixin,channelabc,', 'lsi_word': ' kernel,client,blocking,mixin,file,', 'lsi_method': ' blockingkernelclient,kernelclient,channelabc,connectionfilemixin,', 'spm_method': '  &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ChannelABC(channelsabc.py) . <br> &#187; BlockingKernelClient(client.py) &rarr; KernelClient(client.py) &rarr; ConnectionFileMixin(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['client.py', 'connect.py', 'channelsabc.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'116': 'BlockingKernelClient(client.py)', '147': 'KernelClient(client.py)', '188': 'ConnectionFileMixin(connect.py)', '138': 'ChannelABC(channelsabc.py)'}, 'execution_paths': {631: 1, 632: 1}}, {'key': 1000248, 'parent': 100078, 'tfidf_word': 'handle info kernel ready reply wait ', 'tfidf_method': 'wait_for_ready _handle_kernel_info_reply ', 'lda_word': ' info,wait,ready,kernel,handle,', 'lda_method': ' handle_kernel_info_reply,wait_for_ready,', 'lsi_word': ' kernel,reply,handle,wait,ready,', 'lsi_method': ' wait_for_ready,handle_kernel_info_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '150': '_handle_kernel_info_reply(client.py)'}, 'execution_paths': {695: 1}}, {'key': 1000095, 'parent': 100057, 'tfidf_word': 'ready wait alive ', 'tfidf_method': 'wait_for_ready is_alive is_alive is_alive is_alive is_alive is_alive is_alive ', 'lda_word': ' ready,wait,alive,', 'lda_method': ' is_alive,wait_for_ready,', 'lsi_word': ' alive,ready,wait,', 'lsi_method': ' is_alive,wait_for_ready,', 'spm_method': '  &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channelsabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(managerabc.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(threaded.py) . <br> &#187; wait_for_ready(client.py) &rarr; is_alive(client.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['client.py', 'channels.py', 'threaded.py', 'channelsabc.py', 'multikernelmanager.py', 'managerabc.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'123': 'wait_for_ready(client.py)', '165': 'is_alive(client.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '732': 'is_alive(threaded.py)', '140': 'is_alive(channelsabc.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {697: 1, 699: 1, 700: 1, 701: 1, 702: 1, 703: 1}}, {'key': 1000249, 'parent': 100078, 'tfidf_word': 'env set test up ', 'tfidf_method': 'setUp test_env ', 'lda_word': ' test,set,env,', 'lda_method': ' test_env,setup,', 'lsi_word': ' env,set,test,', 'lsi_method': ' test_env,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '705': 'test_env(utils.py)'}, 'execution_paths': {704: 1}}, {'key': 1000259, 'parent': 100078, 'tfidf_word': 'set start up ', 'tfidf_method': 'setUp start ', 'lda_word': ' set,start,', 'lda_method': ' setup,start,', 'lsi_word': ' start,set,', 'lsi_method': ' start,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '711': 'start(utils.py)'}, 'execution_paths': {705: 1}}, {'key': 1000240, 'parent': 100078, 'tfidf_word': 'set stop up ', 'tfidf_method': 'setUp stop ', 'lda_word': ' set,stop,', 'lda_method': ' setup,stop,', 'lsi_word': ' stop,set,', 'lsi_method': ' stop,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '712': 'stop(utils.py)'}, 'execution_paths': {706: 1}}, {'key': 1000073, 'parent': 100040, 'tfidf_word': 'dir directory find init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec setUp NoSuchKernel _is_kernel_dir _is_valid_kernel_name _find_spec_directory _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,set,valid,', 'lda_method': ' get_kernel_spec,setup,nosuchkernel,init,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,set,name,', 'lsi_method': ' get_kernel_spec,setup,find_spec_directory,is_kernel_dir,is_valid_kernel_name,', 'spm_method': '  &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '260': 'get_kernel_spec(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {707: 1, 708: 1, 709: 1, 710: 1, 711: 1}}, {'key': 1000241, 'parent': 100078, 'tfidf_word': 'kernel no set such up ', 'tfidf_method': 'NoSuchKernel setUp ', 'lda_word': ' kernel,set,', 'lda_method': ' nosuchkernel,setup,', 'lsi_word': ' set,kernel,', 'lsi_method': ' setup,nosuchkernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '255': 'NoSuchKernel(kernelspec.py)'}, 'execution_paths': {712: 1}}, {'key': 1000076, 'parent': 100043, 'tfidf_word': 'set up name get kernel spec init no such valid ', 'tfidf_method': 'get_kernel_spec setUp NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,set,name,', 'lda_method': ' setup,get_kernel_spec,nosuchkernel,get_kernel_spec_by_name,init,', 'lsi_word': ' kernel,spec,get,set,name,', 'lsi_method': ' get_kernel_spec,setup,init,is_valid_kernel_name,nosuchkernel,', 'spm_method': '  &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; setUp(test_client.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_client.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {713: 1, 714: 1, 715: 1, 717: 1}}, {'key': 1000069, 'parent': 100038, 'tfidf_word': 'directory test find get subclass kernel spec set up specs ', 'tfidf_method': '_is_kernel_dir _find_spec_directory get_kernel_spec get_all_specs test_get_kernel_spec test_subclass setUp test_find_all_specs find_kernel_specs get_kernel_spec ', 'lda_word': ' spec,kernel,get,find,directory,', 'lda_method': ' is_kernel_dir,get_kernel_spec,find_spec_directory,test_get_kernel_spec,get_all_specs,', 'lsi_word': ' kernel,spec,get,find,directory,', 'lsi_method': ' is_kernel_dir,find_spec_directory,get_kernel_spec,get_all_specs,test_subclass,', 'spm_method': '  &#187; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _find_spec_directory(kernelspec.py) &rarr; _is_kernel_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_client.py', 'kernelspec.py', 'test_kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'549': 'setUp(test_client.py)', '274': 'get_kernel_spec(kernelspec.py)', '267': '_find_spec_directory(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '623': 'test_get_kernel_spec(test_kernelspec.py)', '621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)', '633': 'get_kernel_spec(test_kernelspec.py)', '632': 'find_kernel_specs(test_kernelspec.py)'}, 'execution_paths': {716: 1, 1222: 1, 1227: 1, 1233: 1, 1260: 1, 1267: 1, 1273: 1, 1275: 1}}, {'key': 1000242, 'parent': 100078, 'tfidf_word': 'check history reply test ', 'tfidf_method': '_check_reply test_history ', 'lda_word': ' reply,test,check,history,', 'lda_method': ' check_reply,test_history,', 'lsi_word': ' history,reply,test,check,', 'lsi_method': ' test_history,check_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'553': 'test_history(test_client.py)', '548': '_check_reply(test_client.py)'}, 'execution_paths': {718: 1}}, {'key': 1000243, 'parent': 100078, 'tfidf_word': 'check inspect reply test ', 'tfidf_method': '_check_reply test_inspect ', 'lda_word': ' inspect,reply,test,check,', 'lda_method': ' check_reply,test_inspect,', 'lsi_word': ' inspect,reply,test,check,', 'lsi_method': ' test_inspect,check_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'554': 'test_inspect(test_client.py)', '548': '_check_reply(test_client.py)'}, 'execution_paths': {719: 1}}, {'key': 1000244, 'parent': 100078, 'tfidf_word': 'check complete reply test ', 'tfidf_method': '_check_reply test_complete ', 'lda_word': ' complete,check,reply,test,', 'lda_method': ' check_reply,test_complete,', 'lsi_word': ' complete,reply,test,check,', 'lsi_method': ' test_complete,check_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'551': 'test_complete(test_client.py)', '548': '_check_reply(test_client.py)'}, 'execution_paths': {720: 1}}, {'key': 1000245, 'parent': 100078, 'tfidf_word': 'check info kernel reply test ', 'tfidf_method': '_check_reply test_kernel_info ', 'lda_word': ' test,reply,kernel,info,check,', 'lda_method': ' test_kernel_info,check_reply,', 'lsi_word': ' check,info,kernel,reply,test,', 'lsi_method': ' test_kernel_info,check_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'555': 'test_kernel_info(test_client.py)', '548': '_check_reply(test_client.py)'}, 'execution_paths': {721: 1}}, {'key': 1000246, 'parent': 100078, 'tfidf_word': 'check comm info reply test ', 'tfidf_method': '_check_reply test_comm_info ', 'lda_word': ' info,check,test,reply,comm,', 'lda_method': ' test_comm_info,check_reply,', 'lsi_word': ' check,comm,info,reply,test,', 'lsi_method': ' test_comm_info,check_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'550': 'test_comm_info(test_client.py)', '548': '_check_reply(test_client.py)'}, 'execution_paths': {722: 1}}, {'key': 1000260, 'parent': 100078, 'tfidf_word': 'check reply shutdown test ', 'tfidf_method': '_check_reply test_shutdown ', 'lda_word': ' test,check,shutdown,reply,', 'lda_method': ' test_shutdown,check_reply,', 'lsi_word': ' reply,shutdown,test,check,', 'lsi_method': ' test_shutdown,check_reply,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'556': 'test_shutdown(test_client.py)', '548': '_check_reply(test_client.py)'}, 'execution_paths': {723: 1}}, {'key': 1000261, 'parent': 100078, 'tfidf_word': 'session set up ', 'tfidf_method': 'Session setUp ', 'lda_word': ' session,set,', 'lda_method': ' session,setup,', 'lsi_word': ' set,session,', 'lsi_method': ' setup,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'678': 'setUp(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {724: 1}}, {'key': 1000262, 'parent': 100078, 'tfidf_word': 'case session test ', 'tfidf_method': 'SessionTestCase TestSession ', 'lda_word': ' test,session,case,', 'lda_method': ' sessiontestcase,testsession,', 'lsi_word': ' session,test,case,', 'lsi_method': ' testsession,sessiontestcase,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'674': 'TestSession(test_session.py)', '673': 'SessionTestCase(test_session.py)'}, 'execution_paths': {728: 1}}, {'key': 1000263, 'parent': 100078, 'tfidf_word': 'feed identity serialize test ', 'tfidf_method': 'feed_identities test_serialize ', 'lda_word': ' feed,identity,test,serialize,', 'lda_method': ' test_serialize,feed_identities,', 'lsi_word': ' identity,serialize,test,feed,', 'lsi_method': ' test_serialize,feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'696': 'test_serialize(test_session.py)', '475': 'feed_identities(session.py)'}, 'execution_paths': {741: 1}}, {'key': 1000264, 'parent': 100078, 'tfidf_word': 'feed identity send test ', 'tfidf_method': 'feed_identities test_send ', 'lda_word': ' test,send,identity,feed,', 'lda_method': ' feed_identities,test_send,', 'lsi_word': ' identity,send,test,feed,', 'lsi_method': ' test_send,feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '475': 'feed_identities(session.py)'}, 'execution_paths': {755: 1}}, {'key': 1000265, 'parent': 100078, 'tfidf_word': 'test send ', 'tfidf_method': 'test_send send ', 'lda_word': ' send,test,', 'lda_method': ' send,test_send,', 'lsi_word': ' send,test,', 'lsi_method': ' test_send,send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '88': 'send(channels.py)'}, 'execution_paths': {765: 1}}, {'key': 1000268, 'parent': 100078, 'tfidf_word': 'id msg send test ', 'tfidf_method': 'msg_id test_send ', 'lda_word': ' msg,test,send,', 'lda_method': ' msg_id,test_send,', 'lsi_word': ' msg,send,test,', 'lsi_method': ' test_send,msg_id,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '478': 'msg_id(session.py)'}, 'execution_paths': {770: 1}}, {'key': 1000269, 'parent': 100078, 'tfidf_word': 'test send ', 'tfidf_method': 'send test_send ', 'lda_word': ' send,test,', 'lda_method': ' send,test_send,', 'lsi_word': ' send,test,', 'lsi_method': ' test_send,send,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '114': 'send(channels.py)'}, 'execution_paths': {773: 1}}, {'key': 1000127, 'parent': 100078, 'tfidf_word': 'feed identity recv handle send test ', 'tfidf_method': 'feed_identities recv handle test_send ', 'lda_word': ' identity,recv,feed,test,handle,', 'lda_method': ' handle,recv,feed_identities,test_send,', 'lsi_word': ' feed,identity,recv,send,test,', 'lsi_method': ' recv,feed_identities,test_send,handle,', 'spm_method': '  &#187; handle(forward.py) &rarr; recv(session.py) &rarr; feed_identities(session.py) . <br> &#187; test_send(test_session.py) &rarr; recv(session.py) &rarr; feed_identities(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'session.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'694': 'test_send(test_session.py)', '479': 'recv(session.py)', '475': 'feed_identities(session.py)', '492': 'handle(forward.py)'}, 'execution_paths': {779: 1, 1396: 1}}, {'key': 1000270, 'parent': 100078, 'tfidf_word': 'args session test ', 'tfidf_method': 'Session test_args ', 'lda_word': ' test,session,args,', 'lda_method': ' session,test_args,', 'lsi_word': ' args,session,test,', 'lsi_method': ' test_args,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'680': 'test_args(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {787: 1}}, {'key': 1000271, 'parent': 100078, 'tfidf_word': 'session test tracking ', 'tfidf_method': 'Session test_tracking ', 'lda_word': ' test,session,tracking,', 'lda_method': ' test_tracking,session,', 'lsi_word': ' session,test,tracking,', 'lsi_method': ' test_tracking,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'698': 'test_tracking(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {793: 1}}, {'key': 1000272, 'parent': 100078, 'tfidf_word': 'header id test unique utcnow msg ', 'tfidf_method': 'msg_header utcnow test_unique_msg_ids ', 'lda_word': ' msg,test,unique,header,utcnow,', 'lda_method': ' utcnow,msg_header,test_unique_msg_ids,', 'lsi_word': ' msg,header,test,unique,utcnow,', 'lsi_method': ' msg_header,test_unique_msg_ids,utcnow,', 'spm_method': '  &#187; test_unique_msg_ids(test_session.py) &rarr; msg_header(session.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'699': 'test_unique_msg_ids(test_session.py)', '445': 'msg_header(session.py)', '450': 'utcnow(session.py)'}, 'execution_paths': {794: 1}}, {'key': 1000273, 'parent': 100078, 'tfidf_word': 'id test session ', 'tfidf_method': 'Session test_session_id ', 'lda_word': ' test,session,', 'lda_method': ' test_session_id,session,', 'lsi_word': ' session,test,', 'lsi_method': ' test_session_id,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'697': 'test_session_id(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {809: 1}}, {'key': 1000274, 'parent': 100078, 'tfidf_word': 'digest history session test zero ', 'tfidf_method': 'Session test_zero_digest_history ', 'lda_word': ' history,session,zero,digest,test,', 'lda_method': ' session,test_zero_digest_history,', 'lsi_word': ' digest,history,session,test,zero,', 'lsi_method': ' test_zero_digest_history,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'700': 'test_zero_digest_history(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {813: 1}}, {'key': 1000084, 'parent': 100050, 'tfidf_word': 'add test cull history clone zero digest ', 'tfidf_method': '_add_digest _cull_digest_history test_clone test_cull_digest_history test_zero_digest_history ', 'lda_word': ' digest,test,add,history,cull,', 'lda_method': ' cull_digest_history,add_digest,test_cull_digest_history,test_zero_digest_history,test_clone,', 'lsi_word': ' digest,history,cull,test,add,', 'lsi_method': ' cull_digest_history,add_digest,test_cull_digest_history,test_zero_digest_history,test_clone,', 'spm_method': '  &#187; test_clone(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_cull_digest_history(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br> &#187; test_zero_digest_history(test_session.py) &rarr; _add_digest(session.py) &rarr; _cull_digest_history(session.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'700': 'test_zero_digest_history(test_session.py)', '458': '_add_digest(session.py)', '460': '_cull_digest_history(session.py)', '687': 'test_cull_digest_history(test_session.py)', '686': 'test_clone(test_session.py)'}, 'execution_paths': {814: 1, 819: 1, 875: 1}}, {'key': 1000237, 'parent': 100078, 'tfidf_word': 'cull digest history session test ', 'tfidf_method': 'Session test_cull_digest_history ', 'lda_word': ' session,test,cull,digest,history,', 'lda_method': ' session,test_cull_digest_history,', 'lsi_word': ' history,session,digest,test,cull,', 'lsi_method': ' test_cull_digest_history,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'687': 'test_cull_digest_history(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {818: 1}}, {'key': 1000238, 'parent': 100078, 'tfidf_word': 'bad pack session test ', 'tfidf_method': 'Session test_bad_pack ', 'lda_word': ' bad,test,session,pack,', 'lda_method': ' session,test_bad_pack,', 'lsi_word': ' pack,session,test,bad,', 'lsi_method': ' test_bad_pack,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'681': 'test_bad_pack(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {823: 1}}, {'key': 1000239, 'parent': 100078, 'tfidf_word': 'pack packer test bad ', 'tfidf_method': '_bad_packer test_bad_pack ', 'lda_word': ' bad,pack,test,packer,', 'lda_method': ' bad_packer,test_bad_pack,', 'lsi_word': ' bad,packer,test,pack,', 'lsi_method': ' test_bad_pack,bad_packer,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'681': 'test_bad_pack(test_session.py)', '675': '_bad_packer(test_session.py)'}, 'execution_paths': {824: 1}}, {'key': 1000236, 'parent': 100078, 'tfidf_word': 'test unpack unpacker bad ', 'tfidf_method': '_bad_unpacker test_bad_unpack ', 'lda_word': ' unpacker,unpack,bad,test,', 'lda_method': ' test_bad_unpack,bad_unpacker,', 'lsi_word': ' bad,unpack,unpacker,test,', 'lsi_method': ' test_bad_unpack,bad_unpacker,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '676': '_bad_unpacker(test_session.py)'}, 'execution_paths': {828: 1}}, {'key': 1000226, 'parent': 100078, 'tfidf_word': 'bad session test unpack ', 'tfidf_method': 'Session test_bad_unpack ', 'lda_word': ' unpack,session,test,bad,', 'lda_method': ' session,test_bad_unpack,', 'lsi_word': ' session,test,unpack,bad,', 'lsi_method': ' test_bad_unpack,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'684': 'test_bad_unpack(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {829: 1}}, {'key': 1000227, 'parent': 100078, 'tfidf_word': 'bad packer session test ', 'tfidf_method': 'Session test_bad_packer ', 'lda_word': ' test,packer,bad,session,', 'lda_method': ' test_bad_packer,session,', 'lsi_word': ' packer,session,test,bad,', 'lsi_method': ' test_bad_packer,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'682': 'test_bad_packer(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {833: 1}}, {'key': 1000228, 'parent': 100078, 'tfidf_word': 'bad session test unpacker ', 'tfidf_method': 'Session test_bad_unpacker ', 'lda_word': ' session,test,bad,unpacker,', 'lda_method': ' test_bad_unpacker,session,', 'lsi_word': ' session,test,unpacker,bad,', 'lsi_method': ' test_bad_unpacker,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'685': 'test_bad_unpacker(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {837: 1}}, {'key': 1000229, 'parent': 100078, 'tfidf_word': 'bad roundtrip session test ', 'tfidf_method': 'Session test_bad_roundtrip ', 'lda_word': ' bad,session,test,roundtrip,', 'lda_method': ' test_bad_roundtrip,session,', 'lsi_word': ' roundtrip,session,test,bad,', 'lsi_method': ' test_bad_roundtrip,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'683': 'test_bad_roundtrip(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {841: 1}}, {'key': 1000119, 'parent': 100073, 'tfidf_word': 'datetime datetimes utcnow test msgpack pickle ', 'tfidf_method': 'utcnow _datetime_test test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' test,datetimes,datetime,utcnow,pickle,', 'lda_method': ' datetime_test,utcnow,test_datetimes,test_datetimes_pickle,test_datetimes_msgpack,', 'lsi_word': ' test,datetime,utcnow,datetimes,msgpack,', 'lsi_method': ' datetime_test,utcnow,test_datetimes,test_datetimes_msgpack,test_datetimes_pickle,', 'spm_method': '  &#187; test_datetimes(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; utcnow(session.py) . <br> &#187; test_datetimes_msgpack(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; utcnow(session.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; utcnow(session.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '450': 'utcnow(session.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)'}, 'execution_paths': {842: 1, 845: 1, 851: 1}}, {'key': 1000062, 'parent': 100035, 'tfidf_word': 'parse test extract default ms msgpack naive pickle precision date ', 'tfidf_method': 'parse_date extract_dates _datetime_test test_date_default test_extract_date_from_naive test_extract_dates test_parse_ms_precision test_datetimes test_datetimes_msgpack test_datetimes_pickle ', 'lda_word': ' date,test,extract,tzinfo,ensure,', 'lda_method': ' extract_dates,ensure_tzinfo,parse_date,datetime_test,test_datetimes_msgpack,', 'lsi_word': ' date,test,extract,parse,ensure,', 'lsi_method': ' ensure_tzinfo,parse_date,extract_dates,datetime_test,test_datetimes_pickle,', 'spm_method': '  &#187; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; _datetime_test(test_session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; extract_dates(jsonutil.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; parse_date(jsonutil.py) . <br> &#187; test_datetimes_pickle(test_session.py) &rarr; _datetime_test(test_session.py) &rarr; parse_date(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_session.py', 'jsonutil.py', 'test_jsonutil.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '679': '_datetime_test(test_session.py)', '242': 'extract_dates(jsonutil.py)', '243': 'parse_date(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)', '690': 'test_datetimes_pickle(test_session.py)', '689': 'test_datetimes_msgpack(test_session.py)', '576': 'test_extract_date_from_naive(test_jsonutil.py)', '577': 'test_extract_dates(test_jsonutil.py)', '578': 'test_parse_ms_precision(test_jsonutil.py)', '575': 'test_date_default(test_jsonutil.py)'}, 'execution_paths': {843: 1, 846: 1, 852: 1, 1352: 1, 1353: 1, 1354: 1, 1356: 1}}, {'key': 1000230, 'parent': 100078, 'tfidf_word': 'datetimes session test ', 'tfidf_method': 'Session test_datetimes ', 'lda_word': ' datetimes,session,test,', 'lda_method': ' test_datetimes,session,', 'lsi_word': ' datetimes,session,test,', 'lsi_method': ' test_datetimes,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'688': 'test_datetimes(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {844: 1}}, {'key': 1000231, 'parent': 100078, 'tfidf_word': 'datetimes pickle session test ', 'tfidf_method': 'Session test_datetimes_pickle ', 'lda_word': ' pickle,datetimes,test,session,', 'lda_method': ' test_datetimes_pickle,session,', 'lsi_word': ' pickle,session,test,datetimes,', 'lsi_method': ' test_datetimes_pickle,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'690': 'test_datetimes_pickle(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {847: 1}}, {'key': 1000216, 'parent': 100078, 'tfidf_word': 'datetimes msgpack session test ', 'tfidf_method': 'Session test_datetimes_msgpack ', 'lda_word': ' test,msgpack,datetimes,session,', 'lda_method': ' session,test_datetimes_msgpack,', 'lsi_word': ' msgpack,session,test,datetimes,', 'lsi_method': ' test_datetimes_msgpack,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'689': 'test_datetimes_msgpack(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {856: 1}}, {'key': 1000217, 'parent': 100078, 'tfidf_word': 'feed identity raw send test ', 'tfidf_method': 'feed_identities test_send_raw ', 'lda_word': ' identity,test,send,feed,raw,', 'lda_method': ' feed_identities,test_send_raw,', 'lsi_word': ' raw,send,identity,test,feed,', 'lsi_method': ' test_send_raw,feed_identities,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '475': 'feed_identities(session.py)'}, 'execution_paths': {859: 1}}, {'key': 1000218, 'parent': 100078, 'tfidf_word': 'sign test raw send ', 'tfidf_method': 'send_raw sign test_send_raw ', 'lda_word': ' raw,send,sign,test,', 'lda_method': ' test_send_raw,sign,send_raw,', 'lsi_word': ' send,raw,test,sign,', 'lsi_method': ' send_raw,sign,test_send_raw,', 'spm_method': '  &#187; test_send_raw(test_session.py) &rarr; send_raw(session.py) &rarr; sign(session.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'695': 'test_send_raw(test_session.py)', '481': 'send_raw(session.py)', '483': 'sign(session.py)'}, 'execution_paths': {872: 1}}, {'key': 1000219, 'parent': 100078, 'tfidf_word': 'test clone ', 'tfidf_method': 'clone test_clone ', 'lda_word': ' clone,test,', 'lda_method': ' test_clone,clone,', 'lsi_word': ' clone,test,', 'lsi_method': ' test_clone,clone,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '473': 'clone(session.py)'}, 'execution_paths': {873: 1}}, {'key': 1000220, 'parent': 100078, 'tfidf_word': 'clone session test ', 'tfidf_method': 'Session test_clone ', 'lda_word': ' clone,session,test,', 'lda_method': ' test_clone,session,', 'lsi_word': ' clone,session,test,', 'lsi_method': ' test_clone,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_session.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'686': 'test_clone(test_session.py)', '441': 'Session(session.py)'}, 'execution_paths': {874: 1}}, {'key': 1000092, 'parent': 100054, 'tfidf_word': 'select test close random port ', 'tfidf_method': 'select_random_ports test_random_ports close close ports close close close ', 'lda_word': ' port,random,select,test,close,', 'lda_method': ' close,test_random_ports,select_random_ports,port,', 'lsi_word': ' port,random,select,test,close,', 'lsi_method': ' select_random_ports,test_random_ports,close,port,', 'spm_method': '  &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; test_random_ports(test_ssh.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_ssh.py', 'tunnel.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'701': 'test_random_ports(test_ssh.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}, 'execution_paths': {876: 1, 877: 1, 878: 1, 879: 1, 880: 1, 881: 1}}, {'key': 1000221, 'parent': 100078, 'tfidf_word': 'kernelapp launch lifecycle test ', 'tfidf_method': '_launch test_kernelapp_lifecycle ', 'lda_word': ' lifecycle,test,launch,kernelapp,', 'lda_method': ' test_kernelapp_lifecycle,launch,', 'lsi_word': ' launch,lifecycle,test,kernelapp,', 'lsi_method': ' test_kernelapp_lifecycle,launch,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelapp.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'580': 'test_kernelapp_lifecycle(test_kernelapp.py)', '579': '_launch(test_kernelapp.py)'}, 'execution_paths': {882: 1}}, {'key': 1000222, 'parent': 100078, 'tfidf_word': 'enter start ', 'tfidf_method': '__enter__ start ', 'lda_word': ' start,enter,', 'lda_method': ' start,enter,', 'lsi_word': ' start,enter,', 'lsi_method': ' start,enter,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'709': '__enter__(utils.py)', '711': 'start(utils.py)'}, 'execution_paths': {883: 1}}, {'key': 1000223, 'parent': 100078, 'tfidf_word': 'exit stop ', 'tfidf_method': '__exit__ stop ', 'lda_word': ' stop,exit,', 'lda_method': ' stop,exit,', 'lsi_word': ' stop,exit,', 'lsi_method': ' stop,exit,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'710': '__exit__(utils.py)', '712': 'stop(utils.py)'}, 'execution_paths': {884: 1}}, {'key': 1000224, 'parent': 100078, 'tfidf_word': 'execute get iopub msg ', 'tfidf_method': 'get_iopub_msg execute ', 'lda_word': ' iopub,get,execute,msg,', 'lda_method': ' get_iopub_msg,execute,', 'lsi_word': ' get,iopub,msg,execute,', 'lsi_method': ' get_iopub_msg,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'704': 'execute(utils.py)', '157': 'get_iopub_msg(client.py)'}, 'execution_paths': {885: 1}}, {'key': 1000225, 'parent': 100078, 'tfidf_word': 'execute ', 'tfidf_method': 'execute execute ', 'lda_word': ' execute,', 'lda_method': ' execute,', 'lsi_word': ' execute,', 'lsi_method': ' execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'704': 'execute(utils.py)', '608': 'execute(test_kernelmanager.py)'}, 'execution_paths': {886: 1}}, {'key': 1000232, 'parent': 100078, 'tfidf_word': 'execute ', 'tfidf_method': 'execute execute ', 'lda_word': ' execute,', 'lda_method': ' execute,', 'lsi_word': ' execute,', 'lsi_method': ' execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'704': 'execute(utils.py)', '598': 'execute(test_kernelmanager.py)'}, 'execution_paths': {887: 1}}, {'key': 1000233, 'parent': 100078, 'tfidf_word': 'execute ', 'tfidf_method': 'execute execute ', 'lda_word': ' execute,', 'lda_method': ' execute,', 'lsi_word': ' execute,', 'lsi_method': ' execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'704': 'execute(utils.py)', '615': 'execute(test_kernelmanager.py)'}, 'execution_paths': {888: 1}}, {'key': 1000234, 'parent': 100078, 'tfidf_word': 'execute ', 'tfidf_method': 'execute execute ', 'lda_word': ' execute,', 'lda_method': ' execute,', 'lsi_word': ' execute,', 'lsi_method': ' execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'704': 'execute(utils.py)', '607': 'execute(test_kernelmanager.py)'}, 'execution_paths': {889: 1}}, {'key': 1000235, 'parent': 100078, 'tfidf_word': 'execute get msg shell ', 'tfidf_method': 'get_shell_msg execute ', 'lda_word': ' shell,get,msg,execute,', 'lda_method': ' get_shell_msg,execute,', 'lsi_word': ' get,msg,shell,execute,', 'lsi_method': ' get_shell_msg,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['utils.py', 'client.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'704': 'execute(utils.py)', '158': 'get_shell_msg(client.py)'}, 'execution_paths': {890: 1}}, {'key': 1000201, 'parent': 100078, 'tfidf_word': 'default session test version ', 'tfidf_method': 'Session test_default_version ', 'lda_word': ' test,session,default,version,', 'lda_method': ' session,test_default_version,', 'lsi_word': ' session,test,version,default,', 'lsi_method': ' test_default_version,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'516': 'test_default_version(test_adapter.py)', '441': 'Session(session.py)'}, 'execution_paths': {907: 1}}, {'key': 1000202, 'parent': 100078, 'tfidf_word': 'test line code ', 'tfidf_method': 'code_to_line test_code_to_line_no_code ', 'lda_word': ' code,line,test,', 'lda_method': ' code_to_line,test_code_to_line_no_code,', 'lsi_word': ' code,line,test,', 'lsi_method': ' test_code_to_line_no_code,code_to_line,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'515': 'test_code_to_line_no_code(test_adapter.py)', '51': 'code_to_line(adapter.py)'}, 'execution_paths': {909: 1}}, {'key': 1000203, 'parent': 100078, 'tfidf_word': 'session set up ', 'tfidf_method': 'Session setUp ', 'lda_word': ' set,session,', 'lda_method': ' setup,session,', 'lsi_word': ' set,session,', 'lsi_method': ' setup,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_adapter.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'519': 'setUp(test_adapter.py)', '441': 'Session(session.py)'}, 'execution_paths': {910: 1}}, {'key': 1000204, 'parent': 100078, 'tfidf_word': 'adapter case v4to v5 test ', 'tfidf_method': 'AdapterTest V4toV5TestCase ', 'lda_word': ' test,v4to,adapter,v5,case,', 'lda_method': ' adaptertest,v4tov5testcase,', 'lsi_word': ' test,adapter,case,v4to,v5,', 'lsi_method': ' v4tov5testcase,adaptertest,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'513': 'V4toV5TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)'}, 'execution_paths': {914: 1}}, {'key': 1000205, 'parent': 100078, 'tfidf_word': 'adapt test version ', 'tfidf_method': 'adapt test_same_version ', 'lda_word': ' test,version,adapt,', 'lda_method': ' adapt,test_same_version,', 'lsi_word': ' adapt,test,version,', 'lsi_method': ' test_same_version,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'533': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {919: 1}}, {'key': 1000206, 'parent': 100078, 'tfidf_word': 'test adapt ', 'tfidf_method': 'adapt test_no_adapt ', 'lda_word': ' adapt,test,', 'lda_method': ' adapt,test_no_adapt,', 'lsi_word': ' adapt,test,', 'lsi_method': ' test_no_adapt,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'528': 'test_no_adapt(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {920: 1}}, {'key': 1000194, 'parent': 100078, 'tfidf_word': 'adapt rename test type ', 'tfidf_method': 'adapt test_rename_type ', 'lda_word': ' rename,type,adapt,test,', 'lda_method': ' adapt,test_rename_type,', 'lsi_word': ' rename,test,type,adapt,', 'lsi_method': ' test_rename_type,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'532': 'test_rename_type(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {929: 1}}, {'key': 1000195, 'parent': 100078, 'tfidf_word': 'adapt execute request test ', 'tfidf_method': 'adapt test_execute_request ', 'lda_word': ' adapt,execute,request,test,', 'lda_method': ' test_execute_request,adapt,', 'lsi_word': ' execute,request,test,adapt,', 'lsi_method': ' test_execute_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'525': 'test_execute_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {934: 1}}, {'key': 1000196, 'parent': 100078, 'tfidf_word': 'adapt execute reply test ', 'tfidf_method': 'adapt test_execute_reply ', 'lda_word': ' test,adapt,reply,execute,', 'lda_method': ' adapt,test_execute_reply,', 'lsi_word': ' execute,reply,test,adapt,', 'lsi_method': ' test_execute_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'524': 'test_execute_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {939: 1}}, {'key': 1000197, 'parent': 100078, 'tfidf_word': 'adapt complete request test ', 'tfidf_method': 'adapt test_complete_request ', 'lda_word': ' complete,request,adapt,test,', 'lda_method': ' test_complete_request,adapt,', 'lsi_word': ' complete,request,test,adapt,', 'lsi_method': ' test_complete_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'522': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {940: 1}}, {'key': 1000198, 'parent': 100078, 'tfidf_word': 'adapt complete reply test ', 'tfidf_method': 'adapt test_complete_reply ', 'lda_word': ' adapt,test,reply,complete,', 'lda_method': ' adapt,test_complete_reply,', 'lsi_word': ' complete,reply,test,adapt,', 'lsi_method': ' test_complete_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'521': 'test_complete_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {949: 1}}, {'key': 1000199, 'parent': 100078, 'tfidf_word': 'adapt info object request test ', 'tfidf_method': 'adapt test_object_info_request ', 'lda_word': ' info,object,request,adapt,test,', 'lda_method': ' test_object_info_request,adapt,', 'lsi_word': ' adapt,info,object,request,test,', 'lsi_method': ' test_object_info_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'531': 'test_object_info_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {954: 1}}, {'key': 1000200, 'parent': 100078, 'tfidf_word': 'adapt info object reply test ', 'tfidf_method': 'adapt test_object_info_reply ', 'lda_word': ' test,adapt,reply,object,info,', 'lda_method': ' test_object_info_reply,adapt,', 'lsi_word': ' object,reply,info,test,adapt,', 'lsi_method': ' test_object_info_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'529': 'test_object_info_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {959: 1}}, {'key': 1000207, 'parent': 100078, 'tfidf_word': 'adapt found info object reply test ', 'tfidf_method': 'adapt test_object_info_reply_not_found ', 'lda_word': ' info,reply,found,object,adapt,', 'lda_method': ' test_object_info_reply_not_found,adapt,', 'lsi_word': ' adapt,reply,info,object,found,', 'lsi_method': ' test_object_info_reply_not_found,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'530': 'test_object_info_reply_not_found(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {964: 1}}, {'key': 1000208, 'parent': 100078, 'tfidf_word': 'adapt info kernel reply test ', 'tfidf_method': 'adapt test_kernel_info_reply ', 'lda_word': ' info,test,reply,adapt,kernel,', 'lda_method': ' adapt,test_kernel_info_reply,', 'lsi_word': ' adapt,info,kernel,reply,test,', 'lsi_method': ' test_kernel_info_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'527': 'test_kernel_info_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {969: 1}}, {'key': 1000209, 'parent': 100078, 'tfidf_word': 'adapt data display test ', 'tfidf_method': 'adapt test_display_data ', 'lda_word': ' display,data,adapt,test,', 'lda_method': ' test_display_data,adapt,', 'lsi_word': ' data,display,test,adapt,', 'lsi_method': ' test_display_data,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'523': 'test_display_data(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {974: 1}}, {'key': 1000210, 'parent': 100078, 'tfidf_word': 'adapt input request test ', 'tfidf_method': 'adapt test_input_request ', 'lda_word': ' request,test,adapt,input,', 'lda_method': ' adapt,test_input_request,', 'lsi_word': ' input,request,test,adapt,', 'lsi_method': ' test_input_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'526': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {979: 1}}, {'key': 1000211, 'parent': 100078, 'tfidf_word': 'adapter case v4 v5to test ', 'tfidf_method': 'AdapterTest V5toV4TestCase ', 'lda_word': ' test,adapter,v5to,case,v4,', 'lda_method': ' adaptertest,v5tov4testcase,', 'lsi_word': ' test,adapter,case,v4,v5to,', 'lsi_method': ' v5tov4testcase,adaptertest,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'514': 'V5toV4TestCase(test_adapter.py)', '512': 'AdapterTest(test_adapter.py)'}, 'execution_paths': {980: 1}}, {'key': 1000212, 'parent': 100078, 'tfidf_word': 'adapt test version ', 'tfidf_method': 'adapt test_same_version ', 'lda_word': ' adapt,test,version,', 'lda_method': ' test_same_version,adapt,', 'lsi_word': ' adapt,test,version,', 'lsi_method': ' test_same_version,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'546': 'test_same_version(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {985: 1}}, {'key': 1000213, 'parent': 100078, 'tfidf_word': 'test adapt ', 'tfidf_method': 'adapt test_no_adapt ', 'lda_word': ' adapt,test,', 'lda_method': ' test_no_adapt,adapt,', 'lsi_word': ' adapt,test,', 'lsi_method': ' test_no_adapt,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'544': 'test_no_adapt(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {986: 1}}, {'key': 1000214, 'parent': 100078, 'tfidf_word': 'adapt rename test type ', 'tfidf_method': 'adapt test_rename_type ', 'lda_word': ' rename,adapt,type,test,', 'lda_method': ' test_rename_type,adapt,', 'lsi_word': ' rename,test,type,adapt,', 'lsi_method': ' test_rename_type,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'545': 'test_rename_type(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {995: 1}}, {'key': 1000215, 'parent': 100078, 'tfidf_word': 'adapt execute request test ', 'tfidf_method': 'adapt test_execute_request ', 'lda_word': ' execute,request,adapt,test,', 'lda_method': ' test_execute_request,adapt,', 'lsi_word': ' execute,request,test,adapt,', 'lsi_method': ' test_execute_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'538': 'test_execute_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1000: 1}}, {'key': 1000193, 'parent': 100078, 'tfidf_word': 'adapt complete request test ', 'tfidf_method': 'adapt test_complete_request ', 'lda_word': ' adapt,request,test,complete,', 'lda_method': ' adapt,test_complete_request,', 'lsi_word': ' complete,request,test,adapt,', 'lsi_method': ' test_complete_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'536': 'test_complete_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1001: 1}}, {'key': 1000188, 'parent': 100078, 'tfidf_word': 'adapt complete reply test ', 'tfidf_method': 'adapt test_complete_reply ', 'lda_word': ' test,adapt,reply,complete,', 'lda_method': ' adapt,test_complete_reply,', 'lsi_word': ' complete,reply,test,adapt,', 'lsi_method': ' test_complete_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'535': 'test_complete_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1010: 1}}, {'key': 1000189, 'parent': 100078, 'tfidf_word': 'adapt inspect request test ', 'tfidf_method': 'adapt test_inspect_request ', 'lda_word': ' adapt,request,test,inspect,', 'lda_method': ' adapt,test_inspect_request,', 'lsi_word': ' inspect,request,test,adapt,', 'lsi_method': ' test_inspect_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'541': 'test_inspect_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1015: 1}}, {'key': 1000190, 'parent': 100078, 'tfidf_word': 'adapt inspect request test token ', 'tfidf_method': 'adapt test_inspect_request_token ', 'lda_word': ' inspect,token,adapt,request,test,', 'lda_method': ' adapt,test_inspect_request_token,', 'lsi_word': ' request,test,inspect,token,adapt,', 'lsi_method': ' test_inspect_request_token,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'542': 'test_inspect_request_token(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1020: 1}}, {'key': 1000186, 'parent': 100078, 'tfidf_word': 'adapt inspect reply test ', 'tfidf_method': 'adapt test_inspect_reply ', 'lda_word': ' adapt,test,reply,inspect,', 'lda_method': ' adapt,test_inspect_reply,', 'lsi_word': ' inspect,reply,test,adapt,', 'lsi_method': ' test_inspect_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'540': 'test_inspect_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1025: 1}}, {'key': 1000187, 'parent': 100078, 'tfidf_word': 'adapt info kernel reply test ', 'tfidf_method': 'adapt test_kernel_info_reply ', 'lda_word': ' test,kernel,adapt,reply,info,', 'lda_method': ' adapt,test_kernel_info_reply,', 'lsi_word': ' kernel,reply,info,test,adapt,', 'lsi_method': ' test_kernel_info_reply,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'543': 'test_kernel_info_reply(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1030: 1}}, {'key': 1000191, 'parent': 100078, 'tfidf_word': 'adapt data display test ', 'tfidf_method': 'adapt test_display_data ', 'lda_word': ' display,data,adapt,test,', 'lda_method': ' test_display_data,adapt,', 'lsi_word': ' data,display,test,adapt,', 'lsi_method': ' test_display_data,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'537': 'test_display_data(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1035: 1}}, {'key': 1000183, 'parent': 100078, 'tfidf_word': 'adapt input request test ', 'tfidf_method': 'adapt test_input_request ', 'lda_word': ' adapt,test,request,input,', 'lda_method': ' test_input_request,adapt,', 'lsi_word': ' input,request,test,adapt,', 'lsi_method': ' test_input_request,adapt,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_adapter.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'539': 'test_input_request(test_adapter.py)', '517': 'adapt(test_adapter.py)'}, 'execution_paths': {1040: 1}}, {'key': 1000082, 'parent': 100048, 'tfidf_word': 'test close connection file write localhost port ', 'tfidf_method': 'write_connection_file test_write_connection_file close close ports localhost close close close ', 'lda_word': ' write,file,connection,test,close,', 'lda_method': ' write_connection_file,test_write_connection_file,close,port,localhost,', 'lsi_word': ' write,file,connection,test,close,', 'lsi_method': ' test_write_connection_file,write_connection_file,close,localhost,port,', 'spm_method': '  &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_write_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'570': 'test_write_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1041: 1, 1042: 1, 1043: 1, 1044: 1, 1045: 1, 1046: 1, 1047: 1}}, {'key': 1000086, 'parent': 100051, 'tfidf_word': 'test load mixin connection console file find kn session app ', 'tfidf_method': 'JupyterConsoleApp DummyConsoleApp ConnectionFileMixin Session test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' app,file,console,jupyter,connection,', 'lda_method': ' dummyconsoleapp,jupyterconsoleapp,connectionfilemixin,session,test_find_connection_file,', 'lsi_word': ' app,console,connection,file,jupyter,', 'lsi_method': ' jupyterconsoleapp,dummyconsoleapp,connectionfilemixin,session,test_load_connection_file_session_with_kn,', 'spm_method': '  &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_find_connection_file(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; JupyterConsoleApp(consoleapp.py) &rarr; Session(session.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; DummyConsoleApp(test_connect.py) &rarr; Session(session.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'session.py', 'connect.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '558': 'DummyConsoleApp(test_connect.py)', '214': 'JupyterConsoleApp(consoleapp.py)', '441': 'Session(session.py)', '188': 'ConnectionFileMixin(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {1048: 1, 1049: 1, 1067: 1, 1068: 1, 1086: 1, 1087: 1, 1098: 1, 1099: 1}}, {'key': 1000083, 'parent': 100049, 'tfidf_word': 'load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session close close ports localhost close close close ', 'lda_word': ' localhost,connection,file,session,test,', 'lda_method': ' test_load_connection_file_session,write_connection_file,close,localhost,port,', 'lsi_word': ' connection,file,load,test,write,', 'lsi_method': ' test_load_connection_file_session,write_connection_file,close,port,localhost,', 'spm_method': '  &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1050: 1, 1051: 1, 1052: 1, 1053: 1, 1054: 1, 1055: 1, 1056: 1}}, {'key': 1000057, 'parent': 100033, 'tfidf_word': 'record test write session load app find kn connection file ', 'tfidf_method': '_record_random_port_names load_connection_file write_connection_file init_connection_file initialize test_app_load_connection_file test_find_connection_file test_load_connection_file_session test_load_connection_file_session_with_kn ', 'lda_word': ' file,connection,load,port,record,', 'lda_method': ' init_connection_file,record_random_port_names,load_connection_file,initialize,write_connection_file,', 'lsi_word': ' file,connection,load,init,write,', 'lsi_method': ' initialize,record_random_port_names,load_connection_file,write_connection_file,init_connection_file,', 'spm_method': '  &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; write_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; write_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {1057: 1, 1076: 1, 1095: 1, 1100: 1}}, {'key': 1000052, 'parent': 100031, 'tfidf_word': 'test init initialize session kn app find file load connection ', 'tfidf_method': '_ip_default load_connection_file load_connection_info localhost init_connection_file initialize test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' file,connection,load,default,localhost,', 'lda_method': ' load_connection_file,ip_default,localhost,load_connection_info,initialize,', 'lsi_word': ' connection,load,file,default,info,', 'lsi_method': ' localhost,load_connection_info,ip_default,load_connection_file,init_connection_file,', 'spm_method': '  &#187; load_connection_file(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) &rarr; _ip_default(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; localhost(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py', 'localinterfaces.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '195': '_ip_default(connect.py)', '315': 'localhost(localinterfaces.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {1058: 1, 1065: 1, 1077: 1, 1084: 1, 1096: 1, 1101: 1}}, {'key': 1000053, 'parent': 100031, 'tfidf_word': 'test init initialize session kn app find file load connection ', 'tfidf_method': '_record_random_port_names load_connection_file load_connection_info init_connection_file initialize test_load_connection_file_session test_load_connection_file_session_with_kn test_app_load_connection_file test_find_connection_file ', 'lda_word': ' connection,load,file,test,random,', 'lda_method': ' record_random_port_names,load_connection_info,load_connection_file,init_connection_file,initialize,', 'lsi_word': ' connection,load,file,names,info,', 'lsi_method': ' load_connection_file,record_random_port_names,load_connection_info,initialize,init_connection_file,', 'spm_method': '  &#187; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_file(connect.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) . <br> &#187; initialize(test_connect.py) &rarr; init_connection_file(consoleapp.py) &rarr; load_connection_info(connect.py) &rarr; _record_random_port_names(connect.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_connect.py', 'consoleapp.py', 'connect.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '572': 'initialize(test_connect.py)', '219': 'init_connection_file(consoleapp.py)', '209': 'load_connection_file(connect.py)', '210': 'load_connection_info(connect.py)', '197': '_record_random_port_names(connect.py)', '565': 'test_load_connection_file_session_with_kn(test_connect.py)', '559': 'test_app_load_connection_file(test_connect.py)', '560': 'test_find_connection_file(test_connect.py)'}, 'execution_paths': {1059: 1, 1066: 1, 1078: 1, 1085: 1, 1097: 1, 1102: 1}}, {'key': 1000184, 'parent': 100078, 'tfidf_word': 'connection file load test session ', 'tfidf_method': 'Session test_load_connection_file_session ', 'lda_word': ' session,load,file,connection,test,', 'lda_method': ' session,test_load_connection_file_session,', 'lsi_word': ' session,file,load,test,connection,', 'lsi_method': ' test_load_connection_file_session,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'564': 'test_load_connection_file_session(test_connect.py)', '441': 'Session(session.py)'}, 'execution_paths': {1063: 1}}, {'key': 1000081, 'parent': 100047, 'tfidf_word': 'kn load session test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_load_connection_file_session_with_kn close close ports localhost close close close ', 'lda_word': ' file,connection,kn,load,write,', 'lda_method': ' write_connection_file,test_load_connection_file_session_with_kn,port,close,localhost,', 'lsi_word': ' file,connection,load,test,write,', 'lsi_method': ' test_load_connection_file_session_with_kn,write_connection_file,close,port,localhost,', 'spm_method': '  &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_load_connection_file_session_with_kn(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1069: 1, 1070: 1, 1071: 1, 1072: 1, 1073: 1, 1074: 1, 1075: 1}}, {'key': 1000185, 'parent': 100078, 'tfidf_word': 'connection file kn load test session ', 'tfidf_method': 'Session test_load_connection_file_session_with_kn ', 'lda_word': ' session,connection,file,load,test,', 'lda_method': ' test_load_connection_file_session_with_kn,session,', 'lsi_word': ' session,connection,load,test,kn,', 'lsi_method': ' test_load_connection_file_session_with_kn,session,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'565': 'test_load_connection_file_session_with_kn(test_connect.py)', '441': 'Session(session.py)'}, 'execution_paths': {1082: 1}}, {'key': 1000080, 'parent': 100046, 'tfidf_word': 'app load test write close connection file localhost port ', 'tfidf_method': 'write_connection_file test_app_load_connection_file close close ports localhost close close close ', 'lda_word': ' file,connection,load,test,write,', 'lda_method': ' write_connection_file,test_app_load_connection_file,localhost,close,port,', 'lsi_word': ' file,connection,app,test,write,', 'lsi_method': ' write_connection_file,test_app_load_connection_file,close,port,localhost,', 'spm_method': '  &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; ports(connect.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; localhost(localinterfaces.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(threaded.py) . <br> &#187; test_app_load_connection_file(test_connect.py) &rarr; write_connection_file(connect.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['test_connect.py', 'connect.py', 'threaded.py', 'channels.py', 'localinterfaces.py'], 'execution_path_count': 7, 'function_id_to_name_file': {'559': 'test_app_load_connection_file(test_connect.py)', '191': 'write_connection_file(connect.py)', '211': 'ports(connect.py)', '718': 'close(threaded.py)', '132': 'close(channels.py)', '730': 'close(threaded.py)', '83': 'close(channels.py)', '315': 'localhost(localinterfaces.py)', '109': 'close(channels.py)'}, 'execution_paths': {1088: 1, 1089: 1, 1090: 1, 1091: 1, 1092: 1, 1093: 1, 1094: 1}}, {'key': 1000192, 'parent': 100078, 'tfidf_word': 'test connection file find ', 'tfidf_method': 'find_connection_file test_find_connection_file ', 'lda_word': ' connection,file,find,test,', 'lda_method': ' find_connection_file,test_find_connection_file,', 'lsi_word': ' file,find,connection,test,', 'lsi_method': ' test_find_connection_file,find_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'560': 'test_find_connection_file(test_connect.py)', '189': 'find_connection_file(connect.py)'}, 'execution_paths': {1103: 1}}, {'key': 1000182, 'parent': 100078, 'tfidf_word': 'local test connection file find ', 'tfidf_method': 'find_connection_file test_find_connection_file_local ', 'lda_word': ' connection,file,find,test,local,', 'lda_method': ' test_find_connection_file_local,find_connection_file,', 'lsi_word': ' connection,file,find,local,test,', 'lsi_method': ' test_find_connection_file_local,find_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'562': 'test_find_connection_file_local(test_connect.py)', '189': 'find_connection_file(connect.py)'}, 'execution_paths': {1104: 1}}, {'key': 1000174, 'parent': 100078, 'tfidf_word': 'relative test connection file find ', 'tfidf_method': 'find_connection_file test_find_connection_file_relative ', 'lda_word': ' file,find,connection,test,relative,', 'lda_method': ' test_find_connection_file_relative,find_connection_file,', 'lsi_word': ' connection,file,find,relative,test,', 'lsi_method': ' test_find_connection_file_relative,find_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'563': 'test_find_connection_file_relative(test_connect.py)', '189': 'find_connection_file(connect.py)'}, 'execution_paths': {1105: 1}}, {'key': 1000175, 'parent': 100078, 'tfidf_word': 'abspath test connection file find ', 'tfidf_method': 'find_connection_file test_find_connection_file_abspath ', 'lda_word': ' file,connection,find,abspath,test,', 'lda_method': ' find_connection_file,test_find_connection_file_abspath,', 'lsi_word': ' connection,file,find,test,abspath,', 'lsi_method': ' test_find_connection_file_abspath,find_connection_file,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'561': 'test_find_connection_file_abspath(test_connect.py)', '189': 'find_connection_file(connect.py)'}, 'execution_paths': {1106: 1}}, {'key': 1000131, 'parent': 100078, 'tfidf_word': 'configurable connection dummy file port random test cleanup record mixin ', 'tfidf_method': 'ConnectionFileMixin DummyConfigurable test_mixin_cleanup_random_ports test_mixin_record_random_ports ', 'lda_word': ' mixin,port,dummy,test,connection,', 'lda_method': ' connectionfilemixin,dummyconfigurable,test_mixin_record_random_ports,test_mixin_cleanup_random_ports,', 'lsi_word': ' mixin,configurable,dummy,connection,test,', 'lsi_method': ' dummyconfigurable,connectionfilemixin,test_mixin_record_random_ports,test_mixin_cleanup_random_ports,', 'spm_method': '  &#187; test_mixin_cleanup_random_ports(test_connect.py) &rarr; DummyConfigurable(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br> &#187; test_mixin_record_random_ports(test_connect.py) &rarr; DummyConfigurable(test_connect.py) &rarr; ConnectionFileMixin(connect.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_connect.py', 'connect.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'568': 'test_mixin_record_random_ports(test_connect.py)', '557': 'DummyConfigurable(test_connect.py)', '188': 'ConnectionFileMixin(connect.py)', '567': 'test_mixin_cleanup_random_ports(test_connect.py)'}, 'execution_paths': {1107: 1, 1109: 1}}, {'key': 1000176, 'parent': 100078, 'tfidf_word': 'check fetch secure test user win32 write permission ', 'tfidf_method': 'test_secure_write check_user_only_permissions fetch_win32_permissions ', 'lda_word': ' permission,check,secure,fetch,user,', 'lda_method': ' test_secure_write,fetch_win32_permissions,check_user_only_permissions,', 'lsi_word': ' permission,write,user,win32,secure,', 'lsi_method': ' check_user_only_permissions,fetch_win32_permissions,test_secure_write,', 'spm_method': '  &#187; test_secure_write(test_connect.py) &rarr; check_user_only_permissions(test_connect.py) &rarr; fetch_win32_permissions(test_connect.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_connect.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'569': 'test_secure_write(test_connect.py)', '573': 'check_user_only_permissions(test_connect.py)', '574': 'fetch_win32_permissions(test_connect.py)'}, 'execution_paths': {1112: 1}}, {'key': 1000048, 'parent': 100029, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ip test_load_ips _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,list,test,populate,', 'lda_method': ' populate_from_list,test_load_ips,load_ips_ip,load_ips,noipaddresses,', 'lsi_word': ' ip,load,test,list,populate,', 'lsi_method': ' load_ips,load_ips_ip,test_load_ips,populate_from_list,public_ips,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ip(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; NoIPAddresses(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '305': '_load_ips_ip(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)'}, 'execution_paths': {1113: 1, 1114: 1, 1115: 1, 1116: 1, 1117: 1}}, {'key': 1000047, 'parent': 100029, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ifconfig test_load_ips _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,ifconfig,test,populate,', 'lda_method': ' test_load_ips,populate_from_list,load_ips,load_ips_ifconfig,noipaddresses,', 'lsi_word': ' ip,load,ifconfig,test,list,', 'lsi_method': ' load_ips_ifconfig,test_load_ips,load_ips,populate_from_list,public_ips,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ifconfig(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; NoIPAddresses(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '304': '_load_ips_ifconfig(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)', '300': '_get_output(localinterfaces.py)'}, 'execution_paths': {1118: 1, 1119: 1, 1120: 1, 1121: 1, 1122: 1}}, {'key': 1000046, 'parent': 100029, 'tfidf_word': 'addresses get local no output public stable uniq load ip ', 'tfidf_method': '_load_ips _load_ips_ipconfig test_load_ips _populate_from_list NoIPAddresses _get_output _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,test,ipconfig,list,', 'lda_method': ' load_ips_ipconfig,load_ips,populate_from_list,test_load_ips,public_ips,', 'lsi_word': ' ip,load,ipconfig,test,list,', 'lsi_method': ' test_load_ips,load_ips_ipconfig,load_ips,populate_from_list,public_ips,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) . <br> &#187; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_ipconfig(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; NoIPAddresses(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _populate_from_list(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '306': '_load_ips_ipconfig(localinterfaces.py)', '300': '_get_output(localinterfaces.py)', '309': '_populate_from_list(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}, 'execution_paths': {1123: 1, 1124: 1, 1125: 1, 1126: 1, 1127: 1}}, {'key': 1000050, 'parent': 100029, 'tfidf_word': 'netifaces addresses dumb local no public stable uniq load ip ', 'tfidf_method': '_load_ips test_load_ips _load_ips_netifaces NoIPAddresses _load_ips_dumb _uniq_stable local_ips public_ips ', 'lda_word': ' ip,load,test,netifaces,address,', 'lda_method': ' test_load_ips,load_ips_netifaces,load_ips,public_ips,load_ips_dumb,', 'lsi_word': ' ip,load,test,netifaces,local,', 'lsi_method': ' test_load_ips,load_ips,load_ips_netifaces,uniq_stable,local_ips,', 'spm_method': '  &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; _uniq_stable(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; local_ips(localinterfaces.py) . <br> &#187; test_load_ips(test_localinterfaces.py) &rarr; _load_ips_netifaces(localinterfaces.py) &rarr; public_ips(localinterfaces.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_localinterfaces.py', 'localinterfaces.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'634': 'test_load_ips(test_localinterfaces.py)', '301': '_load_ips(localinterfaces.py)', '302': '_load_ips_dumb(localinterfaces.py)', '307': '_load_ips_netifaces(localinterfaces.py)', '314': 'local_ips(localinterfaces.py)', '316': 'public_ips(localinterfaces.py)', '311': '_uniq_stable(localinterfaces.py)', '299': 'NoIPAddresses(localinterfaces.py)'}, 'execution_paths': {1128: 1, 1129: 1, 1130: 1, 1131: 1, 1132: 1}}, {'key': 1000089, 'parent': 100052, 'tfidf_word': 'km test kernel tcp cinfo id lifecycle sequence shutdown start ', 'tfidf_method': '__init__ _get_tcp_km test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,init,km,get,test,', 'lda_method': ' get_tcp_km,init,test_tcp_lifecycle_with_kernel_id,test_start_sequence_tcp_kernels,test_shutdown_all,', 'lsi_word': ' tcp,get,test,km,init,', 'lsi_method': ' init,get_tcp_km,test_tcp_cinfo,test_start_sequence_tcp_kernels,test_shutdown_all,', 'spm_method': '  &#187; test_shutdown_all(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_sequence_tcp_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_tcp_cinfo(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1134: 1, 1138: 1, 1142: 1, 1155: 1}}, {'key': 1000034, 'parent': 100024, 'tfidf_word': 'process thread loop lifecycle tcp sequence shutdown id cinfo kernel ', 'tfidf_method': 'MultiKernelManager _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,tcp,spec,manager,test,', 'lda_method': ' get_tcp_km,kernelspec,multikernelmanager,kernelspecmanager,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' kernel,tcp,manager,spec,test,', 'lsi_method': ' kernelspec,multikernelmanager,kernelspecmanager,get_tcp_km,test_tcp_lifecycle,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1135: 1, 1139: 1, 1143: 1, 1156: 1, 1164: 1, 1168: 1, 1172: 1, 1176: 1}}, {'key': 1000029, 'parent': 100021, 'tfidf_word': 'loop thread process lifecycle tcp kernel id sequence shutdown cinfo ', 'tfidf_method': 'wrapped _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_shutdown_all test_start_sequence_tcp_kernels test_tcp_cinfo test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' tcp,kernel,test,lifecycle,method,', 'lda_method': ' get_tcp_km,kernel_method,wrap,multikernelmanager,test_tcp_lifecycle,', 'lsi_word': ' kernel,tcp,test,lifecycle,multi,', 'lsi_method': ' multikernelmanager,get_tcp_km,wrap,kernel_method,test_tcp_lifecycle,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 8, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '661': 'test_shutdown_all(test_multikernelmanager.py)', '666': 'test_tcp_cinfo(test_multikernelmanager.py)', '665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1136: 1, 1140: 1, 1144: 1, 1157: 1, 1165: 1, 1169: 1, 1173: 1, 1177: 1}}, {'key': 1000177, 'parent': 100078, 'tfidf_word': 'id kernel run tcp test lifecycle ', 'tfidf_method': '_run_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,test,run,kernel,tcp,', 'lda_method': ' run_lifecycle,test_tcp_lifecycle_with_kernel_id,', 'lsi_word': ' lifecycle,kernel,run,tcp,test,', 'lsi_method': ' test_tcp_lifecycle_with_kernel_id,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'668': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1137: 1}}, {'key': 1000178, 'parent': 100078, 'tfidf_word': 'run tcp test cinfo ', 'tfidf_method': '_run_cinfo test_tcp_cinfo ', 'lda_word': ' cinfo,tcp,run,test,', 'lda_method': ' run_cinfo,test_tcp_cinfo,', 'lsi_word': ' cinfo,tcp,test,run,', 'lsi_method': ' test_tcp_cinfo,run_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)'}, 'execution_paths': {1141: 1}}, {'key': 1000179, 'parent': 100078, 'tfidf_word': 'cinfo localhost tcp test ', 'tfidf_method': 'localhost test_tcp_cinfo ', 'lda_word': ' test,cinfo,tcp,localhost,', 'lda_method': ' test_tcp_cinfo,localhost,', 'lsi_word': ' localhost,tcp,test,cinfo,', 'lsi_method': ' test_tcp_cinfo,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'666': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)'}, 'execution_paths': {1145: 1}}, {'key': 1000180, 'parent': 100078, 'tfidf_word': 'ipc run test lifecycle ', 'tfidf_method': '_run_lifecycle test_ipc_lifecycle ', 'lda_word': ' lifecycle,test,ipc,run,', 'lda_method': ' test_ipc_lifecycle,run_lifecycle,', 'lsi_word': ' lifecycle,run,test,ipc,', 'lsi_method': ' test_ipc_lifecycle,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1146: 1}}, {'key': 1000121, 'parent': 100075, 'tfidf_word': 'get init km test ipc cinfo kernel lifecycle sequence start ', 'tfidf_method': '__init__ _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' ipc,test,init,get,km,', 'lda_method': ' get_ipc_km,init,test_ipc_cinfo,test_ipc_lifecycle,test_start_sequence_ipc_kernels,', 'lsi_word': ' ipc,get,init,test,km,', 'lsi_method': ' init,get_ipc_km,test_start_sequence_ipc_kernels,test_ipc_lifecycle,test_ipc_cinfo,', 'spm_method': '  &#187; test_ipc_cinfo(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_ipc_lifecycle(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1147: 1, 1151: 1, 1159: 1}}, {'key': 1000033, 'parent': 100024, 'tfidf_word': 'multi test ipc manager spec cinfo lifecycle sequence start kernel ', 'tfidf_method': 'KernelSpec KernelSpecManager MultiKernelManager _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' kernel,manager,ipc,spec,test,', 'lda_method': ' get_ipc_km,multikernelmanager,kernelspec,kernelspecmanager,test_ipc_cinfo,', 'lsi_word': ' kernel,ipc,spec,manager,multi,', 'lsi_method': ' get_ipc_km,kernelspec,multikernelmanager,kernelspecmanager,test_start_sequence_ipc_kernels,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1148: 1, 1152: 1, 1160: 1}}, {'key': 1000028, 'parent': 100021, 'tfidf_word': 'method multi test wrap ipc cinfo lifecycle sequence start kernel ', 'tfidf_method': 'MultiKernelManager kernel_method wrapped _get_ipc_km test_ipc_cinfo test_ipc_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' kernel,ipc,method,get,km,', 'lda_method': ' get_ipc_km,kernel_method,multikernelmanager,wrap,test_start_sequence_ipc_kernels,', 'lsi_word': ' kernel,ipc,get,manager,multi,', 'lsi_method': ' wrap,get_ipc_km,kernel_method,multikernelmanager,test_ipc_lifecycle,', 'spm_method': '  &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_ipc_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; test_start_sequence_ipc_kernels(test_multikernelmanager.py) &rarr; _get_ipc_km(test_multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 3, 'function_id_to_name_file': {'660': 'test_ipc_lifecycle(test_multikernelmanager.py)', '654': '_get_ipc_km(test_multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '659': 'test_ipc_cinfo(test_multikernelmanager.py)', '664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1149: 1, 1153: 1, 1161: 1}}, {'key': 1000181, 'parent': 100078, 'tfidf_word': 'ipc run test cinfo ', 'tfidf_method': '_run_cinfo test_ipc_cinfo ', 'lda_word': ' cinfo,run,test,ipc,', 'lda_method': ' test_ipc_cinfo,run_cinfo,', 'lsi_word': ' cinfo,ipc,run,test,', 'lsi_method': ' test_ipc_cinfo,run_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'659': 'test_ipc_cinfo(test_multikernelmanager.py)', '656': '_run_cinfo(test_multikernelmanager.py)'}, 'execution_paths': {1150: 1}}, {'key': 1000172, 'parent': 100078, 'tfidf_word': 'kernel lifecycle run sequence start tcp test ', 'tfidf_method': '_run_lifecycle test_start_sequence_tcp_kernels ', 'lda_word': ' run,test,sequence,tcp,start,', 'lda_method': ' run_lifecycle,test_start_sequence_tcp_kernels,', 'lsi_word': ' test,start,tcp,kernel,run,', 'lsi_method': ' test_start_sequence_tcp_kernels,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'665': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1154: 1}}, {'key': 1000173, 'parent': 100078, 'tfidf_word': 'ipc kernel lifecycle run sequence start test ', 'tfidf_method': '_run_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' lifecycle,kernel,ipc,test,start,', 'lda_method': ' test_start_sequence_ipc_kernels,run_lifecycle,', 'lsi_word': ' test,sequence,start,ipc,lifecycle,', 'lsi_method': ' test_start_sequence_ipc_kernels,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'664': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1158: 1}}, {'key': 1000117, 'parent': 100071, 'tfidf_word': 'kernel parallel run start loop process thread tcp test lifecycle ', 'tfidf_method': '_run_lifecycle test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' lifecycle,test,tcp,kernel,start,', 'lda_method': ' run_lifecycle,test_tcp_lifecycle,test_start_parallel_thread_kernels,tcp_lifecycle_with_loop,test_start_parallel_process_kernels,', 'lsi_word': ' lifecycle,test,tcp,kernel,start,', 'lsi_method': ' test_tcp_lifecycle,run_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '657': '_run_lifecycle(test_multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1162: 1, 1166: 1, 1170: 1, 1174: 1}}, {'key': 1000090, 'parent': 100052, 'tfidf_word': 'kernel km parallel start loop process thread lifecycle test tcp ', 'tfidf_method': '__init__ _get_tcp_km test_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels ', 'lda_word': ' lifecycle,tcp,km,test,parallel,', 'lda_method': ' get_tcp_km,test_tcp_lifecycle,init,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'lsi_word': ' tcp,test,lifecycle,init,kernel,', 'lsi_method': ' get_tcp_km,init,test_tcp_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,', 'spm_method': '  &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; _get_tcp_km(test_multikernelmanager.py) &rarr; __init__(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'663': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '667': 'test_tcp_lifecycle(test_multikernelmanager.py)', '655': '_get_tcp_km(test_multikernelmanager.py)', '392': '__init__(multikernelmanager.py)', '658': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '662': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1163: 1, 1167: 1, 1171: 1, 1175: 1}}, {'key': 1000032, 'parent': 100023, 'tfidf_word': 'sequence cinfo thread manager lifecycle shutdown id tcp ipc kernel ', 'tfidf_method': 'test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_cinfo test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,manager,tcp,spec,multi,', 'lda_method': ' get_tcp_km,kernelspec,asyncmultikernelmanager,multikernelmanager,kernelspecmanager,', 'lsi_word': ' kernel,manager,spec,multi,tcp,', 'lsi_method': ' multikernelmanager,kernelspecmanager,asyncmultikernelmanager,kernelspec,get_tcp_km,', 'spm_method': '  &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpec(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; KernelSpecManager(kernelspec.py) &rarr; KernelSpec(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py', 'kernelspec.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '254': 'KernelSpecManager(kernelspec.py)', '253': 'KernelSpec(kernelspec.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1178: 1, 1181: 1, 1184: 1, 1186: 1, 1191: 1, 1193: 1, 1196: 1, 1200: 1, 1202: 1, 1205: 1, 1208: 1, 1211: 1}}, {'key': 1000027, 'parent': 100020, 'tfidf_word': 'process sequence cinfo thread lifecycle id shutdown tcp kernel ipc ', 'tfidf_method': 'test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_cinfo test_start_sequence_tcp_kernels test_start_sequence_ipc_kernels test_ipc_cinfo test_ipc_lifecycle test_tcp_lifecycle test_shutdown_all test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' kernel,multi,manager,ipc,get,', 'lda_method': ' kernel_method,multikernelmanager,asyncmultikernelmanager,wrap,get_tcp_km,', 'lsi_word': ' kernel,manager,multi,tcp,lifecycle,', 'lsi_method': ' kernel_method,wrap,asyncmultikernelmanager,multikernelmanager,get_tcp_km,', 'spm_method': '  &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; AsyncMultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; MultiKernelManager(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br> &#187; _get_tcp_km(test_multikernelmanager.py) &rarr; kernel_method(multikernelmanager.py) &rarr; wrapped(multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'multikernelmanager.py'], 'execution_path_count': 12, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '639': '_get_tcp_km(test_multikernelmanager.py)', '379': 'AsyncMultiKernelManager(multikernelmanager.py)', '381': 'MultiKernelManager(multikernelmanager.py)', '382': 'kernel_method(multikernelmanager.py)', '425': 'wrapped(multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '646': 'test_shutdown_all(test_multikernelmanager.py)', '651': 'test_tcp_cinfo(test_multikernelmanager.py)', '645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '638': '_get_ipc_km(test_multikernelmanager.py)', '644': 'test_ipc_cinfo(test_multikernelmanager.py)', '650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1179: 1, 1182: 1, 1185: 1, 1187: 1, 1192: 1, 1194: 1, 1197: 1, 1201: 1, 1203: 1, 1206: 1, 1209: 1, 1212: 1}}, {'key': 1000096, 'parent': 100058, 'tfidf_word': 'test kernel parallel start tcp loop process thread id lifecycle ', 'tfidf_method': '_run_lifecycle raw_tcp_lifecycle tcp_lifecycle_with_loop test_start_parallel_process_kernels test_start_parallel_thread_kernels test_tcp_lifecycle test_tcp_lifecycle_with_kernel_id ', 'lda_word': ' lifecycle,tcp,run,kernel,start,', 'lda_method': ' test_start_parallel_process_kernels,run_lifecycle,tcp_lifecycle_with_loop,raw_tcp_lifecycle,test_start_parallel_thread_kernels,', 'lsi_word': ' lifecycle,tcp,raw,run,test,', 'lsi_method': ' raw_tcp_lifecycle,run_lifecycle,tcp_lifecycle_with_loop,test_start_parallel_thread_kernels,test_start_parallel_process_kernels,', 'spm_method': '  &#187; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_multikernelmanager.py) &rarr; tcp_lifecycle_with_loop(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_tcp_lifecycle(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br> &#187; test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py) &rarr; raw_tcp_lifecycle(test_multikernelmanager.py) &rarr; _run_lifecycle(test_multikernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'652': 'test_tcp_lifecycle(test_multikernelmanager.py)', '642': 'raw_tcp_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)', '653': 'test_tcp_lifecycle_with_kernel_id(test_multikernelmanager.py)', '648': 'test_start_parallel_thread_kernels(test_multikernelmanager.py)', '643': 'tcp_lifecycle_with_loop(test_multikernelmanager.py)', '647': 'test_start_parallel_process_kernels(test_multikernelmanager.py)'}, 'execution_paths': {1180: 1, 1183: 1, 1204: 1, 1207: 1, 1210: 1, 1213: 1}}, {'key': 1000169, 'parent': 100078, 'tfidf_word': 'run tcp test cinfo ', 'tfidf_method': '_run_cinfo test_tcp_cinfo ', 'lda_word': ' cinfo,run,test,tcp,', 'lda_method': ' test_tcp_cinfo,run_cinfo,', 'lsi_word': ' cinfo,run,tcp,test,', 'lsi_method': ' test_tcp_cinfo,run_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'651': 'test_tcp_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)'}, 'execution_paths': {1188: 1}}, {'key': 1000159, 'parent': 100078, 'tfidf_word': 'cinfo localhost tcp test ', 'tfidf_method': 'localhost test_tcp_cinfo ', 'lda_word': ' cinfo,tcp,localhost,test,', 'lda_method': ' localhost,test_tcp_cinfo,', 'lsi_word': ' localhost,tcp,test,cinfo,', 'lsi_method': ' test_tcp_cinfo,localhost,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_multikernelmanager.py', 'localinterfaces.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'651': 'test_tcp_cinfo(test_multikernelmanager.py)', '315': 'localhost(localinterfaces.py)'}, 'execution_paths': {1189: 1}}, {'key': 1000160, 'parent': 100078, 'tfidf_word': 'ipc run test lifecycle ', 'tfidf_method': '_run_lifecycle test_ipc_lifecycle ', 'lda_word': ' lifecycle,ipc,test,run,', 'lda_method': ' test_ipc_lifecycle,run_lifecycle,', 'lsi_word': ' lifecycle,run,test,ipc,', 'lsi_method': ' test_ipc_lifecycle,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'645': 'test_ipc_lifecycle(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1190: 1}}, {'key': 1000161, 'parent': 100078, 'tfidf_word': 'ipc run test cinfo ', 'tfidf_method': '_run_cinfo test_ipc_cinfo ', 'lda_word': ' cinfo,ipc,test,run,', 'lda_method': ' test_ipc_cinfo,run_cinfo,', 'lsi_word': ' cinfo,run,test,ipc,', 'lsi_method': ' test_ipc_cinfo,run_cinfo,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'644': 'test_ipc_cinfo(test_multikernelmanager.py)', '640': '_run_cinfo(test_multikernelmanager.py)'}, 'execution_paths': {1195: 1}}, {'key': 1000162, 'parent': 100078, 'tfidf_word': 'kernel lifecycle run sequence start tcp test ', 'tfidf_method': '_run_lifecycle test_start_sequence_tcp_kernels ', 'lda_word': ' start,test,run,sequence,lifecycle,', 'lda_method': ' test_start_sequence_tcp_kernels,run_lifecycle,', 'lsi_word': ' test,start,tcp,kernel,run,', 'lsi_method': ' test_start_sequence_tcp_kernels,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'650': 'test_start_sequence_tcp_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1198: 1}}, {'key': 1000163, 'parent': 100078, 'tfidf_word': 'ipc kernel lifecycle run sequence start test ', 'tfidf_method': '_run_lifecycle test_start_sequence_ipc_kernels ', 'lda_word': ' sequence,run,ipc,lifecycle,start,', 'lda_method': ' test_start_sequence_ipc_kernels,run_lifecycle,', 'lsi_word': ' test,sequence,start,ipc,lifecycle,', 'lsi_method': ' test_start_sequence_ipc_kernels,run_lifecycle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_multikernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'649': 'test_start_sequence_ipc_kernels(test_multikernelmanager.py)', '641': '_run_lifecycle(test_multikernelmanager.py)'}, 'execution_paths': {1199: 1}}, {'key': 1000164, 'parent': 100078, 'tfidf_word': 'env set test up ', 'tfidf_method': 'setUp test_env ', 'lda_word': ' set,env,test,', 'lda_method': ' setup,test_env,', 'lsi_word': ' env,set,test,', 'lsi_method': ' test_env,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '705': 'test_env(utils.py)'}, 'execution_paths': {1215: 1}}, {'key': 1000165, 'parent': 100078, 'tfidf_word': 'set start up ', 'tfidf_method': 'setUp start ', 'lda_word': ' start,set,', 'lda_method': ' start,setup,', 'lsi_word': ' start,set,', 'lsi_method': ' start,setup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '711': 'start(utils.py)'}, 'execution_paths': {1216: 1}}, {'key': 1000166, 'parent': 100078, 'tfidf_word': 'install kernel sample set up ', 'tfidf_method': '_install_sample_kernel setUp ', 'lda_word': ' sample,kernel,install,set,', 'lda_method': ' install_sample_kernel,setup,', 'lsi_word': ' kernel,sample,set,install,', 'lsi_method': ' setup,install_sample_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'618': 'setUp(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)'}, 'execution_paths': {1217: 1}}, {'key': 1000167, 'parent': 100078, 'tfidf_word': 'down stop tear ', 'tfidf_method': 'tearDown stop ', 'lda_word': ' stop,tear,', 'lda_method': ' stop,teardown,', 'lsi_word': ' tear,stop,', 'lsi_method': ' teardown,stop,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'619': 'tearDown(test_kernelspec.py)', '712': 'stop(utils.py)'}, 'execution_paths': {1218: 1}}, {'key': 1000157, 'parent': 100078, 'tfidf_word': 'find install sample specs test kernel ', 'tfidf_method': '_install_sample_kernel test_find_kernel_specs ', 'lda_word': ' kernel,sample,specs,test,install,', 'lda_method': ' test_find_kernel_specs,install_sample_kernel,', 'lsi_word': ' kernel,find,install,sample,specs,', 'lsi_method': ' test_find_kernel_specs,install_sample_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'622': 'test_find_kernel_specs(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)'}, 'execution_paths': {1219: 1}}, {'key': 1000158, 'parent': 100078, 'tfidf_word': 'get install sample spec test kernel ', 'tfidf_method': '_install_sample_kernel test_get_kernel_spec ', 'lda_word': ' spec,kernel,get,install,test,', 'lda_method': ' install_sample_kernel,test_get_kernel_spec,', 'lsi_word': ' kernel,get,install,sample,spec,', 'lsi_method': ' test_get_kernel_spec,install_sample_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)'}, 'execution_paths': {1223: 1}}, {'key': 1000077, 'parent': 100044, 'tfidf_word': 'test name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec test_get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,test,name,', 'lda_method': ' test_get_kernel_spec,get_kernel_spec,get_kernel_spec_by_name,nosuchkernel,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,get,test,name,', 'lsi_method': ' get_kernel_spec,test_get_kernel_spec,init,nosuchkernel,is_valid_kernel_name,', 'spm_method': '  &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'623': 'test_get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1224: 1, 1225: 1, 1226: 1, 1228: 1}}, {'key': 1000070, 'parent': 100039, 'tfidf_word': 'kernel name spec test find subclass get specs ', 'tfidf_method': '_get_kernel_spec_by_name get_all_specs test_find_all_specs test_subclass ', 'lda_word': ' get,kernel,specs,name,test,', 'lda_method': ' get_all_specs,get_kernel_spec_by_name,test_find_all_specs,test_subclass,', 'lsi_word': ' get,specs,spec,test,name,', 'lsi_method': ' get_all_specs,get_kernel_spec_by_name,test_find_all_specs,test_subclass,', 'spm_method': '  &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {1229: 1, 1256: 1}}, {'key': 1000071, 'parent': 100039, 'tfidf_word': 'test name kernel spec specs init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_find_all_specs NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' get,specs,kernel,spec,test,', 'lda_method': ' test_find_all_specs,get_kernel_spec,get_all_specs,get_kernel_spec_by_name,nosuchkernel,', 'lsi_word': ' get,specs,kernel,spec,test,', 'lsi_method': ' get_kernel_spec,test_find_all_specs,get_all_specs,get_kernel_spec_by_name,init,', 'spm_method': '  &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1230: 1, 1231: 1, 1232: 1, 1234: 1}}, {'key': 1000059, 'parent': 100034, 'tfidf_word': 'get list test dir name subclass valid find kernel specs ', 'tfidf_method': '_list_kernels_in find_kernel_specs get_all_specs _is_kernel_dir _is_valid_kernel_name test_find_all_specs test_subclass ', 'lda_word': ' kernel,specs,find,list,test,', 'lda_method': ' get_all_specs,find_kernel_specs,list_kernels_in,test_find_all_specs,is_kernel_dir,', 'lsi_word': ' kernel,specs,find,list,test,', 'lsi_method': ' get_all_specs,find_kernel_specs,list_kernels_in,test_subclass,is_valid_kernel_name,', 'spm_method': '  &#187; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_find_all_specs(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; find_kernel_specs(kernelspec.py) &rarr; _list_kernels_in(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '272': 'find_kernel_specs(kernelspec.py)', '258': '_list_kernels_in(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '256': '_is_kernel_dir(kernelspec.py)', '629': 'test_subclass(test_kernelspec.py)'}, 'execution_paths': {1235: 1, 1236: 1, 1262: 1, 1263: 1}}, {'key': 1000168, 'parent': 100078, 'tfidf_word': 'find install kernel sample specs test ', 'tfidf_method': '_install_sample_kernel test_find_all_specs ', 'lda_word': ' test,sample,install,find,kernel,', 'lda_method': ' test_find_all_specs,install_sample_kernel,', 'lsi_word': ' kernel,specs,find,test,sample,', 'lsi_method': ' test_find_all_specs,install_sample_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'621': 'test_find_all_specs(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)'}, 'execution_paths': {1237: 1}}, {'key': 1000170, 'parent': 100078, 'tfidf_word': 'install priority sample spec test kernel ', 'tfidf_method': '_install_sample_kernel test_kernel_spec_priority ', 'lda_word': ' kernel,sample,test,install,spec,', 'lda_method': ' install_sample_kernel,test_kernel_spec_priority,', 'lsi_word': ' kernel,install,priority,sample,spec,', 'lsi_method': ' test_kernel_spec_priority,install_sample_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'626': 'test_kernel_spec_priority(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)'}, 'execution_paths': {1240: 1}}, {'key': 1000106, 'parent': 100065, 'tfidf_word': 'test destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec test_install_kernel_spec _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' spec,kernel,install,dir,name,', 'lda_method': ' install_kernel_spec,test_install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'lsi_word': ' kernel,install,spec,test,name,', 'lsi_method': ' install_kernel_spec,test_install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'spm_method': '  &#187; test_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'624': 'test_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}, 'execution_paths': {1241: 1, 1242: 1}}, {'key': 1000104, 'parent': 100065, 'tfidf_word': 'prefix test destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec test_install_kernel_spec_prefix _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' spec,install,kernel,test,prefix,', 'lda_method': ' install_kernel_spec,test_install_kernel_spec_prefix,is_valid_kernel_name,get_destination_dir,', 'lsi_word': ' kernel,install,spec,prefix,test,', 'lsi_method': ' install_kernel_spec,test_install_kernel_spec_prefix,is_valid_kernel_name,get_destination_dir,', 'spm_method': '  &#187; test_install_kernel_spec_prefix(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_install_kernel_spec_prefix(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'625': 'test_install_kernel_spec_prefix(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}, 'execution_paths': {1245: 1, 1246: 1}}, {'key': 1000103, 'parent': 100065, 'tfidf_word': 'cant test destination dir get name valid install spec kernel ', 'tfidf_method': 'install_kernel_spec test_cant_install_kernel_spec _is_valid_kernel_name _get_destination_dir ', 'lda_word': ' spec,kernel,install,nt,ca,', 'lda_method': ' test_cant_install_kernel_spec,install_kernel_spec,get_destination_dir,is_valid_kernel_name,', 'lsi_word': ' kernel,spec,install,nt,test,', 'lsi_method': ' install_kernel_spec,test_cant_install_kernel_spec,is_valid_kernel_name,get_destination_dir,', 'spm_method': '  &#187; test_cant_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_cant_install_kernel_spec(test_kernelspec.py) &rarr; install_kernel_spec(kernelspec.py) &rarr; _get_destination_dir(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'620': 'test_cant_install_kernel_spec(test_kernelspec.py)', '275': 'install_kernel_spec(kernelspec.py)', '268': '_get_destination_dir(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}, 'execution_paths': {1249: 1, 1250: 1}}, {'key': 1000171, 'parent': 100078, 'tfidf_word': 'install remove sample spec test kernel ', 'tfidf_method': '_install_sample_kernel test_remove_kernel_spec ', 'lda_word': ' kernel,remove,sample,test,spec,', 'lda_method': ' install_sample_kernel,test_remove_kernel_spec,', 'lsi_word': ' kernel,install,remove,sample,spec,', 'lsi_method': ' test_remove_kernel_spec,install_sample_kernel,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'627': 'test_remove_kernel_spec(test_kernelspec.py)', '617': '_install_sample_kernel(test_kernelspec.py)'}, 'execution_paths': {1251: 1}}, {'key': 1000155, 'parent': 100078, 'tfidf_word': 'test valid validate kernel name ', 'tfidf_method': '_is_valid_kernel_name test_validate_kernel_name ', 'lda_word': ' kernel,test,name,valid,validate,', 'lda_method': ' test_validate_kernel_name,is_valid_kernel_name,', 'lsi_word': ' kernel,name,valid,validate,test,', 'lsi_method': ' test_validate_kernel_name,is_valid_kernel_name,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'630': 'test_validate_kernel_name(test_kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)'}, 'execution_paths': {1254: 1}}, {'key': 1000072, 'parent': 100039, 'tfidf_word': 'subclass test name kernel spec init no such valid get ', 'tfidf_method': 'get_all_specs get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' init,get,subclass,test,specs,', 'lda_method': ' test_subclass,get_kernel_spec,get_all_specs,is_valid_kernel_name,nosuchkernel,', 'lsi_word': ' get,kernel,spec,test,specs,', 'lsi_method': ' get_kernel_spec,test_subclass,get_all_specs,nosuchkernel,init,', 'spm_method': '  &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_all_specs(kernelspec.py) &rarr; __init__(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '273': 'get_all_specs(kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1257: 1, 1258: 1, 1259: 1, 1261: 1}}, {'key': 1000075, 'parent': 100042, 'tfidf_word': 'subclass test name get kernel spec init no such valid ', 'tfidf_method': 'get_kernel_spec test_subclass NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,subclass,test,', 'lda_method': ' test_subclass,get_kernel_spec,get_kernel_spec_by_name,nosuchkernel,init,', 'lsi_word': ' kernel,spec,get,test,subclass,', 'lsi_method': ' get_kernel_spec,test_subclass,get_kernel_spec_by_name,is_valid_kernel_name,nosuchkernel,', 'spm_method': '  &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; test_subclass(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'629': 'test_subclass(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1264: 1, 1265: 1, 1266: 1, 1268: 1}}, {'key': 1000074, 'parent': 100041, 'tfidf_word': 'name init no such valid get kernel spec ', 'tfidf_method': 'get_kernel_spec get_kernel_spec NoSuchKernel _is_valid_kernel_name _get_kernel_spec_by_name __init__ ', 'lda_word': ' kernel,spec,get,name,init,', 'lda_method': ' get_kernel_spec,is_valid_kernel_name,nosuchkernel,init,get_kernel_spec_by_name,', 'lsi_word': ' kernel,get,spec,name,valid,', 'lsi_method': ' get_kernel_spec,nosuchkernel,is_valid_kernel_name,init,get_kernel_spec_by_name,', 'spm_method': '  &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; NoSuchKernel(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _is_valid_kernel_name(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; _get_kernel_spec_by_name(kernelspec.py) . <br> &#187; get_kernel_spec(test_kernelspec.py) &rarr; get_kernel_spec(kernelspec.py) &rarr; __init__(kernelspec.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelspec.py', 'kernelspec.py'], 'execution_path_count': 4, 'function_id_to_name_file': {'633': 'get_kernel_spec(test_kernelspec.py)', '274': 'get_kernel_spec(kernelspec.py)', '269': '_get_kernel_spec_by_name(kernelspec.py)', '257': '_is_valid_kernel_name(kernelspec.py)', '255': 'NoSuchKernel(kernelspec.py)', '278': '__init__(kernelspec.py)'}, 'execution_paths': {1270: 1, 1271: 1, 1272: 1, 1274: 1}}, {'key': 1000019, 'parent': 100013, 'tfidf_word': 'execute poll alive kernel restart callback fire stop ', 'tfidf_method': 'is_alive is_alive stop is_alive restart_kernel is_alive restart_kernel _fire_callbacks is_alive is_alive ', 'lda_word': ' poll,execute,kernel,restart,alive,', 'lda_method': ' do_execute,poll,stop,fire_callbacks,is_alive,', 'lsi_word': ' poll,execute,alive,restart,kernel,', 'lsi_method': ' poll,do_execute,is_alive,restart_kernel,fire_callbacks,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(channels.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(channelsabc.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; stop(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(managerabc.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(managerabc.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(multikernelmanager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(multikernelmanager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; _fire_callbacks(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(threaded.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; is_alive(channels.py) . <br>', 'text_summary': '', 'files_count': 7, 'files': ['signalkernel.py', 'restarter.py', 'channels.py', 'threaded.py', 'multikernelmanager.py', 'managerabc.py', 'channelsabc.py'], 'execution_path_count': 10, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '86': 'is_alive(channels.py)', '112': 'is_alive(channels.py)', '239': 'stop(restarter.py)', '732': 'is_alive(threaded.py)', '419': 'restart_kernel(multikernelmanager.py)', '375': 'restart_kernel(managerabc.py)', '140': 'is_alive(channelsabc.py)', '428': '_fire_callbacks(restarter.py)', '412': 'is_alive(multikernelmanager.py)', '373': 'is_alive(managerabc.py)'}, 'execution_paths': {1276: 1, 1278: 1, 1279: 1, 1280: 1, 1325: 1, 1326: 1, 1327: 1, 1328: 1, 1329: 1, 1330: 1}}, {'key': 1000020, 'parent': 100014, 'tfidf_word': 'get env create control n kernel socket spec connect cleanup ', 'tfidf_method': '_create_connected_socket from_ns local_ips is_local_ip KernelSpec cleanup_random_ports cleanup_connection_file _make_url _get_env_substitutions _connect_control_socket ', 'lda_word': ' kernel,start,poll,execute,restart,', 'lda_method': ' do_execute,post_start_kernel,restart_kernel,start_kernel,poll,', 'lsi_word': ' kernel,start,poll,restart,execute,', 'lsi_method': ' restart_kernel,do_execute,poll,start_kernel,pre_start_kernel,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; start_kernel(manager.py) &rarr; pre_start_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 6, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py', 'localinterfaces.py', 'kernelspec.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '202': 'cleanup_random_ports(connect.py)', '200': 'cleanup_connection_file(connect.py)', '366': 'start_kernel(manager.py)', '359': 'post_start_kernel(manager.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '367': 'start_restarter(manager.py)', '360': 'pre_start_kernel(manager.py)', '314': 'local_ips(localinterfaces.py)', '312': 'is_local_ip(localinterfaces.py)', '341': '_get_env_substitutions(manager.py)', '212': 'write_connection_file(connect.py)', '197': '_record_random_port_names(connect.py)', '353': 'format_kernel_cmd(manager.py)', '369': 'from_ns(manager.py)', '358': 'kernel_spec(manager.py)', '253': 'KernelSpec(kernelspec.py)', '347': '_launch_kernel(manager.py)'}, 'execution_paths': {1281: 1, 1282: 1, 1283: 1, 1284: 1, 1285: 1, 1286: 1, 1287: 1, 1288: 1, 1289: 1, 1290: 1, 1291: 1}}, {'key': 1000017, 'parent': 100012, 'tfidf_word': 'execute launch poll restart finish kill shutdown signal alive kernel ', 'tfidf_method': 'poll _launch_kernel has_kernel restart_kernel shutdown_kernel do_execute _kill_kernel finish_shutdown signal_kernel is_alive ', 'lda_word': ' kernel,shutdown,restart,launch,poll,', 'lda_method': ' launch_kernel,poll,shutdown_kernel,has_kernel,do_execute,', 'lsi_word': ' kernel,shutdown,restart,poll,launch,', 'lsi_method': ' do_execute,shutdown_kernel,has_kernel,launch_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; has_kernel(manager.py) &rarr; _launch_kernel(manager.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['signalkernel.py', 'restarter.py', 'manager.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '346': '_kill_kernel(manager.py)', '354': 'has_kernel(manager.py)', '347': '_launch_kernel(manager.py)', '365': 'signal_kernel(manager.py)', '352': 'finish_shutdown(manager.py)', '357': 'is_alive(manager.py)'}, 'execution_paths': {1292: 1, 1293: 1, 1321: 1, 1322: 1, 1323: 1, 1324: 1}}, {'key': 1000018, 'parent': 100012, 'tfidf_word': 'shutdown file resource connection ipc port kernel restarter stop cleanup ', 'tfidf_method': 'poll restart_kernel shutdown_kernel do_execute cleanup_resources cleanup_connection_file cleanup_ipc_files ports cleanup stop_restarter ', 'lda_word': ' kernel,cleanup,restart,poll,execute,', 'lda_method': ' cleanup_resources,do_execute,poll,shutdown_kernel,restart_kernel,', 'lsi_word': ' cleanup,kernel,poll,restart,shutdown,', 'lsi_method': ' poll,shutdown_kernel,restart_kernel,do_execute,cleanup_resources,', 'spm_method': '  &#187; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; cleanup_resources(manager.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'connect.py'], 'execution_path_count': 5, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '350': 'cleanup_resources(manager.py)', '200': 'cleanup_connection_file(connect.py)', '201': 'cleanup_ipc_files(connect.py)', '211': 'ports(connect.py)', '368': 'stop_restarter(manager.py)', '349': 'cleanup(manager.py)'}, 'execution_paths': {1294: 1, 1296: 1, 1297: 1, 1298: 1, 1300: 1}}, {'key': 1000016, 'parent': 100012, 'tfidf_word': 'adapt thread sign utcnow message control serialize msg socket connect ', 'tfidf_method': 'send send adapt utcnow serialize thread_send Message _connect_control_socket sign send ', 'lda_word': ' kernel,shutdown,socket,connect,request,', 'lda_method': ' poll,restart_kernel,do_execute,shutdown_kernel,request_shutdown,', 'lsi_word': ' kernel,shutdown,poll,request,restart,', 'lsi_method': ' msg,do_execute,restart_kernel,shutdown_kernel,poll,', 'spm_method': '  &#187; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; restart_kernel(manager.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; request_shutdown(manager.py) . <br>', 'text_summary': '', 'files_count': 9, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'connect.py', 'channels.py', 'adapter.py', 'test_adapter.py', 'threaded.py'], 'execution_path_count': 14, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '338': '_connect_control_socket(manager.py)', '192': '_create_connected_socket(connect.py)', '196': '_make_url(connect.py)', '88': 'send(channels.py)', '114': 'send(channels.py)', '480': 'send(session.py)', '482': 'serialize(session.py)', '483': 'sign(session.py)', '440': 'Message(session.py)', '50': 'adapt(adapter.py)', '450': 'utcnow(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '734': 'send(threaded.py)', '738': 'thread_send(threaded.py)'}, 'execution_paths': {1301: 1, 1303: 1, 1304: 1, 1305: 1, 1306: 1, 1307: 1, 1309: 1, 1310: 1, 1311: 1, 1312: 1, 1314: 1, 1316: 1, 1318: 1, 1320: 1}}, {'key': 1000015, 'parent': 100012, 'tfidf_word': 'execute header id poll request restart kernel shutdown send msg ', 'tfidf_method': 'request_shutdown restart_kernel shutdown_kernel msg msg_header msg_id do_execute msg msg send ', 'lda_word': ' msg,shutdown,kernel,execute,restart,', 'lda_method': ' do_execute,msg_header,poll,msg_id,msg,', 'lsi_word': ' msg,kernel,shutdown,execute,restart,', 'lsi_method': ' msg,do_execute,shutdown_kernel,restart_kernel,poll,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; msg_header(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; shutdown_kernel(manager.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; msg(session.py) &rarr; msg_header(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; msg(session.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; msg(session.py) &rarr; msg_id(session.py) . <br> &#187; do_execute(signalkernel.py) &rarr; msg_header(session.py) &rarr; msg_id(session.py) . <br>', 'text_summary': '', 'files_count': 5, 'files': ['signalkernel.py', 'restarter.py', 'manager.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '236': 'poll(restarter.py)', '363': 'restart_kernel(manager.py)', '364': 'shutdown_kernel(manager.py)', '362': 'request_shutdown(manager.py)', '476': 'msg(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '480': 'send(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)'}, 'execution_paths': {1302: 1, 1308: 1, 1313: 1, 1315: 1, 1317: 1, 1319: 1}}, {'key': 1000125, 'parent': 100077, 'tfidf_word': 'execute poll callback fire stop ', 'tfidf_method': 'poll do_execute _fire_callbacks stop ', 'lda_word': ' execute,poll,stop,fire,callback,', 'lda_method': ' poll,fire_callbacks,do_execute,stop,', 'lsi_word': ' execute,poll,callback,fire,stop,', 'lsi_method': ' do_execute,poll,fire_callbacks,stop,', 'spm_method': '  &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; _fire_callbacks(restarter.py) . <br> &#187; do_execute(signalkernel.py) &rarr; poll(restarter.py) &rarr; stop(restarter.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['signalkernel.py', 'restarter.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'510': 'do_execute(signalkernel.py)', '430': 'poll(restarter.py)', '433': 'stop(restarter.py)', '428': '_fire_callbacks(restarter.py)'}, 'execution_paths': {1331: 1, 1332: 1}}, {'key': 1000156, 'parent': 100078, 'tfidf_word': 'app kernel signal test ', 'tfidf_method': 'SignalTestApp SignalTestKernel ', 'lda_word': ' test,kernel,signal,app,', 'lda_method': ' signaltestapp,signaltestkernel,', 'lsi_word': ' signal,test,kernel,app,', 'lsi_method': ' signaltestkernel,signaltestapp,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['signalkernel.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'506': 'SignalTestApp(signalkernel.py)', '507': 'SignalTestKernel(signalkernel.py)'}, 'execution_paths': {1333: 1}}, {'key': 1000149, 'parent': 100078, 'tfidf_word': 'env start ', 'tfidf_method': 'env start ', 'lda_word': ' start,env,', 'lda_method': ' env,start,', 'lsi_word': ' start,env,', 'lsi_method': ' start,env,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'586': 'env(test_kernelmanager.py)', '711': 'start(utils.py)'}, 'execution_paths': {1334: 1}}, {'key': 1000150, 'parent': 100078, 'tfidf_word': 'test env ', 'tfidf_method': 'env test_env ', 'lda_word': ' env,test,', 'lda_method': ' env,test_env,', 'lsi_word': ' env,test,', 'lsi_method': ' test_env,env,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'586': 'env(test_kernelmanager.py)', '705': 'test_env(utils.py)'}, 'execution_paths': {1335: 1}}, {'key': 1000151, 'parent': 100078, 'tfidf_word': 'env stop ', 'tfidf_method': 'env stop ', 'lda_word': ' env,stop,', 'lda_method': ' stop,env,', 'lsi_word': ' stop,env,', 'lsi_method': ' stop,env,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'586': 'env(test_kernelmanager.py)', '712': 'stop(utils.py)'}, 'execution_paths': {1336: 1}}, {'key': 1000152, 'parent': 100078, 'tfidf_word': 'execute kernel signal subprocesses test ', 'tfidf_method': 'test_signal_kernel_subprocesses execute ', 'lda_word': ' signal,kernel,execute,subprocesses,test,', 'lda_method': ' execute,test_signal_kernel_subprocesses,', 'lsi_word': ' execute,kernel,signal,subprocesses,test,', 'lsi_method': ' test_signal_kernel_subprocesses,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'604': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '608': 'execute(test_kernelmanager.py)'}, 'execution_paths': {1337: 1}}, {'key': 1000147, 'parent': 100078, 'tfidf_word': 'body execute kspec templated env test ', 'tfidf_method': '_env_test_body test_templated_kspec_env execute ', 'lda_word': ' env,test,execute,kspec,templated,', 'lda_method': ' env_test_body,test_templated_kspec_env,execute,', 'lsi_word': ' env,test,body,execute,kspec,', 'lsi_method': ' env_test_body,execute,test_templated_kspec_env,', 'spm_method': '  &#187; test_templated_kspec_env(test_kernelmanager.py) &rarr; _env_test_body(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'606': 'test_templated_kspec_env(test_kernelmanager.py)', '599': '_env_test_body(test_kernelmanager.py)', '607': 'execute(test_kernelmanager.py)'}, 'execution_paths': {1338: 1}}, {'key': 1000109, 'parent': 100066, 'tfidf_word': 'lifecycle run sequence signaltest start test execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_sequence_kernels _prepare_kernel execute ', 'lda_word': ' start,execute,sequence,run,test,', 'lda_method': ' test_start_sequence_kernels,execute,run_signaltest_lifecycle,prepare_kernel,', 'lsi_word': ' kernel,run,test,lifecycle,sequence,', 'lsi_method': ' test_start_sequence_kernels,run_signaltest_lifecycle,prepare_kernel,execute,', 'spm_method': '  &#187; test_start_sequence_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_sequence_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'613': 'test_start_sequence_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}, 'execution_paths': {1339: 1, 1340: 1}}, {'key': 1000148, 'parent': 100078, 'tfidf_word': 'kernel parallel start test thread transport ', 'tfidf_method': 'transport test_start_parallel_thread_kernels ', 'lda_word': ' test,thread,transport,parallel,kernel,', 'lda_method': ' transport,test_start_parallel_thread_kernels,', 'lsi_word': ' start,thread,kernel,transport,test,', 'lsi_method': ' transport,test_start_parallel_thread_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)'}, 'execution_paths': {1341: 1}}, {'key': 1000110, 'parent': 100066, 'tfidf_word': 'lifecycle parallel run signaltest start test thread execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_parallel_thread_kernels _prepare_kernel execute ', 'lda_word': ' kernel,run,thread,test,parallel,', 'lda_method': ' run_signaltest_lifecycle,test_start_parallel_thread_kernels,prepare_kernel,execute,', 'lsi_word': ' kernel,parallel,start,signaltest,thread,', 'lsi_method': ' test_start_parallel_thread_kernels,run_signaltest_lifecycle,prepare_kernel,execute,', 'spm_method': '  &#187; test_start_parallel_thread_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_parallel_thread_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'612': 'test_start_parallel_thread_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}, 'execution_paths': {1342: 1, 1343: 1}}, {'key': 1000108, 'parent': 100066, 'tfidf_word': 'lifecycle parallel process run signaltest start test execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_parallel_process_kernels _prepare_kernel execute ', 'lda_word': ' kernel,process,parallel,lifecycle,signaltest,', 'lda_method': ' test_start_parallel_process_kernels,run_signaltest_lifecycle,execute,prepare_kernel,', 'lsi_word': ' kernel,start,signaltest,test,run,', 'lsi_method': ' run_signaltest_lifecycle,test_start_parallel_process_kernels,prepare_kernel,execute,', 'spm_method': '  &#187; test_start_parallel_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_parallel_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}, 'execution_paths': {1344: 1, 1345: 1}}, {'key': 1000153, 'parent': 100078, 'tfidf_word': 'kernel parallel process start test transport ', 'tfidf_method': 'transport test_start_parallel_process_kernels ', 'lda_word': ' kernel,parallel,transport,process,start,', 'lda_method': ' transport,test_start_parallel_process_kernels,', 'lsi_word': ' process,test,kernel,transport,start,', 'lsi_method': ' transport,test_start_parallel_process_kernels,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'611': 'test_start_parallel_process_kernels(test_kernelmanager.py)', '591': 'transport(test_kernelmanager.py)'}, 'execution_paths': {1346: 1}}, {'key': 1000107, 'parent': 100066, 'tfidf_word': 'lifecycle process run sequence signaltest start test execute prepare kernel ', 'tfidf_method': '_run_signaltest_lifecycle test_start_sequence_process_kernels _prepare_kernel execute ', 'lda_word': ' process,sequence,start,signaltest,kernel,', 'lda_method': ' run_signaltest_lifecycle,test_start_sequence_process_kernels,execute,prepare_kernel,', 'lsi_word': ' kernel,start,signaltest,sequence,test,', 'lsi_method': ' test_start_sequence_process_kernels,run_signaltest_lifecycle,prepare_kernel,execute,', 'spm_method': '  &#187; test_start_sequence_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; _prepare_kernel(test_kernelmanager.py) . <br> &#187; test_start_sequence_process_kernels(test_kernelmanager.py) &rarr; _run_signaltest_lifecycle(test_kernelmanager.py) &rarr; execute(test_kernelmanager.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'614': 'test_start_sequence_process_kernels(test_kernelmanager.py)', '610': '_run_signaltest_lifecycle(test_kernelmanager.py)', '615': 'execute(test_kernelmanager.py)', '609': '_prepare_kernel(test_kernelmanager.py)'}, 'execution_paths': {1347: 1, 1348: 1}}, {'key': 1000154, 'parent': 100078, 'tfidf_word': 'async kernel manager test subclass ', 'tfidf_method': 'test_subclasses AsyncKernelManagerSubclass ', 'lda_word': ' subclass,async,kernel,test,manager,', 'lda_method': ' test_subclasses,asynckernelmanagersubclass,', 'lsi_word': ' subclass,async,kernel,manager,test,', 'lsi_method': ' test_subclasses,asynckernelmanagersubclass,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'597': 'test_subclasses(test_kernelmanager.py)', '702': 'AsyncKernelManagerSubclass(utils.py)'}, 'execution_paths': {1349: 1}}, {'key': 1000145, 'parent': 100078, 'tfidf_word': 'async cleanup kernel manager subclass test with ', 'tfidf_method': 'test_subclasses AsyncKernelManagerWithCleanup ', 'lda_word': ' test,kernel,subclass,manager,cleanup,', 'lda_method': ' asynckernelmanagerwithcleanup,test_subclasses,', 'lsi_word': ' kernel,subclass,async,test,manager,', 'lsi_method': ' test_subclasses,asynckernelmanagerwithcleanup,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_kernelmanager.py', 'utils.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'597': 'test_subclasses(test_kernelmanager.py)', '703': 'AsyncKernelManagerWithCleanup(utils.py)'}, 'execution_paths': {1350: 1}}, {'key': 1000146, 'parent': 100078, 'tfidf_word': 'execute kernel signal subprocesses test ', 'tfidf_method': 'test_signal_kernel_subprocesses execute ', 'lda_word': ' signal,test,kernel,subprocesses,execute,', 'lda_method': ' execute,test_signal_kernel_subprocesses,', 'lsi_word': ' signal,subprocesses,kernel,test,execute,', 'lsi_method': ' test_signal_kernel_subprocesses,execute,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['test_kernelmanager.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'595': 'test_signal_kernel_subprocesses(test_kernelmanager.py)', '598': 'execute(test_kernelmanager.py)'}, 'execution_paths': {1351: 1}}, {'key': 1000143, 'parent': 100078, 'tfidf_word': 'date default test utcnow ', 'tfidf_method': 'utcnow test_date_default ', 'lda_word': ' utcnow,default,date,test,', 'lda_method': ' utcnow,test_date_default,', 'lsi_word': ' default,test,utcnow,date,', 'lsi_method': ' utcnow,test_date_default,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_jsonutil.py', 'session.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'575': 'test_date_default(test_jsonutil.py)', '450': 'utcnow(session.py)'}, 'execution_paths': {1355: 1}}, {'key': 1000144, 'parent': 100078, 'tfidf_word': 'ensure test tzinfo date default ', 'tfidf_method': '_ensure_tzinfo date_default test_date_default ', 'lda_word': ' default,date,tzinfo,test,ensure,', 'lda_method': ' test_date_default,date_default,ensure_tzinfo,', 'lsi_word': ' default,date,ensure,tzinfo,test,', 'lsi_method': ' date_default,ensure_tzinfo,test_date_default,', 'spm_method': '  &#187; test_date_default(test_jsonutil.py) &rarr; date_default(jsonutil.py) &rarr; _ensure_tzinfo(jsonutil.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['test_jsonutil.py', 'jsonutil.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'575': 'test_date_default(test_jsonutil.py)', '241': 'date_default(jsonutil.py)', '240': '_ensure_tzinfo(jsonutil.py)'}, 'execution_paths': {1357: 1}}, {'key': 1000142, 'parent': 100078, 'tfidf_word': 'connection file kernel path real spec test ', 'tfidf_method': 'KernelSpec test_connection_file_real_path ', 'lda_word': ' kernel,spec,test,real,path,', 'lda_method': ' kernelspec,test_connection_file_real_path,', 'lsi_word': ' real,path,spec,connection,test,', 'lsi_method': ' test_connection_file_real_path,kernelspec,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['test_manager.py', 'kernelspec.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'635': 'test_connection_file_real_path(test_manager.py)', '253': 'KernelSpec(kernelspec.py)'}, 'execution_paths': {1358: 1}}, {'key': 1000376, 'parent': 100081, 'tfidf_word': 'connection open openssh exception ssh stop tunnel ', 'tfidf_method': 'open_tunnel openssh_tunnel tunnel_connection SSHException _stop_tunnel ', 'lda_word': ' tunnel,open,connection,openssh,exception,', 'lda_method': ' openssh_tunnel,tunnel_connection,open_tunnel,sshexception,stop_tunnel,', 'lsi_word': ' tunnel,connection,open,openssh,stop,', 'lsi_method': ' open_tunnel,openssh_tunnel,tunnel_connection,sshexception,stop_tunnel,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; openssh_tunnel(tunnel.py) . <br> &#187; open_tunnel(tunnel.py) &rarr; openssh_tunnel(tunnel.py) &rarr; _stop_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _stop_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; openssh_tunnel(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; openssh_tunnel(tunnel.py) &rarr; _stop_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; openssh_tunnel(tunnel.py) &rarr; SSHException(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; openssh_tunnel(tunnel.py) &rarr; _stop_tunnel(tunnel.py) . <br>', 'text_summary': '', 'files_count': 1, 'files': ['tunnel.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '501': 'openssh_tunnel(tunnel.py)', '494': 'SSHException(tunnel.py)', '497': '_stop_tunnel(tunnel.py)'}, 'execution_paths': {1364: 1, 1365: 1}}, {'key': 1000374, 'parent': 100081, 'tfidf_word': 'connection open random select close port tunnel ', 'tfidf_method': 'open_tunnel select_random_ports tunnel_connection close close ports close close close ', 'lda_word': ' tunnel,close,random,open,port,', 'lda_method': ' open_tunnel,tunnel_connection,close,select_random_ports,port,', 'lsi_word': ' tunnel,port,connection,random,open,', 'lsi_method': ' open_tunnel,select_random_ports,tunnel_connection,close,port,', 'spm_method': '  &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; select_random_ports(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; ports(connect.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(threaded.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; select_random_ports(tunnel.py) &rarr; close(channels.py) . <br>', 'text_summary': '', 'files_count': 4, 'files': ['tunnel.py', 'channels.py', 'connect.py', 'threaded.py'], 'execution_path_count': 6, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '503': 'select_random_ports(tunnel.py)', '83': 'close(channels.py)', '211': 'ports(connect.py)', '109': 'close(channels.py)', '132': 'close(channels.py)', '718': 'close(threaded.py)', '730': 'close(threaded.py)'}, 'execution_paths': {1366: 1, 1367: 1, 1368: 1, 1369: 1, 1370: 1, 1371: 1}}, {'key': 1000375, 'parent': 100081, 'tfidf_word': 'connection open forward server split paramiko tunnel ', 'tfidf_method': '_paramiko_tunnel open_tunnel paramiko_tunnel tunnel_connection forward_tunnel _split_server ', 'lda_word': ' tunnel,paramiko,connection,open,server,', 'lda_method': ' paramiko_tunnel,tunnel_connection,open_tunnel,split_server,forward_tunnel,', 'lsi_word': ' tunnel,paramiko,open,connection,forward,', 'lsi_method': ' paramiko_tunnel,tunnel_connection,open_tunnel,split_server,forward_tunnel,', 'spm_method': '  &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) &rarr; forward_tunnel(forward.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _paramiko_tunnel(tunnel.py) &rarr; _split_server(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _split_server(tunnel.py) . <br>', 'text_summary': '', 'files_count': 2, 'files': ['tunnel.py', 'forward.py'], 'execution_path_count': 2, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '495': '_paramiko_tunnel(tunnel.py)', '496': '_split_server(tunnel.py)', '491': 'forward_tunnel(forward.py)'}, 'execution_paths': {1372: 1, 1373: 1}}, {'key': 1000373, 'parent': 100080, 'tfidf_word': 'passwordless try header extract id paramiko tunnel server split msg ', 'tfidf_method': 'open_tunnel paramiko_tunnel tunnel_connection msg msg msg extract_header msg_header msg_id _split_server ', 'lda_word': ' tunnel,paramiko,msg,open,passwordless,', 'lda_method': ' msg_id,msg_header,paramiko_tunnel,tunnel_connection,open_tunnel,', 'lsi_word': ' msg,tunnel,paramiko,connection,open,', 'lsi_method': ' msg,paramiko_tunnel,open_tunnel,tunnel_connection,try_passwordless_paramiko,', 'spm_method': '  &#187; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; open_tunnel(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; msg(session.py) . <br> &#187; tunnel_connection(tunnel.py) &rarr; paramiko_tunnel(tunnel.py) &rarr; _try_passwordless_paramiko(tunnel.py) &rarr; msg(session.py) . <br>', 'text_summary': '', 'files_count': 3, 'files': ['tunnel.py', 'session.py', 'test_adapter.py'], 'execution_path_count': 11, 'function_id_to_name_file': {'505': 'tunnel_connection(tunnel.py)', '500': 'open_tunnel(tunnel.py)', '502': 'paramiko_tunnel(tunnel.py)', '499': '_try_passwordless_paramiko(tunnel.py)', '476': 'msg(session.py)', '444': 'extract_header(session.py)', '477': 'msg_header(session.py)', '478': 'msg_id(session.py)', '520': 'msg(test_adapter.py)', '534': 'msg(test_adapter.py)', '496': '_split_server(tunnel.py)'}, 'execution_paths': {1374: 1, 1375: 1, 1376: 1, 1377: 1, 1378: 1, 1379: 1, 1380: 1, 1381: 1, 1382: 1, 1383: 1, 1384: 1}}, {'key': 1000136, 'parent': 100078, 'tfidf_word': 'close handle ', 'tfidf_method': 'handle close ', 'lda_word': ' close,handle,', 'lda_method': ' close,handle,', 'lsi_word': ' handle,close,', 'lsi_method': ' handle,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '83': 'close(channels.py)'}, 'execution_paths': {1385: 1}}, {'key': 1000137, 'parent': 100078, 'tfidf_word': 'close handle ', 'tfidf_method': 'close handle ', 'lda_word': ' handle,close,', 'lda_method': ' close,handle,', 'lsi_word': ' handle,close,', 'lsi_method': ' handle,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '109': 'close(channels.py)'}, 'execution_paths': {1386: 1}}, {'key': 1000138, 'parent': 100078, 'tfidf_word': 'handle send ', 'tfidf_method': 'handle send ', 'lda_word': ' send,handle,', 'lda_method': ' send,handle,', 'lsi_word': ' send,handle,', 'lsi_method': ' send,handle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '88': 'send(channels.py)'}, 'execution_paths': {1387: 1}}, {'key': 1000139, 'parent': 100078, 'tfidf_word': 'handle send ', 'tfidf_method': 'send handle ', 'lda_word': ' send,handle,', 'lda_method': ' send,handle,', 'lsi_word': ' send,handle,', 'lsi_method': ' send,handle,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '114': 'send(channels.py)'}, 'execution_paths': {1388: 1}}, {'key': 1000140, 'parent': 100078, 'tfidf_word': 'close handle ', 'tfidf_method': 'close handle ', 'lda_word': ' handle,close,', 'lda_method': ' close,handle,', 'lsi_word': ' handle,close,', 'lsi_method': ' handle,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'channels.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '132': 'close(channels.py)'}, 'execution_paths': {1394: 1}}, {'key': 1000141, 'parent': 100078, 'tfidf_word': 'close handle ', 'tfidf_method': 'handle close ', 'lda_word': ' close,handle,', 'lda_method': ' handle,close,', 'lsi_word': ' handle,close,', 'lsi_method': ' handle,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '718': 'close(threaded.py)'}, 'execution_paths': {1395: 1}}, {'key': 1000134, 'parent': 100078, 'tfidf_word': 'close handle ', 'tfidf_method': 'handle close ', 'lda_word': ' close,handle,', 'lda_method': ' close,handle,', 'lsi_word': ' handle,close,', 'lsi_method': ' handle,close,', 'spm_method': ' ', 'text_summary': '', 'files_count': 2, 'files': ['forward.py', 'threaded.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'492': 'handle(forward.py)', '730': 'close(threaded.py)'}, 'execution_paths': {1401: 1}}, {'key': 1000135, 'parent': 100078, 'tfidf_word': 'hander handler sub ', 'tfidf_method': 'Handler SubHander ', 'lda_word': ' handler,hander,sub,', 'lda_method': ' handler,subhander,', 'lsi_word': ' hander,handler,sub,', 'lsi_method': ' subhander,handler,', 'spm_method': ' ', 'text_summary': '', 'files_count': 1, 'files': ['forward.py'], 'execution_path_count': 1, 'function_id_to_name_file': {'493': 'SubHander(forward.py)', '490': 'Handler(forward.py)'}, 'execution_paths': {1403: 1}}], 'function_id_to_name': {'46': 'Adapter', '47': 'V4toV5', '48': 'V5toV4', '49': '_version_str_to_list', '50': 'adapt', '51': 'code_to_line', '52': 'extract_oname_v4', '53': '__call__', '54': 'handle_reply_status_error', '55': 'update_header', '56': 'update_metadata', '57': 'update_msg_type', '58': 'complete_reply', '59': 'complete_request', '60': 'display_data', '61': 'execute_reply', '62': 'execute_request', '63': 'input_request', '64': 'inspect_reply', '65': 'inspect_request', '66': 'kernel_info_reply', '67': 'stream', '68': 'update_header', '69': 'complete_reply', '70': 'complete_request', '71': 'display_data', '72': 'execute_reply', '73': 'execute_request', '74': 'input_request', '75': 'kernel_info_reply', '76': 'object_info_reply', '77': 'object_info_request', '78': 'stream', '79': 'update_header', '80': 'ZMQSocketChannel', '81': '__init__', '82': '_recv', '83': 'close', '84': 'get_msg', '85': 'get_msgs', '86': 'is_alive', '87': 'msg_ready', '88': 'send', '89': 'start', '90': 'AsyncKernelClient', '91': 'reqrep', '92': '_context_default', '93': '_output_hook_default', '94': '_output_hook_kernel', '95': '_recv_reply', '96': '_stdin_hook_default', '97': 'execute_interactive', '98': 'get_control_msg', '99': 'get_iopub_msg', '100': 'get_shell_msg', '101': 'get_stdin_msg', '102': 'hb_channel', '103': 'is_alive', '104': 'wait_for_ready', '105': 'wrapped', '106': 'ZMQSocketChannel', '107': '__init__', '108': '_recv', '109': 'close', '110': 'get_msg', '111': 'get_msgs', '112': 'is_alive', '113': 'msg_ready', '114': 'send', '115': 'start', '116': 'BlockingKernelClient', '117': 'reqrep', '118': '_output_hook_default', '119': '_output_hook_kernel', '120': '_recv_reply', '121': '_stdin_hook_default', '122': 'execute_interactive', '123': 'wait_for_ready', '124': 'wrapped', '125': 'HBChannel', '126': 'InvalidPortNumber', '127': '__init__', '128': '_create_socket', '129': '_notice_exit', '130': '_poll', '131': 'call_handlers', '132': 'close', '133': 'is_beating', '134': 'pause', '135': 'run', '136': 'stop', '137': 'unpause', '138': 'ChannelABC', '139': 'HBChannelABC', '140': 'is_alive', '141': 'start', '142': 'stop', '143': 'is_beating', '144': 'pause', '145': 'time_to_dead', '146': 'unpause', '147': 'KernelClient', '148': 'validate_string_dict', '149': '_context_default', '150': '_handle_kernel_info_reply', '151': 'channels_running', '152': 'comm_info', '153': 'complete', '154': 'control_channel', '155': 'execute', '156': 'get_control_msg', '157': 'get_iopub_msg', '158': 'get_shell_msg', '159': 'get_stdin_msg', '160': 'hb_channel', '161': 'history', '162': 'input', '163': 'inspect', '164': 'iopub_channel', '165': 'is_alive', '166': 'is_complete', '167': 'kernel_info', '168': 'shell_channel', '169': 'shutdown', '170': 'start_channels', '171': 'stdin_channel', '172': 'stop_channels', '173': 'KernelClientABC', '174': 'channels_running', '175': 'control_channel', '176': 'control_channel_class', '177': 'hb_channel', '178': 'hb_channel_class', '179': 'iopub_channel', '180': 'iopub_channel_class', '181': 'kernel', '182': 'shell_channel', '183': 'shell_channel_class', '184': 'start_channels', '185': 'stdin_channel', '186': 'stdin_channel_class', '187': 'stop_channels', '188': 'ConnectionFileMixin', '189': 'find_connection_file', '190': 'tunnel_to_kernel', '191': 'write_connection_file', '192': '_create_connected_socket', '193': '_data_dir_default', '194': '_ip_changed', '195': '_ip_default', '196': '_make_url', '197': '_record_random_port_names', '198': '_session_default', '199': 'blocking_client', '200': 'cleanup_connection_file', '201': 'cleanup_ipc_files', '202': 'cleanup_random_ports', '203': 'connect_control', '204': 'connect_hb', '205': 'connect_iopub', '206': 'connect_shell', '207': 'connect_stdin', '208': 'get_connection_info', '209': 'load_connection_file', '210': 'load_connection_info', '211': 'ports', '212': 'write_connection_file', '213': 'IPythonConsoleApp', '214': 'JupyterConsoleApp', '215': '__init__', '216': '_connection_file_default', '217': '_new_connection_file', '218': 'build_kernel_argv', '219': 'init_connection_file', '220': 'init_kernel_client', '221': 'init_kernel_manager', '222': 'init_ssh', '223': 'initialize', '224': 'AsyncIOLoopKernelManager', '225': 'IOLoopKernelManager', '226': 'as_zmqstream', '227': '_loop_default', '228': 'start_restarter', '229': 'stop_restarter', '230': '_loop_default', '231': 'start_restarter', '232': 'stop_restarter', '233': 'wrapped', '234': 'AsyncIOLoopKernelRestarter', '235': 'IOLoopKernelRestarter', '236': 'poll', '237': '_loop_default', '238': 'start', '239': 'stop', '240': '_ensure_tzinfo', '241': 'date_default', '242': 'extract_dates', '243': 'parse_date', '244': 'squash_dates', '245': 'KernelApp', '246': '_record_started', '247': 'initialize', '248': 'log_connection_info', '249': 'setup_signals', '250': 'shutdown', '251': 'start', '252': 'shutdown_handler', '253': 'KernelSpec', '254': 'KernelSpecManager', '255': 'NoSuchKernel', '256': '_is_kernel_dir', '257': '_is_valid_kernel_name', '258': '_list_kernels_in', '259': 'find_kernel_specs', '260': 'get_kernel_spec', '261': 'install_kernel_spec', '262': 'install_native_kernel_spec', '263': 'from_resource_dir', '264': 'to_dict', '265': 'to_json', '266': '_data_dir_default', '267': '_find_spec_directory', '268': '_get_destination_dir', '269': '_get_kernel_spec_by_name', '270': '_kernel_dirs_default', '271': '_user_kernel_dir_default', '272': 'find_kernel_specs', '273': 'get_all_specs', '274': 'get_kernel_spec', '275': 'install_kernel_spec', '276': 'install_native_kernel_spec', '277': 'remove_kernel_spec', '278': '__init__', '279': '__str__', '280': 'InstallKernelSpec', '281': 'InstallNativeKernelSpec', '282': 'KernelSpecApp', '283': 'ListKernelSpecs', '284': 'RemoveKernelSpec', '285': '_kernel_name_default', '286': '_kernel_spec_manager_default', '287': 'parse_command_line', '288': 'start', '289': '_kernel_spec_manager_default', '290': 'start', '291': 'start', '292': '_kernel_spec_manager_default', '293': 'start', '294': 'path_key', '295': '_kernel_spec_manager_default', '296': 'parse_command_line', '297': 'start', '298': 'launch_kernel', '299': 'NoIPAddresses', '300': '_get_output', '301': '_load_ips', '302': '_load_ips_dumb', '303': '_load_ips_gethostbyname', '304': '_load_ips_ifconfig', '305': '_load_ips_ip', '306': '_load_ips_ipconfig', '307': '_load_ips_netifaces', '308': '_only_once', '309': '_populate_from_list', '310': '_requires_ips', '311': '_uniq_stable', '312': 'is_local_ip', '313': 'is_public_ip', '314': 'local_ips', '315': 'localhost', '316': 'public_ips', '317': 'wrapped', '318': 'ips_loaded', '319': 'AsyncKernelManager', '320': 'KernelManager', '321': 'run_kernel', '322': 'start_new_async_kernel', '323': 'start_new_kernel', '324': '_async_wait', '325': '_kill_kernel', '326': '_launch_kernel', '327': 'finish_shutdown', '328': 'interrupt_kernel', '329': 'is_alive', '330': 'restart_kernel', '331': 'shutdown_kernel', '332': 'signal_kernel', '333': 'start_kernel', '334': '__del__', '335': '_client_class_changed', '336': '_client_factory_default', '337': '_close_control_socket', '338': '_connect_control_socket', '339': '_context_default', '340': '_default_cache_ports', '341': '_get_env_substitutions', '342': '_kernel_cmd_changed', '343': '_kernel_name_changed', '344': '_kernel_spec_manager_changed', '345': '_kernel_spec_manager_default', '346': '_kill_kernel', '347': '_launch_kernel', '348': 'add_restart_callback', '349': 'cleanup', '350': 'cleanup_resources', '351': 'client', '352': 'finish_shutdown', '353': 'format_kernel_cmd', '354': 'has_kernel', '355': 'interrupt_kernel', '356': 'ipykernel', '357': 'is_alive', '358': 'kernel_spec', '359': 'post_start_kernel', '360': 'pre_start_kernel', '361': 'remove_restart_callback', '362': 'request_shutdown', '363': 'restart_kernel', '364': 'shutdown_kernel', '365': 'signal_kernel', '366': 'start_kernel', '367': 'start_restarter', '368': 'stop_restarter', '369': 'from_ns', '370': 'KernelManagerABC', '371': 'has_kernel', '372': 'interrupt_kernel', '373': 'is_alive', '374': 'kernel', '375': 'restart_kernel', '376': 'shutdown_kernel', '377': 'signal_kernel', '378': 'start_kernel', '379': 'AsyncMultiKernelManager', '380': 'DuplicateKernelError', '381': 'MultiKernelManager', '382': 'kernel_method', '383': 'finish_shutdown', '384': 'interrupt_kernel', '385': 'restart_kernel', '386': 'shutdown_all', '387': 'shutdown_kernel', '388': 'signal_kernel', '389': 'start_kernel', '390': '__contains__', '391': '__del__', '392': '__init__', '393': '__len__', '394': '_check_kernel_id', '395': '_context_default', '396': '_create_kernel_manager_factory', '397': '_find_available_port', '398': '_kernel_manager_class_changed', '399': '_kernel_manager_factory_default', '400': 'add_restart_callback', '401': 'cleanup', '402': 'cleanup_resources', '403': 'connect_control', '404': 'connect_hb', '405': 'connect_iopub', '406': 'connect_shell', '407': 'connect_stdin', '408': 'finish_shutdown', '409': 'get_connection_info', '410': 'get_kernel', '411': 'interrupt_kernel', '412': 'is_alive', '413': 'list_kernel_ids', '414': 'new_kernel_id', '415': 'pre_start_kernel', '416': 'remove_kernel', '417': 'remove_restart_callback', '418': 'request_shutdown', '419': 'restart_kernel', '420': 'shutdown_all', '421': 'shutdown_kernel', '422': 'signal_kernel', '423': 'start_kernel', '424': 'create_kernel_manager', '425': 'wrapped', '426': 'KernelRestarter', '427': '_callbacks_default', '428': '_fire_callbacks', '429': 'add_callback', '430': 'poll', '431': 'remove_callback', '432': 'start', '433': 'stop', '434': 'RunApp', '435': 'handle_sigint', '436': 'init_kernel_info', '437': 'initialize', '438': 'parse_command_line', '439': 'start', '440': 'Message', '441': 'Session', '442': 'SessionFactory', '443': 'default_secure', '444': 'extract_header', '445': 'msg_header', '446': 'new_id', '447': 'new_id_bytes', '448': 'squash_unicode', '449': 'test_msg2obj', '450': 'utcnow', '451': '__contains__', '452': '__getitem__', '453': '__init__', '454': '__iter__', '455': '__repr__', '456': '__str__', '457': '__init__', '458': '_add_digest', '459': '_check_packers', '460': '_cull_digest_history', '461': '_digest_mod_default', '462': '_key_changed', '463': '_key_default', '464': '_keyfile_changed', '465': '_new_auth', '466': '_pack_changed', '467': '_packer_changed', '468': '_session_changed', '469': '_session_default', '470': '_signature_scheme_changed', '471': '_unpack_changed', '472': '_unpacker_changed', '473': 'clone', '474': 'deserialize', '475': 'feed_identities', '476': 'msg', '477': 'msg_header', '478': 'msg_id', '479': 'recv', '480': 'send', '481': 'send_raw', '482': 'serialize', '483': 'sign', '484': 'unserialize', '485': '__init__', '486': '_context_default', '487': '_logname_changed', '488': '_loop_default', '489': 'ForwardServer', '490': 'Handler', '491': 'forward_tunnel', '492': 'handle', '493': 'SubHander', '494': 'SSHException', '495': '_paramiko_tunnel', '496': '_split_server', '497': '_stop_tunnel', '498': '_try_passwordless_openssh', '499': '_try_passwordless_paramiko', '500': 'open_tunnel', '501': 'openssh_tunnel', '502': 'paramiko_tunnel', '503': 'select_random_ports', '504': 'try_passwordless_ssh', '505': 'tunnel_connection', '506': 'SignalTestApp', '507': 'SignalTestKernel', '508': 'init_io', '509': '__init__', '510': 'do_execute', '511': 'kernel_info_request', '512': 'AdapterTest', '513': 'V4toV5TestCase', '514': 'V5toV4TestCase', '515': 'test_code_to_line_no_code', '516': 'test_default_version', '517': 'adapt', '518': 'check_header', '519': 'setUp', '520': 'msg', '521': 'test_complete_reply', '522': 'test_complete_request', '523': 'test_display_data', '524': 'test_execute_reply', '525': 'test_execute_request', '526': 'test_input_request', '527': 'test_kernel_info_reply', '528': 'test_no_adapt', '529': 'test_object_info_reply', '530': 'test_object_info_reply_not_found', '531': 'test_object_info_request', '532': 'test_rename_type', '533': 'test_same_version', '534': 'msg', '535': 'test_complete_reply', '536': 'test_complete_request', '537': 'test_display_data', '538': 'test_execute_request', '539': 'test_input_request', '540': 'test_inspect_reply', '541': 'test_inspect_request', '542': 'test_inspect_request_token', '543': 'test_kernel_info_reply', '544': 'test_no_adapt', '545': 'test_rename_type', '546': 'test_same_version', '547': 'TestKernelClient', '548': '_check_reply', '549': 'setUp', '550': 'test_comm_info', '551': 'test_complete', '552': 'test_execute_interactive', '553': 'test_history', '554': 'test_inspect', '555': 'test_kernel_info', '556': 'test_shutdown', '557': 'DummyConfigurable', '558': 'DummyConsoleApp', '559': 'test_app_load_connection_file', '560': 'test_find_connection_file', '561': 'test_find_connection_file_abspath', '562': 'test_find_connection_file_local', '563': 'test_find_connection_file_relative', '564': 'test_load_connection_file_session', '565': 'test_load_connection_file_session_with_kn', '566': 'test_load_connection_info', '567': 'test_mixin_cleanup_random_ports', '568': 'test_mixin_record_random_ports', '569': 'test_secure_write', '570': 'test_write_connection_file', '571': 'initialize', '572': 'initialize', '573': 'check_user_only_permissions', '574': 'fetch_win32_permissions', '575': 'test_date_default', '576': 'test_extract_date_from_naive', '577': 'test_extract_dates', '578': 'test_parse_ms_precision', '579': '_launch', '580': 'test_kernelapp_lifecycle', '581': 'TestAsyncKernelManager', '582': 'TestKernelManager', '583': 'TestParallel', '584': 'async_km', '585': 'config', '586': 'env', '587': 'install_kernel', '588': 'km', '589': 'start_async_kernel', '590': 'start_kernel', '591': 'transport', '592': 'zmq_context', '593': 'test_get_connect_info', '594': 'test_lifecycle', '595': 'test_signal_kernel_subprocesses', '596': 'test_start_new_async_kernel', '597': 'test_subclasses', '598': 'execute', '599': '_env_test_body', '600': 'test_cleanup_context', '601': 'test_get_connect_info', '602': 'test_lifecycle', '603': 'test_no_cleanup_shared_context', '604': 'test_signal_kernel_subprocesses', '605': 'test_start_new_kernel', '606': 'test_templated_kspec_env', '607': 'execute', '608': 'execute', '609': '_prepare_kernel', '610': '_run_signaltest_lifecycle', '611': 'test_start_parallel_process_kernels', '612': 'test_start_parallel_thread_kernels', '613': 'test_start_sequence_kernels', '614': 'test_start_sequence_process_kernels', '615': 'execute', '616': 'KernelSpecTests', '617': '_install_sample_kernel', '618': 'setUp', '619': 'tearDown', '620': 'test_cant_install_kernel_spec', '621': 'test_find_all_specs', '622': 'test_find_kernel_specs', '623': 'test_get_kernel_spec', '624': 'test_install_kernel_spec', '625': 'test_install_kernel_spec_prefix', '626': 'test_kernel_spec_priority', '627': 'test_remove_kernel_spec', '628': 'test_remove_kernel_spec_app', '629': 'test_subclass', '630': 'test_validate_kernel_name', '631': 'MyKSM', '632': 'find_kernel_specs', '633': 'get_kernel_spec', '634': 'test_load_ips', '635': 'test_connection_file_real_path', '636': 'TestAsyncKernelManager', '637': 'TestKernelManager', '638': '_get_ipc_km', '639': '_get_tcp_km', '640': '_run_cinfo', '641': '_run_lifecycle', '642': 'raw_tcp_lifecycle', '643': 'tcp_lifecycle_with_loop', '644': 'test_ipc_cinfo', '645': 'test_ipc_lifecycle', '646': 'test_shutdown_all', '647': 'test_start_parallel_process_kernels', '648': 'test_start_parallel_thread_kernels', '649': 'test_start_sequence_ipc_kernels', '650': 'test_start_sequence_tcp_kernels', '651': 'test_tcp_cinfo', '652': 'test_tcp_lifecycle', '653': 'test_tcp_lifecycle_with_kernel_id', '654': '_get_ipc_km', '655': '_get_tcp_km', '656': '_run_cinfo', '657': '_run_lifecycle', '658': 'tcp_lifecycle_with_loop', '659': 'test_ipc_cinfo', '660': 'test_ipc_lifecycle', '661': 'test_shutdown_all', '662': 'test_start_parallel_process_kernels', '663': 'test_start_parallel_thread_kernels', '664': 'test_start_sequence_ipc_kernels', '665': 'test_start_sequence_tcp_kernels', '666': 'test_tcp_cinfo', '667': 'test_tcp_lifecycle', '668': 'test_tcp_lifecycle_with_kernel_id', '669': 'test_connect', '670': 'test_kcs', '671': 'test_kms', '672': 'test_launcher', '673': 'SessionTestCase', '674': 'TestSession', '675': '_bad_packer', '676': '_bad_unpacker', '677': 'no_copy_threshold', '678': 'setUp', '679': '_datetime_test', '680': 'test_args', '681': 'test_bad_pack', '682': 'test_bad_packer', '683': 'test_bad_roundtrip', '684': 'test_bad_unpack', '685': 'test_bad_unpacker', '686': 'test_clone', '687': 'test_cull_digest_history', '688': 'test_datetimes', '689': 'test_datetimes_msgpack', '690': 'test_datetimes_pickle', '691': 'test_default_secure', '692': 'test_feed_identities', '693': 'test_msg', '694': 'test_send', '695': 'test_send_raw', '696': 'test_serialize', '697': 'test_session_id', '698': 'test_tracking', '699': 'test_unique_msg_ids', '700': 'test_zero_digest_history', '701': 'test_random_ports', '702': 'AsyncKernelManagerSubclass', '703': 'AsyncKernelManagerWithCleanup', '704': 'execute', '705': 'test_env', '706': 'cleanup', '707': 'cleanup_resources', '708': 'cleanup', '709': '__enter__', '710': '__exit__', '711': 'start', '712': 'stop', '713': 'IOLoopThread', '714': 'ThreadedKernelClient', '715': 'ThreadedZMQSocketChannel', '716': '__init__', '717': '_notice_exit', '718': 'close', '719': 'run', '720': 'start', '721': 'stop', '722': '_check_kernel_info_reply', '723': 'ioloop', '724': 'start_channels', '725': 'stop_channels', '726': '__init__', '727': '_flush', '728': '_handle_recv', '729': 'call_handlers', '730': 'close', '731': 'flush', '732': 'is_alive', '733': 'process_events', '734': 'send', '735': 'start', '736': 'stop', '737': 'setup_stream', '738': 'thread_send', '739': 'create_interrupt_event', '740': 'send_interrupt', '741': 'SECURITY_ATTRIBUTES', '742': 'bdist_egg_disabled', '743': 'run'}, 'function_id_to_file_name': {'46': 'adapter.py', '47': 'adapter.py', '48': 'adapter.py', '49': 'adapter.py', '50': 'adapter.py', '51': 'adapter.py', '52': 'adapter.py', '53': 'adapter.py', '54': 'adapter.py', '55': 'adapter.py', '56': 'adapter.py', '57': 'adapter.py', '58': 'adapter.py', '59': 'adapter.py', '60': 'adapter.py', '61': 'adapter.py', '62': 'adapter.py', '63': 'adapter.py', '64': 'adapter.py', '65': 'adapter.py', '66': 'adapter.py', '67': 'adapter.py', '68': 'adapter.py', '69': 'adapter.py', '70': 'adapter.py', '71': 'adapter.py', '72': 'adapter.py', '73': 'adapter.py', '74': 'adapter.py', '75': 'adapter.py', '76': 'adapter.py', '77': 'adapter.py', '78': 'adapter.py', '79': 'adapter.py', '80': 'channels.py', '81': 'channels.py', '82': 'channels.py', '83': 'channels.py', '84': 'channels.py', '85': 'channels.py', '86': 'channels.py', '87': 'channels.py', '88': 'channels.py', '89': 'channels.py', '90': 'client.py', '91': 'client.py', '92': 'client.py', '93': 'client.py', '94': 'client.py', '95': 'client.py', '96': 'client.py', '97': 'client.py', '98': 'client.py', '99': 'client.py', '100': 'client.py', '101': 'client.py', '102': 'client.py', '103': 'client.py', '104': 'client.py', '105': 'client.py', '106': 'channels.py', '107': 'channels.py', '108': 'channels.py', '109': 'channels.py', '110': 'channels.py', '111': 'channels.py', '112': 'channels.py', '113': 'channels.py', '114': 'channels.py', '115': 'channels.py', '116': 'client.py', '117': 'client.py', '118': 'client.py', '119': 'client.py', '120': 'client.py', '121': 'client.py', '122': 'client.py', '123': 'client.py', '124': 'client.py', '125': 'channels.py', '126': 'channels.py', '127': 'channels.py', '128': 'channels.py', '129': 'channels.py', '130': 'channels.py', '131': 'channels.py', '132': 'channels.py', '133': 'channels.py', '134': 'channels.py', '135': 'channels.py', '136': 'channels.py', '137': 'channels.py', '138': 'channelsabc.py', '139': 'channelsabc.py', '140': 'channelsabc.py', '141': 'channelsabc.py', '142': 'channelsabc.py', '143': 'channelsabc.py', '144': 'channelsabc.py', '145': 'channelsabc.py', '146': 'channelsabc.py', '147': 'client.py', '148': 'client.py', '149': 'client.py', '150': 'client.py', '151': 'client.py', '152': 'client.py', '153': 'client.py', '154': 'client.py', '155': 'client.py', '156': 'client.py', '157': 'client.py', '158': 'client.py', '159': 'client.py', '160': 'client.py', '161': 'client.py', '162': 'client.py', '163': 'client.py', '164': 'client.py', '165': 'client.py', '166': 'client.py', '167': 'client.py', '168': 'client.py', '169': 'client.py', '170': 'client.py', '171': 'client.py', '172': 'client.py', '173': 'clientabc.py', '174': 'clientabc.py', '175': 'clientabc.py', '176': 'clientabc.py', '177': 'clientabc.py', '178': 'clientabc.py', '179': 'clientabc.py', '180': 'clientabc.py', '181': 'clientabc.py', '182': 'clientabc.py', '183': 'clientabc.py', '184': 'clientabc.py', '185': 'clientabc.py', '186': 'clientabc.py', '187': 'clientabc.py', '188': 'connect.py', '189': 'connect.py', '190': 'connect.py', '191': 'connect.py', '192': 'connect.py', '193': 'connect.py', '194': 'connect.py', '195': 'connect.py', '196': 'connect.py', '197': 'connect.py', '198': 'connect.py', '199': 'connect.py', '200': 'connect.py', '201': 'connect.py', '202': 'connect.py', '203': 'connect.py', '204': 'connect.py', '205': 'connect.py', '206': 'connect.py', '207': 'connect.py', '208': 'connect.py', '209': 'connect.py', '210': 'connect.py', '211': 'connect.py', '212': 'connect.py', '213': 'consoleapp.py', '214': 'consoleapp.py', '215': 'consoleapp.py', '216': 'consoleapp.py', '217': 'consoleapp.py', '218': 'consoleapp.py', '219': 'consoleapp.py', '220': 'consoleapp.py', '221': 'consoleapp.py', '222': 'consoleapp.py', '223': 'consoleapp.py', '224': 'manager.py', '225': 'manager.py', '226': 'manager.py', '227': 'manager.py', '228': 'manager.py', '229': 'manager.py', '230': 'manager.py', '231': 'manager.py', '232': 'manager.py', '233': 'manager.py', '234': 'restarter.py', '235': 'restarter.py', '236': 'restarter.py', '237': 'restarter.py', '238': 'restarter.py', '239': 'restarter.py', '240': 'jsonutil.py', '241': 'jsonutil.py', '242': 'jsonutil.py', '243': 'jsonutil.py', '244': 'jsonutil.py', '245': 'kernelapp.py', '246': 'kernelapp.py', '247': 'kernelapp.py', '248': 'kernelapp.py', '249': 'kernelapp.py', '250': 'kernelapp.py', '251': 'kernelapp.py', '252': 'kernelapp.py', '253': 'kernelspec.py', '254': 'kernelspec.py', '255': 'kernelspec.py', '256': 'kernelspec.py', '257': 'kernelspec.py', '258': 'kernelspec.py', '259': 'kernelspec.py', '260': 'kernelspec.py', '261': 'kernelspec.py', '262': 'kernelspec.py', '263': 'kernelspec.py', '264': 'kernelspec.py', '265': 'kernelspec.py', '266': 'kernelspec.py', '267': 'kernelspec.py', '268': 'kernelspec.py', '269': 'kernelspec.py', '270': 'kernelspec.py', '271': 'kernelspec.py', '272': 'kernelspec.py', '273': 'kernelspec.py', '274': 'kernelspec.py', '275': 'kernelspec.py', '276': 'kernelspec.py', '277': 'kernelspec.py', '278': 'kernelspec.py', '279': 'kernelspec.py', '280': 'kernelspecapp.py', '281': 'kernelspecapp.py', '282': 'kernelspecapp.py', '283': 'kernelspecapp.py', '284': 'kernelspecapp.py', '285': 'kernelspecapp.py', '286': 'kernelspecapp.py', '287': 'kernelspecapp.py', '288': 'kernelspecapp.py', '289': 'kernelspecapp.py', '290': 'kernelspecapp.py', '291': 'kernelspecapp.py', '292': 'kernelspecapp.py', '293': 'kernelspecapp.py', '294': 'kernelspecapp.py', '295': 'kernelspecapp.py', '296': 'kernelspecapp.py', '297': 'kernelspecapp.py', '298': 'launcher.py', '299': 'localinterfaces.py', '300': 'localinterfaces.py', '301': 'localinterfaces.py', '302': 'localinterfaces.py', '303': 'localinterfaces.py', '304': 'localinterfaces.py', '305': 'localinterfaces.py', '306': 'localinterfaces.py', '307': 'localinterfaces.py', '308': 'localinterfaces.py', '309': 'localinterfaces.py', '310': 'localinterfaces.py', '311': 'localinterfaces.py', '312': 'localinterfaces.py', '313': 'localinterfaces.py', '314': 'localinterfaces.py', '315': 'localinterfaces.py', '316': 'localinterfaces.py', '317': 'localinterfaces.py', '318': 'localinterfaces.py', '319': 'manager.py', '320': 'manager.py', '321': 'manager.py', '322': 'manager.py', '323': 'manager.py', '324': 'manager.py', '325': 'manager.py', '326': 'manager.py', '327': 'manager.py', '328': 'manager.py', '329': 'manager.py', '330': 'manager.py', '331': 'manager.py', '332': 'manager.py', '333': 'manager.py', '334': 'manager.py', '335': 'manager.py', '336': 'manager.py', '337': 'manager.py', '338': 'manager.py', '339': 'manager.py', '340': 'manager.py', '341': 'manager.py', '342': 'manager.py', '343': 'manager.py', '344': 'manager.py', '345': 'manager.py', '346': 'manager.py', '347': 'manager.py', '348': 'manager.py', '349': 'manager.py', '350': 'manager.py', '351': 'manager.py', '352': 'manager.py', '353': 'manager.py', '354': 'manager.py', '355': 'manager.py', '356': 'manager.py', '357': 'manager.py', '358': 'manager.py', '359': 'manager.py', '360': 'manager.py', '361': 'manager.py', '362': 'manager.py', '363': 'manager.py', '364': 'manager.py', '365': 'manager.py', '366': 'manager.py', '367': 'manager.py', '368': 'manager.py', '369': 'manager.py', '370': 'managerabc.py', '371': 'managerabc.py', '372': 'managerabc.py', '373': 'managerabc.py', '374': 'managerabc.py', '375': 'managerabc.py', '376': 'managerabc.py', '377': 'managerabc.py', '378': 'managerabc.py', '379': 'multikernelmanager.py', '380': 'multikernelmanager.py', '381': 'multikernelmanager.py', '382': 'multikernelmanager.py', '383': 'multikernelmanager.py', '384': 'multikernelmanager.py', '385': 'multikernelmanager.py', '386': 'multikernelmanager.py', '387': 'multikernelmanager.py', '388': 'multikernelmanager.py', '389': 'multikernelmanager.py', '390': 'multikernelmanager.py', '391': 'multikernelmanager.py', '392': 'multikernelmanager.py', '393': 'multikernelmanager.py', '394': 'multikernelmanager.py', '395': 'multikernelmanager.py', '396': 'multikernelmanager.py', '397': 'multikernelmanager.py', '398': 'multikernelmanager.py', '399': 'multikernelmanager.py', '400': 'multikernelmanager.py', '401': 'multikernelmanager.py', '402': 'multikernelmanager.py', '403': 'multikernelmanager.py', '404': 'multikernelmanager.py', '405': 'multikernelmanager.py', '406': 'multikernelmanager.py', '407': 'multikernelmanager.py', '408': 'multikernelmanager.py', '409': 'multikernelmanager.py', '410': 'multikernelmanager.py', '411': 'multikernelmanager.py', '412': 'multikernelmanager.py', '413': 'multikernelmanager.py', '414': 'multikernelmanager.py', '415': 'multikernelmanager.py', '416': 'multikernelmanager.py', '417': 'multikernelmanager.py', '418': 'multikernelmanager.py', '419': 'multikernelmanager.py', '420': 'multikernelmanager.py', '421': 'multikernelmanager.py', '422': 'multikernelmanager.py', '423': 'multikernelmanager.py', '424': 'multikernelmanager.py', '425': 'multikernelmanager.py', '426': 'restarter.py', '427': 'restarter.py', '428': 'restarter.py', '429': 'restarter.py', '430': 'restarter.py', '431': 'restarter.py', '432': 'restarter.py', '433': 'restarter.py', '434': 'runapp.py', '435': 'runapp.py', '436': 'runapp.py', '437': 'runapp.py', '438': 'runapp.py', '439': 'runapp.py', '440': 'session.py', '441': 'session.py', '442': 'session.py', '443': 'session.py', '444': 'session.py', '445': 'session.py', '446': 'session.py', '447': 'session.py', '448': 'session.py', '449': 'session.py', '450': 'session.py', '451': 'session.py', '452': 'session.py', '453': 'session.py', '454': 'session.py', '455': 'session.py', '456': 'session.py', '457': 'session.py', '458': 'session.py', '459': 'session.py', '460': 'session.py', '461': 'session.py', '462': 'session.py', '463': 'session.py', '464': 'session.py', '465': 'session.py', '466': 'session.py', '467': 'session.py', '468': 'session.py', '469': 'session.py', '470': 'session.py', '471': 'session.py', '472': 'session.py', '473': 'session.py', '474': 'session.py', '475': 'session.py', '476': 'session.py', '477': 'session.py', '478': 'session.py', '479': 'session.py', '480': 'session.py', '481': 'session.py', '482': 'session.py', '483': 'session.py', '484': 'session.py', '485': 'session.py', '486': 'session.py', '487': 'session.py', '488': 'session.py', '489': 'forward.py', '490': 'forward.py', '491': 'forward.py', '492': 'forward.py', '493': 'forward.py', '494': 'tunnel.py', '495': 'tunnel.py', '496': 'tunnel.py', '497': 'tunnel.py', '498': 'tunnel.py', '499': 'tunnel.py', '500': 'tunnel.py', '501': 'tunnel.py', '502': 'tunnel.py', '503': 'tunnel.py', '504': 'tunnel.py', '505': 'tunnel.py', '506': 'signalkernel.py', '507': 'signalkernel.py', '508': 'signalkernel.py', '509': 'signalkernel.py', '510': 'signalkernel.py', '511': 'signalkernel.py', '512': 'test_adapter.py', '513': 'test_adapter.py', '514': 'test_adapter.py', '515': 'test_adapter.py', '516': 'test_adapter.py', '517': 'test_adapter.py', '518': 'test_adapter.py', '519': 'test_adapter.py', '520': 'test_adapter.py', '521': 'test_adapter.py', '522': 'test_adapter.py', '523': 'test_adapter.py', '524': 'test_adapter.py', '525': 'test_adapter.py', '526': 'test_adapter.py', '527': 'test_adapter.py', '528': 'test_adapter.py', '529': 'test_adapter.py', '530': 'test_adapter.py', '531': 'test_adapter.py', '532': 'test_adapter.py', '533': 'test_adapter.py', '534': 'test_adapter.py', '535': 'test_adapter.py', '536': 'test_adapter.py', '537': 'test_adapter.py', '538': 'test_adapter.py', '539': 'test_adapter.py', '540': 'test_adapter.py', '541': 'test_adapter.py', '542': 'test_adapter.py', '543': 'test_adapter.py', '544': 'test_adapter.py', '545': 'test_adapter.py', '546': 'test_adapter.py', '547': 'test_client.py', '548': 'test_client.py', '549': 'test_client.py', '550': 'test_client.py', '551': 'test_client.py', '552': 'test_client.py', '553': 'test_client.py', '554': 'test_client.py', '555': 'test_client.py', '556': 'test_client.py', '557': 'test_connect.py', '558': 'test_connect.py', '559': 'test_connect.py', '560': 'test_connect.py', '561': 'test_connect.py', '562': 'test_connect.py', '563': 'test_connect.py', '564': 'test_connect.py', '565': 'test_connect.py', '566': 'test_connect.py', '567': 'test_connect.py', '568': 'test_connect.py', '569': 'test_connect.py', '570': 'test_connect.py', '571': 'test_connect.py', '572': 'test_connect.py', '573': 'test_connect.py', '574': 'test_connect.py', '575': 'test_jsonutil.py', '576': 'test_jsonutil.py', '577': 'test_jsonutil.py', '578': 'test_jsonutil.py', '579': 'test_kernelapp.py', '580': 'test_kernelapp.py', '581': 'test_kernelmanager.py', '582': 'test_kernelmanager.py', '583': 'test_kernelmanager.py', '584': 'test_kernelmanager.py', '585': 'test_kernelmanager.py', '586': 'test_kernelmanager.py', '587': 'test_kernelmanager.py', '588': 'test_kernelmanager.py', '589': 'test_kernelmanager.py', '590': 'test_kernelmanager.py', '591': 'test_kernelmanager.py', '592': 'test_kernelmanager.py', '593': 'test_kernelmanager.py', '594': 'test_kernelmanager.py', '595': 'test_kernelmanager.py', '596': 'test_kernelmanager.py', '597': 'test_kernelmanager.py', '598': 'test_kernelmanager.py', '599': 'test_kernelmanager.py', '600': 'test_kernelmanager.py', '601': 'test_kernelmanager.py', '602': 'test_kernelmanager.py', '603': 'test_kernelmanager.py', '604': 'test_kernelmanager.py', '605': 'test_kernelmanager.py', '606': 'test_kernelmanager.py', '607': 'test_kernelmanager.py', '608': 'test_kernelmanager.py', '609': 'test_kernelmanager.py', '610': 'test_kernelmanager.py', '611': 'test_kernelmanager.py', '612': 'test_kernelmanager.py', '613': 'test_kernelmanager.py', '614': 'test_kernelmanager.py', '615': 'test_kernelmanager.py', '616': 'test_kernelspec.py', '617': 'test_kernelspec.py', '618': 'test_kernelspec.py', '619': 'test_kernelspec.py', '620': 'test_kernelspec.py', '621': 'test_kernelspec.py', '622': 'test_kernelspec.py', '623': 'test_kernelspec.py', '624': 'test_kernelspec.py', '625': 'test_kernelspec.py', '626': 'test_kernelspec.py', '627': 'test_kernelspec.py', '628': 'test_kernelspec.py', '629': 'test_kernelspec.py', '630': 'test_kernelspec.py', '631': 'test_kernelspec.py', '632': 'test_kernelspec.py', '633': 'test_kernelspec.py', '634': 'test_localinterfaces.py', '635': 'test_manager.py', '636': 'test_multikernelmanager.py', '637': 'test_multikernelmanager.py', '638': 'test_multikernelmanager.py', '639': 'test_multikernelmanager.py', '640': 'test_multikernelmanager.py', '641': 'test_multikernelmanager.py', '642': 'test_multikernelmanager.py', '643': 'test_multikernelmanager.py', '644': 'test_multikernelmanager.py', '645': 'test_multikernelmanager.py', '646': 'test_multikernelmanager.py', '647': 'test_multikernelmanager.py', '648': 'test_multikernelmanager.py', '649': 'test_multikernelmanager.py', '650': 'test_multikernelmanager.py', '651': 'test_multikernelmanager.py', '652': 'test_multikernelmanager.py', '653': 'test_multikernelmanager.py', '654': 'test_multikernelmanager.py', '655': 'test_multikernelmanager.py', '656': 'test_multikernelmanager.py', '657': 'test_multikernelmanager.py', '658': 'test_multikernelmanager.py', '659': 'test_multikernelmanager.py', '660': 'test_multikernelmanager.py', '661': 'test_multikernelmanager.py', '662': 'test_multikernelmanager.py', '663': 'test_multikernelmanager.py', '664': 'test_multikernelmanager.py', '665': 'test_multikernelmanager.py', '666': 'test_multikernelmanager.py', '667': 'test_multikernelmanager.py', '668': 'test_multikernelmanager.py', '669': 'test_public_api.py', '670': 'test_public_api.py', '671': 'test_public_api.py', '672': 'test_public_api.py', '673': 'test_session.py', '674': 'test_session.py', '675': 'test_session.py', '676': 'test_session.py', '677': 'test_session.py', '678': 'test_session.py', '679': 'test_session.py', '680': 'test_session.py', '681': 'test_session.py', '682': 'test_session.py', '683': 'test_session.py', '684': 'test_session.py', '685': 'test_session.py', '686': 'test_session.py', '687': 'test_session.py', '688': 'test_session.py', '689': 'test_session.py', '690': 'test_session.py', '691': 'test_session.py', '692': 'test_session.py', '693': 'test_session.py', '694': 'test_session.py', '695': 'test_session.py', '696': 'test_session.py', '697': 'test_session.py', '698': 'test_session.py', '699': 'test_session.py', '700': 'test_session.py', '701': 'test_ssh.py', '702': 'utils.py', '703': 'utils.py', '704': 'utils.py', '705': 'utils.py', '706': 'utils.py', '707': 'utils.py', '708': 'utils.py', '709': 'utils.py', '710': 'utils.py', '711': 'utils.py', '712': 'utils.py', '713': 'threaded.py', '714': 'threaded.py', '715': 'threaded.py', '716': 'threaded.py', '717': 'threaded.py', '718': 'threaded.py', '719': 'threaded.py', '720': 'threaded.py', '721': 'threaded.py', '722': 'threaded.py', '723': 'threaded.py', '724': 'threaded.py', '725': 'threaded.py', '726': 'threaded.py', '727': 'threaded.py', '728': 'threaded.py', '729': 'threaded.py', '730': 'threaded.py', '731': 'threaded.py', '732': 'threaded.py', '733': 'threaded.py', '734': 'threaded.py', '735': 'threaded.py', '736': 'threaded.py', '737': 'threaded.py', '738': 'threaded.py', '739': 'win_interrupt.py', '740': 'win_interrupt.py', '741': 'win_interrupt.py', '742': 'setup.py', '743': 'setup.py'}, 'execution_paths': [['135', '131'], ['135', '128', '83'], ['135', '128', '109'], ['135', '128', '132'], ['135', '128', '730'], ['135', '128', '718'], ['135', '130', '145'], ['135', '145'], ['133', '86'], ['133', '357', '354', '347'], ['133', '112'], ['133', '732'], ['133', '140'], ['133', '412'], ['133', '373'], ['136', '132'], ['213', '214', '441'], ['213', '214', '188'], ['215', '453'], ['215', '716'], ['215', '726', '737', '728', '729'], ['215', '392'], ['215', '457', '459', '450'], ['215', '457', '459', '244'], ['215', '457', '465'], ['215', '81'], ['215', '107'], ['215', '127', '126'], ['215', '485', '457', '459', '450'], ['215', '485', '457', '459', '244'], ['215', '485', '457', '465'], ['215', '485', '441'], ['215', '278'], ['215', '509'], ['298', '739', '741'], ['298', '718'], ['298', '132'], ['298', '730'], ['298', '83'], ['298', '109'], ['190', '504', '498', '494'], ['190', '504', '499', '476', '444'], ['190', '504', '499', '476', '477', '478'], ['190', '504', '499', '520', '476', '444'], ['190', '504', '499', '520', '476', '477', '478'], ['190', '504', '499', '520', '534', '476', '444'], ['190', '504', '499', '520', '534', '476', '477', '478'], ['190', '504', '499', '534', '476', '444'], ['190', '504', '499', '534', '476', '477', '478'], ['190', '504', '499', '534', '520', '476', '444'], ['190', '504', '499', '534', '520', '476', '477', '478'], ['190', '504', '499', '496'], ['190', '501', '494'], ['190', '501', '497'], ['190', '503', '83'], ['190', '503', '211'], ['190', '503', '109'], ['190', '503', '132'], ['190', '503', '718'], ['190', '503', '730'], ['198', '441'], ['198', '457', '459', '450'], ['198', '457', '459', '244'], ['198', '457', '465'], ['199', '208'], ['398', '396', '424', '397'], ['398', '396', '424', '395'], ['399', '396', '424', '397'], ['399', '396', '424', '395'], ['393', '413'], ['423', '415', '380'], ['423', '415', '414'], ['421', '416'], ['421', '410', '394'], ['420', '418'], ['420', '416'], ['420', '408'], ['420', '410', '394'], ['420', '413'], ['389', '415', '380'], ['389', '415', '414'], ['387', '416'], ['387', '410', '394'], ['384', '410', '394'], ['388', '410', '394'], ['385', '410', '394'], ['386', '418'], ['386', '402'], ['386', '383', '410', '394'], ['386', '416'], ['386', '413'], ['731', '727'], ['714', '125'], ['714', '715'], ['714', '713'], ['724', '720'], ['724', '713'], ['724', '716'], ['724', '722', '150'], ['725', '86'], ['725', '357', '354', '347'], ['725', '112'], ['725', '732'], ['725', '140'], ['725', '721', '718'], ['725', '412'], ['725', '373'], ['443', '447'], ['469', '446'], ['463', '447'], ['462', '465'], ['470', '465'], ['484', '474', '483'], ['484', '474', '242', '243', '240'], ['484', '474', '50', '450'], ['484', '474', '458', '460'], ['449', '453'], ['449', '440'], ['265', '264'], ['259', '272', '258', '257'], ['259', '272', '258', '256'], ['261', '275', '268'], ['261', '275', '257'], ['262', '276'], ['245', '254', '253'], ['247', '585'], ['247', '246'], ['53', '55'], ['53', '56'], ['53', '57'], ['53', '54'], ['48', '46'], ['75', '49'], ['70', '51'], ['77', '52', '51'], ['77', '51'], ['47', '46'], ['308', '317'], ['310', '318', '301', '305', '309', '314'], ['310', '318', '301', '305', '309', '311'], ['310', '318', '301', '305', '309', '316'], ['310', '318', '301', '305', '309', '299'], ['310', '318', '301', '305', '300'], ['310', '318', '301', '304', '309', '314'], ['310', '318', '301', '304', '309', '311'], ['310', '318', '301', '304', '309', '316'], ['310', '318', '301', '304', '309', '299'], ['310', '318', '301', '304', '300'], ['310', '318', '301', '306', '300'], ['310', '318', '301', '306', '309', '314'], ['310', '318', '301', '306', '309', '311'], ['310', '318', '301', '306', '309', '316'], ['310', '318', '301', '306', '309', '299'], ['310', '318', '301', '302'], ['310', '318', '301', '307', '314'], ['310', '318', '301', '307', '316'], ['310', '318', '301', '307', '311'], ['310', '318', '301', '299'], ['310', '318', '301', '303', '311'], ['434', '214', '441'], ['434', '214', '188'], ['438', '218'], ['437', '223', '219', '209', '212', '197'], ['437', '223', '219', '209', '210', '195', '315'], ['437', '223', '219', '209', '210', '197'], ['437', '223', '220', '315'], ['437', '223', '222', '212', '197'], ['437', '223', '222', '209', '212', '197'], ['437', '223', '222', '209', '210', '195', '315'], ['437', '223', '222', '209', '210', '197'], ['437', '223', '222', '315'], ['437', '223', '221', '255'], ['437', '223', '221', '315'], ['437', '436', '167', '476', '444'], ['437', '436', '167', '476', '477', '478'], ['437', '436', '167', '520', '476', '444'], ['437', '436', '167', '520', '476', '477', '478'], ['437', '436', '167', '520', '534', '476', '444'], ['437', '436', '167', '520', '534', '476', '477', '478'], ['437', '436', '167', '534', '476', '444'], ['437', '436', '167', '534', '476', '477', '478'], ['437', '436', '167', '534', '520', '476', '444'], ['437', '436', '167', '534', '520', '476', '477', '478'], ['437', '436', '137'], ['437', '436', '146'], ['437', '436', '158'], ['437', '435', '411'], ['437', '435', '355', '476', '444'], ['437', '435', '355', '476', '477', '478'], ['437', '435', '355', '338', '192', '196'], ['437', '435', '355', '192', '196'], ['437', '435', '355', '88'], ['437', '435', '355', '354', '347'], ['437', '435', '355', '740'], ['437', '435', '355', '114'], ['437', '435', '355', '480', '476', '444'], ['437', '435', '355', '480', '476', '477', '478'], ['437', '435', '355', '480', '482', '483'], ['437', '435', '355', '480', '440'], ['437', '435', '355', '480', '50', '450'], ['437', '435', '355', '520', '476', '444'], ['437', '435', '355', '520', '476', '477', '478'], ['437', '435', '355', '520', '534', '476', '444'], ['437', '435', '355', '520', '534', '476', '477', '478'], ['437', '435', '355', '534', '476', '444'], ['437', '435', '355', '534', '476', '477', '478'], ['437', '435', '355', '534', '520', '476', '444'], ['437', '435', '355', '534', '520', '476', '477', '478'], ['437', '435', '355', '365', '354', '347'], ['437', '435', '355', '734', '738'], ['437', '435', '372'], ['292', '254', '253'], ['286', '254', '253'], ['295', '254', '253'], ['289', '254', '253'], ['282', '280', '254', '253'], ['282', '281', '254', '253'], ['282', '284', '254', '253'], ['282', '283', '254', '253'], ['291', '290'], ['291', '439', '122', '117', '124'], ['291', '439', '122', '120', '156'], ['291', '439', '122', '120', '158'], ['291', '439', '122', '121', '162', '476', '444'], ['291', '439', '122', '121', '162', '476', '477', '478'], ['291', '439', '122', '121', '162', '520', '476', '444'], ['291', '439', '122', '121', '162', '520', '476', '477', '478'], ['291', '439', '122', '121', '162', '520', '534', '476', '444'], ['291', '439', '122', '121', '162', '520', '534', '476', '477', '478'], ['291', '439', '122', '121', '162', '534', '476', '444'], ['291', '439', '122', '121', '162', '534', '476', '477', '478'], ['291', '439', '122', '121', '162', '534', '520', '476', '444'], ['291', '439', '122', '121', '162', '534', '520', '476', '477', '478'], ['291', '439', '122', '121', '113'], ['291', '439', '122', '121', '87'], ['291', '439', '122', '118'], ['291', '439', '122', '119', '118'], ['291', '439', '122', '357', '354', '347'], ['291', '439', '122', '732'], ['291', '439', '122', '140'], ['291', '439', '122', '84', '82'], ['291', '439', '122', '86'], ['291', '439', '122', '412'], ['291', '439', '122', '373'], ['291', '439', '122', '110', '108'], ['291', '439', '122', '112'], ['291', '439', '97', '357', '354', '347'], ['291', '439', '97', '732'], ['291', '439', '97', '140'], ['291', '439', '97', '84', '82'], ['291', '439', '97', '94', '93'], ['291', '439', '97', '86'], ['291', '439', '97', '93'], ['291', '439', '97', '412'], ['291', '439', '97', '373'], ['291', '439', '97', '110', '108'], ['291', '439', '97', '91', '105'], ['291', '439', '97', '112'], ['291', '439', '97', '95', '100', '84', '82'], ['291', '439', '97', '95', '100', '110', '108'], ['291', '439', '97', '95', '98', '84', '82'], ['291', '439', '97', '95', '98', '110', '108'], ['291', '439', '97', '96', '162', '476', '444'], ['291', '439', '97', '96', '162', '476', '477', '478'], ['291', '439', '97', '96', '162', '520', '476', '444'], ['291', '439', '97', '96', '162', '520', '476', '477', '478'], ['291', '439', '97', '96', '162', '520', '534', '476', '444'], ['291', '439', '97', '96', '162', '520', '534', '476', '477', '478'], ['291', '439', '97', '96', '162', '534', '476', '444'], ['291', '439', '97', '96', '162', '534', '476', '477', '478'], ['291', '439', '97', '96', '162', '534', '520', '476', '444'], ['291', '439', '97', '96', '162', '534', '520', '476', '477', '478'], ['291', '439', '97', '96', '113'], ['291', '439', '97', '96', '87'], ['291', '89'], ['291', '115'], ['291', '432'], ['291', '288'], ['291', '141'], ['291', '720'], ['291', '711'], ['291', '735'], ['291', '293', '294'], ['291', '251', '249', '252', '250'], ['291', '251', '248'], ['291', '297', '162', '476', '444'], ['291', '297', '162', '476', '477', '478'], ['291', '297', '162', '520', '476', '444'], ['291', '297', '162', '520', '476', '477', '478'], ['291', '297', '162', '520', '534', '476', '444'], ['291', '297', '162', '520', '534', '476', '477', '478'], ['291', '297', '162', '534', '476', '444'], ['291', '297', '162', '534', '476', '477', '478'], ['291', '297', '162', '534', '520', '476', '444'], ['291', '297', '162', '534', '520', '476', '477', '478'], ['345', '254', '253'], ['334', '200'], ['334', '337', '192', '196'], ['330', '331', '325', '332', '354', '347'], ['330', '331', '325', '354', '347'], ['330', '331', '325', '324', '329', '354', '347'], ['330', '331', '325', '326'], ['330', '331', '350', '200'], ['330', '331', '350', '337', '192', '196'], ['330', '331', '350', '201', '211'], ['330', '331', '368'], ['330', '331', '349', '350', '200'], ['330', '331', '349', '350', '337', '192', '196'], ['330', '331', '349', '350', '201', '211'], ['330', '331', '362', '476', '444'], ['330', '331', '362', '476', '477', '478'], ['330', '331', '362', '338', '192', '196'], ['330', '331', '362', '192', '196'], ['330', '331', '362', '88'], ['330', '331', '362', '114'], ['330', '331', '362', '480', '476', '444'], ['330', '331', '362', '480', '476', '477', '478'], ['330', '331', '362', '480', '482', '483'], ['330', '331', '362', '480', '440'], ['330', '331', '362', '480', '50', '450'], ['330', '331', '362', '520', '476', '444'], ['330', '331', '362', '520', '476', '477', '478'], ['330', '331', '362', '520', '534', '476', '444'], ['330', '331', '362', '520', '534', '476', '477', '478'], ['330', '331', '362', '534', '476', '444'], ['330', '331', '362', '534', '476', '477', '478'], ['330', '331', '362', '534', '520', '476', '444'], ['330', '331', '362', '534', '520', '476', '477', '478'], ['330', '331', '362', '734', '738'], ['330', '331', '327', '324', '329', '354', '347'], ['330', '331', '327', '325', '332', '354', '347'], ['330', '331', '327', '325', '354', '347'], ['330', '331', '327', '325', '324', '329', '354', '347'], ['330', '331', '327', '325', '326'], ['330', '331', '327', '326'], ['330', '202', '200'], ['330', '333', '359', '338', '192', '196'], ['330', '333', '359', '367'], ['330', '333', '360', '314'], ['330', '333', '360', '312'], ['330', '333', '360', '341'], ['330', '333', '360', '212', '197'], ['330', '333', '360', '353', '369'], ['330', '333', '360', '353', '358', '253'], ['330', '333', '360', '353', '212', '197'], ['330', '333', '326'], ['328', '332', '354', '347'], ['328', '476', '444'], ['328', '476', '477', '478'], ['328', '338', '192', '196'], ['328', '192', '196'], ['328', '88'], ['328', '354', '347'], ['328', '740'], ['328', '114'], ['328', '480', '476', '444'], ['328', '480', '476', '477', '478'], ['328', '480', '482', '483'], ['328', '480', '440'], ['328', '480', '50', '450'], ['328', '520', '476', '444'], ['328', '520', '476', '477', '478'], ['328', '520', '534', '476', '444'], ['328', '520', '534', '476', '477', '478'], ['328', '534', '476', '444'], ['328', '534', '476', '477', '478'], ['328', '534', '520', '476', '444'], ['328', '534', '520', '476', '477', '478'], ['328', '734', '738'], ['322', '331', '325', '332', '354', '347'], ['322', '331', '325', '354', '347'], ['322', '331', '325', '324', '329', '354', '347'], ['322', '331', '325', '326'], ['322', '331', '350', '200'], ['322', '331', '350', '337', '192', '196'], ['322', '331', '350', '201', '211'], ['322', '331', '368'], ['322', '331', '349', '350', '200'], ['322', '331', '349', '350', '337', '192', '196'], ['322', '331', '349', '350', '201', '211'], ['322', '331', '362', '476', '444'], ['322', '331', '362', '476', '477', '478'], ['322', '331', '362', '338', '192', '196'], ['322', '331', '362', '192', '196'], ['322', '331', '362', '88'], ['322', '331', '362', '114'], ['322', '331', '362', '480', '476', '444'], ['322', '331', '362', '480', '476', '477', '478'], ['322', '331', '362', '480', '482', '483'], ['322', '331', '362', '480', '440'], ['322', '331', '362', '480', '50', '450'], ['322', '331', '362', '520', '476', '444'], ['322', '331', '362', '520', '476', '477', '478'], ['322', '331', '362', '520', '534', '476', '444'], ['322', '331', '362', '520', '534', '476', '477', '478'], ['322', '331', '362', '534', '476', '444'], ['322', '331', '362', '534', '476', '477', '478'], ['322', '331', '362', '534', '520', '476', '444'], ['322', '331', '362', '534', '520', '476', '477', '478'], ['322', '331', '362', '734', '738'], ['322', '331', '327', '324', '329', '354', '347'], ['322', '331', '327', '325', '332', '354', '347'], ['322', '331', '327', '325', '354', '347'], ['322', '331', '327', '325', '324', '329', '354', '347'], ['322', '331', '327', '325', '326'], ['322', '331', '327', '326'], ['322', '319', '320', '254', '253'], ['322', '319', '320', '188'], ['322', '351', '208'], ['322', '351', '212', '197'], ['322', '333', '359', '338', '192', '196'], ['322', '333', '359', '367'], ['322', '333', '360', '314'], ['322', '333', '360', '312'], ['322', '333', '360', '341'], ['322', '333', '360', '212', '197'], ['322', '333', '360', '353', '369'], ['322', '333', '360', '353', '358', '253'], ['322', '333', '360', '353', '212', '197'], ['322', '333', '326'], ['321', '323', '320', '254', '253'], ['321', '323', '320', '188'], ['321', '323', '366', '359', '338', '192', '196'], ['321', '323', '366', '359', '367'], ['321', '323', '366', '360', '314'], ['321', '323', '366', '360', '312'], ['321', '323', '366', '360', '341'], ['321', '323', '366', '360', '212', '197'], ['321', '323', '366', '360', '353', '369'], ['321', '323', '366', '360', '353', '358', '253'], ['321', '323', '366', '360', '353', '212', '197'], ['321', '323', '366', '347'], ['321', '323', '351', '208'], ['321', '323', '351', '212', '197'], ['321', '323', '364', '346', '354', '347'], ['321', '323', '364', '346', '365', '354', '347'], ['321', '323', '364', '350', '200'], ['321', '323', '364', '350', '337', '192', '196'], ['321', '323', '364', '350', '201', '211'], ['321', '323', '364', '368'], ['321', '323', '364', '349', '350', '200'], ['321', '323', '364', '349', '350', '337', '192', '196'], ['321', '323', '364', '349', '350', '201', '211'], ['321', '323', '364', '362', '476', '444'], ['321', '323', '364', '362', '476', '477', '478'], ['321', '323', '364', '362', '338', '192', '196'], ['321', '323', '364', '362', '192', '196'], ['321', '323', '364', '362', '88'], ['321', '323', '364', '362', '114'], ['321', '323', '364', '362', '480', '476', '444'], ['321', '323', '364', '362', '480', '476', '477', '478'], ['321', '323', '364', '362', '480', '482', '483'], ['321', '323', '364', '362', '480', '440'], ['321', '323', '364', '362', '480', '50', '450'], ['321', '323', '364', '362', '520', '476', '444'], ['321', '323', '364', '362', '520', '476', '477', '478'], ['321', '323', '364', '362', '520', '534', '476', '444'], ['321', '323', '364', '362', '520', '534', '476', '477', '478'], ['321', '323', '364', '362', '534', '476', '444'], ['321', '323', '364', '362', '534', '476', '477', '478'], ['321', '323', '364', '362', '534', '520', '476', '444'], ['321', '323', '364', '362', '534', '520', '476', '477', '478'], ['321', '323', '364', '362', '734', '738'], ['321', '323', '364', '352', '354', '347'], ['321', '323', '364', '352', '346', '354', '347'], ['321', '323', '364', '352', '346', '365', '354', '347'], ['321', '323', '364', '352', '357', '354', '347'], ['170', '167', '476', '444'], ['170', '167', '476', '477', '478'], ['170', '167', '520', '476', '444'], ['170', '167', '520', '476', '477', '478'], ['170', '167', '520', '534', '476', '444'], ['170', '167', '520', '534', '476', '477', '478'], ['170', '167', '534', '476', '444'], ['170', '167', '534', '476', '477', '478'], ['170', '167', '534', '520', '476', '444'], ['170', '167', '534', '520', '476', '477', '478'], ['168', '196'], ['168', '723'], ['168', '206', '192', '196'], ['164', '196'], ['164', '723'], ['164', '205', '192', '196'], ['171', '196'], ['171', '723'], ['171', '207', '192', '196'], ['160', '196'], ['154', '196'], ['154', '723'], ['154', '203', '192', '196'], ['166', '476', '444'], ['166', '476', '477', '478'], ['166', '520', '476', '444'], ['166', '520', '476', '477', '478'], ['166', '520', '534', '476', '444'], ['166', '520', '534', '476', '477', '478'], ['166', '534', '476', '444'], ['166', '534', '476', '477', '478'], ['166', '534', '520', '476', '444'], ['166', '534', '520', '476', '477', '478'], ['80', '83'], ['85', '84', '82'], ['90', '125'], ['90', '161', '476', '444'], ['90', '161', '476', '477', '478'], ['90', '161', '520', '476', '444'], ['90', '161', '520', '476', '477', '478'], ['90', '161', '520', '534', '476', '444'], ['90', '161', '520', '534', '476', '477', '478'], ['90', '161', '534', '476', '444'], ['90', '161', '534', '476', '477', '478'], ['90', '161', '534', '520', '476', '444'], ['90', '161', '534', '520', '476', '477', '478'], ['90', '106', '109'], ['90', '153', '476', '444'], ['90', '153', '476', '477', '478'], ['90', '153', '520', '476', '444'], ['90', '153', '520', '476', '477', '478'], ['90', '153', '520', '534', '476', '444'], ['90', '153', '520', '534', '476', '477', '478'], ['90', '153', '534', '476', '444'], ['90', '153', '534', '476', '477', '478'], ['90', '153', '534', '520', '476', '444'], ['90', '153', '534', '520', '476', '477', '478'], ['90', '147', '139', '138'], ['90', '147', '188'], ['90', '147', '138'], ['90', '169', '476', '444'], ['90', '169', '476', '477', '478'], ['90', '169', '520', '476', '444'], ['90', '169', '520', '476', '477', '478'], ['90', '169', '520', '534', '476', '444'], ['90', '169', '520', '534', '476', '477', '478'], ['90', '169', '534', '476', '444'], ['90', '169', '534', '476', '477', '478'], ['90', '169', '534', '520', '476', '444'], ['90', '169', '534', '520', '476', '477', '478'], ['90', '152', '476', '444'], ['90', '152', '476', '477', '478'], ['90', '152', '520', '476', '444'], ['90', '152', '520', '476', '477', '478'], ['90', '152', '520', '534', '476', '444'], ['90', '152', '520', '534', '476', '477', '478'], ['90', '152', '534', '476', '444'], ['90', '152', '534', '476', '477', '478'], ['90', '152', '534', '520', '476', '444'], ['90', '152', '534', '520', '476', '477', '478'], ['90', '167', '476', '444'], ['90', '167', '476', '477', '478'], ['90', '167', '520', '476', '444'], ['90', '167', '520', '476', '477', '478'], ['90', '167', '520', '534', '476', '444'], ['90', '167', '520', '534', '476', '477', '478'], ['90', '167', '534', '476', '444'], ['90', '167', '534', '476', '477', '478'], ['90', '167', '534', '520', '476', '444'], ['90', '167', '534', '520', '476', '477', '478'], ['90', '91', '105'], ['90', '163', '476', '444'], ['90', '163', '476', '477', '478'], ['90', '163', '520', '476', '444'], ['90', '163', '520', '476', '477', '478'], ['90', '163', '520', '534', '476', '444'], ['90', '163', '520', '534', '476', '477', '478'], ['90', '163', '534', '476', '444'], ['90', '163', '534', '476', '477', '478'], ['90', '163', '534', '520', '476', '444'], ['90', '163', '534', '520', '476', '477', '478'], ['90', '155', '476', '444'], ['90', '155', '476', '477', '478'], ['90', '155', '520', '476', '444'], ['90', '155', '520', '476', '477', '478'], ['90', '155', '520', '534', '476', '444'], ['90', '155', '520', '534', '476', '477', '478'], ['90', '155', '534', '476', '444'], ['90', '155', '534', '476', '477', '478'], ['90', '155', '534', '520', '476', '444'], ['90', '155', '534', '520', '476', '477', '478'], ['90', '155', '148'], ['99', '84', '82'], ['99', '110', '108'], ['101', '84', '82'], ['101', '110', '108'], ['102', '196'], ['104', '150'], ['104', '103', '86'], ['104', '103', '357', '354', '347'], ['104', '103', '112'], ['104', '103', '732'], ['104', '103', '140'], ['104', '103', '412'], ['104', '103', '373'], ['104', '84', '82'], ['104', '110', '108'], ['238', '430', '433'], ['238', '430', '428'], ['225', '205', '192', '196'], ['225', '206', '192', '196'], ['225', '207', '192', '196'], ['225', '204', '192', '196'], ['225', '203', '192', '196'], ['225', '226', '233'], ['225', '320', '254', '253'], ['225', '320', '188'], ['225', '235', '426'], ['231', '354', '347'], ['224', '205', '192', '196'], ['224', '206', '192', '196'], ['224', '207', '192', '196'], ['224', '204', '192', '196'], ['224', '203', '192', '196'], ['224', '226', '233'], ['224', '319', '320', '254', '253'], ['224', '319', '320', '188'], ['224', '234', '235', '426'], ['228', '354', '347'], ['111', '110', '108'], ['116', '125'], ['116', '161', '476', '444'], ['116', '161', '476', '477', '478'], ['116', '161', '520', '476', '444'], ['116', '161', '520', '476', '477', '478'], ['116', '161', '520', '534', '476', '444'], ['116', '161', '520', '534', '476', '477', '478'], ['116', '161', '534', '476', '444'], ['116', '161', '534', '476', '477', '478'], ['116', '161', '534', '520', '476', '444'], ['116', '161', '534', '520', '476', '477', '478'], ['116', '106', '109'], ['116', '117', '124'], ['116', '147', '139', '138'], ['116', '147', '188'], ['116', '147', '138'], ['116', '153', '476', '444'], ['116', '153', '476', '477', '478'], ['116', '153', '520', '476', '444'], ['116', '153', '520', '476', '477', '478'], ['116', '153', '520', '534', '476', '444'], ['116', '153', '520', '534', '476', '477', '478'], ['116', '153', '534', '476', '444'], ['116', '153', '534', '476', '477', '478'], ['116', '153', '534', '520', '476', '444'], ['116', '153', '534', '520', '476', '477', '478'], ['116', '169', '476', '444'], ['116', '169', '476', '477', '478'], ['116', '169', '520', '476', '444'], ['116', '169', '520', '476', '477', '478'], ['116', '169', '520', '534', '476', '444'], ['116', '169', '520', '534', '476', '477', '478'], ['116', '169', '534', '476', '444'], ['116', '169', '534', '476', '477', '478'], ['116', '169', '534', '520', '476', '444'], ['116', '169', '534', '520', '476', '477', '478'], ['116', '152', '476', '444'], ['116', '152', '476', '477', '478'], ['116', '152', '520', '476', '444'], ['116', '152', '520', '476', '477', '478'], ['116', '152', '520', '534', '476', '444'], ['116', '152', '520', '534', '476', '477', '478'], ['116', '152', '534', '476', '444'], ['116', '152', '534', '476', '477', '478'], ['116', '152', '534', '520', '476', '444'], ['116', '152', '534', '520', '476', '477', '478'], ['116', '167', '476', '444'], ['116', '167', '476', '477', '478'], ['116', '167', '520', '476', '444'], ['116', '167', '520', '476', '477', '478'], ['116', '167', '520', '534', '476', '444'], ['116', '167', '520', '534', '476', '477', '478'], ['116', '167', '534', '476', '444'], ['116', '167', '534', '476', '477', '478'], ['116', '167', '534', '520', '476', '444'], ['116', '167', '534', '520', '476', '477', '478'], ['116', '163', '476', '444'], ['116', '163', '476', '477', '478'], ['116', '163', '520', '476', '444'], ['116', '163', '520', '476', '477', '478'], ['116', '163', '520', '534', '476', '444'], ['116', '163', '520', '534', '476', '477', '478'], ['116', '163', '534', '476', '444'], ['116', '163', '534', '476', '477', '478'], ['116', '163', '534', '520', '476', '444'], ['116', '163', '534', '520', '476', '477', '478'], ['116', '155', '476', '444'], ['116', '155', '476', '477', '478'], ['116', '155', '520', '476', '444'], ['116', '155', '520', '476', '477', '478'], ['116', '155', '520', '534', '476', '444'], ['116', '155', '520', '534', '476', '477', '478'], ['116', '155', '534', '476', '444'], ['116', '155', '534', '476', '477', '478'], ['116', '155', '534', '520', '476', '444'], ['116', '155', '534', '520', '476', '477', '478'], ['116', '155', '148'], ['123', '110', '108'], ['123', '150'], ['123', '84', '82'], ['123', '165', '86'], ['123', '165', '357', '354', '347'], ['123', '165', '112'], ['123', '165', '732'], ['123', '165', '140'], ['123', '165', '412'], ['123', '165', '373'], ['549', '705'], ['549', '711'], ['549', '712'], ['549', '260', '274', '269'], ['549', '260', '274', '257'], ['549', '260', '274', '255'], ['549', '260', '274', '267', '256'], ['549', '260', '274', '278'], ['549', '255'], ['549', '274', '269'], ['549', '274', '257'], ['549', '274', '255'], ['549', '274', '267', '256'], ['549', '274', '278'], ['553', '548'], ['554', '548'], ['551', '548'], ['555', '548'], ['550', '548'], ['556', '548'], ['678', '441'], ['678', '457', '459', '450'], ['678', '457', '459', '244'], ['678', '457', '465'], ['674', '673'], ['693', '476', '444'], ['693', '476', '477', '478'], ['693', '520', '476', '444'], ['693', '520', '476', '477', '478'], ['693', '520', '534', '476', '444'], ['693', '520', '534', '476', '477', '478'], ['693', '534', '476', '444'], ['693', '534', '476', '477', '478'], ['693', '534', '520', '476', '444'], ['693', '534', '520', '476', '477', '478'], ['696', '476', '444'], ['696', '476', '477', '478'], ['696', '475'], ['696', '482', '483'], ['696', '474', '483'], ['696', '474', '242', '243', '240'], ['696', '474', '50', '450'], ['696', '474', '458', '460'], ['696', '520', '476', '444'], ['696', '520', '476', '477', '478'], ['696', '520', '534', '476', '444'], ['696', '520', '534', '476', '477', '478'], ['696', '534', '476', '444'], ['696', '534', '476', '477', '478'], ['696', '534', '520', '476', '444'], ['696', '534', '520', '476', '477', '478'], ['694', '475'], ['694', '474', '483'], ['694', '474', '242', '243', '240'], ['694', '474', '50', '450'], ['694', '474', '458', '460'], ['694', '520', '476', '444'], ['694', '520', '476', '477', '478'], ['694', '520', '534', '476', '444'], ['694', '520', '534', '476', '477', '478'], ['694', '734', '738'], ['694', '88'], ['694', '534', '476', '444'], ['694', '534', '476', '477', '478'], ['694', '534', '520', '476', '444'], ['694', '534', '520', '476', '477', '478'], ['694', '478'], ['694', '476', '444'], ['694', '476', '477', '478'], ['694', '114'], ['694', '480', '476', '444'], ['694', '480', '476', '477', '478'], ['694', '480', '482', '483'], ['694', '480', '440'], ['694', '480', '50', '450'], ['694', '479', '475'], ['694', '479', '474', '483'], ['694', '479', '474', '242', '243', '240'], ['694', '479', '474', '50', '450'], ['694', '479', '474', '458', '460'], ['680', '457', '459', '450'], ['680', '457', '459', '244'], ['680', '457', '465'], ['680', '441'], ['698', '480', '476', '444'], ['698', '480', '476', '477', '478'], ['698', '480', '482', '483'], ['698', '480', '440'], ['698', '480', '50', '450'], ['698', '441'], ['699', '445', '450'], ['699', '477', '478'], ['692', '476', '444'], ['692', '476', '477', '478'], ['692', '520', '476', '444'], ['692', '520', '476', '477', '478'], ['692', '520', '534', '476', '444'], ['692', '520', '534', '476', '477', '478'], ['692', '534', '476', '444'], ['692', '534', '476', '477', '478'], ['692', '534', '520', '476', '444'], ['692', '534', '520', '476', '477', '478'], ['697', '457', '459', '450'], ['697', '457', '459', '244'], ['697', '457', '465'], ['697', '441'], ['700', '457', '459', '450'], ['700', '457', '459', '244'], ['700', '457', '465'], ['700', '441'], ['700', '458', '460'], ['687', '457', '459', '450'], ['687', '457', '459', '244'], ['687', '457', '465'], ['687', '441'], ['687', '458', '460'], ['681', '457', '459', '450'], ['681', '457', '459', '244'], ['681', '457', '465'], ['681', '441'], ['681', '675'], ['684', '457', '459', '450'], ['684', '457', '459', '244'], ['684', '457', '465'], ['684', '676'], ['684', '441'], ['682', '457', '459', '450'], ['682', '457', '459', '244'], ['682', '457', '465'], ['682', '441'], ['685', '457', '459', '450'], ['685', '457', '459', '244'], ['685', '457', '465'], ['685', '441'], ['683', '457', '459', '450'], ['683', '457', '459', '244'], ['683', '457', '465'], ['683', '441'], ['688', '679', '450'], ['688', '679', '242', '243', '240'], ['688', '441'], ['690', '679', '450'], ['690', '679', '242', '243', '240'], ['690', '441'], ['690', '457', '459', '450'], ['690', '457', '459', '244'], ['690', '457', '465'], ['689', '679', '450'], ['689', '679', '242', '243', '240'], ['689', '457', '459', '450'], ['689', '457', '459', '244'], ['689', '457', '465'], ['689', '441'], ['695', '476', '444'], ['695', '476', '477', '478'], ['695', '475'], ['695', '474', '483'], ['695', '474', '242', '243', '240'], ['695', '474', '50', '450'], ['695', '474', '458', '460'], ['695', '520', '476', '444'], ['695', '520', '476', '477', '478'], ['695', '520', '534', '476', '444'], ['695', '520', '534', '476', '477', '478'], ['695', '534', '476', '444'], ['695', '534', '476', '477', '478'], ['695', '534', '520', '476', '444'], ['695', '534', '520', '476', '477', '478'], ['695', '481', '483'], ['686', '473'], ['686', '441'], ['686', '458', '460'], ['701', '503', '83'], ['701', '503', '211'], ['701', '503', '109'], ['701', '503', '132'], ['701', '503', '718'], ['701', '503', '730'], ['580', '579'], ['709', '711'], ['710', '712'], ['704', '157'], ['704', '608'], ['704', '598'], ['704', '615'], ['704', '607'], ['704', '158'], ['704', '155', '476', '444'], ['704', '155', '476', '477', '478'], ['704', '155', '520', '476', '444'], ['704', '155', '520', '476', '477', '478'], ['704', '155', '520', '534', '476', '444'], ['704', '155', '520', '534', '476', '477', '478'], ['704', '155', '534', '476', '444'], ['704', '155', '534', '476', '477', '478'], ['704', '155', '534', '520', '476', '444'], ['704', '155', '534', '520', '476', '477', '478'], ['704', '155', '148'], ['516', '476', '444'], ['516', '476', '477', '478'], ['516', '457', '459', '450'], ['516', '457', '459', '244'], ['516', '457', '465'], ['516', '441'], ['516', '50', '450'], ['515', '51'], ['519', '441'], ['519', '457', '459', '450'], ['519', '457', '459', '244'], ['519', '457', '465'], ['513', '512'], ['533', '520', '476', '444'], ['533', '520', '476', '477', '478'], ['533', '520', '534', '476', '444'], ['533', '520', '534', '476', '477', '478'], ['533', '517'], ['528', '517'], ['528', '520', '476', '444'], ['528', '520', '476', '477', '478'], ['528', '520', '534', '476', '444'], ['528', '520', '534', '476', '477', '478'], ['532', '520', '476', '444'], ['532', '520', '476', '477', '478'], ['532', '520', '534', '476', '444'], ['532', '520', '534', '476', '477', '478'], ['532', '517'], ['525', '520', '476', '444'], ['525', '520', '476', '477', '478'], ['525', '520', '534', '476', '444'], ['525', '520', '534', '476', '477', '478'], ['525', '517'], ['524', '520', '476', '444'], ['524', '520', '476', '477', '478'], ['524', '520', '534', '476', '444'], ['524', '520', '534', '476', '477', '478'], ['524', '517'], ['522', '517'], ['522', '520', '476', '444'], ['522', '520', '476', '477', '478'], ['522', '520', '534', '476', '444'], ['522', '520', '534', '476', '477', '478'], ['521', '520', '476', '444'], ['521', '520', '476', '477', '478'], ['521', '520', '534', '476', '444'], ['521', '520', '534', '476', '477', '478'], ['521', '517'], ['531', '520', '476', '444'], ['531', '520', '476', '477', '478'], ['531', '520', '534', '476', '444'], ['531', '520', '534', '476', '477', '478'], ['531', '517'], ['529', '520', '476', '444'], ['529', '520', '476', '477', '478'], ['529', '520', '534', '476', '444'], ['529', '520', '534', '476', '477', '478'], ['529', '517'], ['530', '520', '476', '444'], ['530', '520', '476', '477', '478'], ['530', '520', '534', '476', '444'], ['530', '520', '534', '476', '477', '478'], ['530', '517'], ['527', '520', '476', '444'], ['527', '520', '476', '477', '478'], ['527', '520', '534', '476', '444'], ['527', '520', '534', '476', '477', '478'], ['527', '517'], ['523', '520', '476', '444'], ['523', '520', '476', '477', '478'], ['523', '520', '534', '476', '444'], ['523', '520', '534', '476', '477', '478'], ['523', '517'], ['526', '520', '476', '444'], ['526', '520', '476', '477', '478'], ['526', '520', '534', '476', '444'], ['526', '520', '534', '476', '477', '478'], ['526', '517'], ['514', '512'], ['546', '534', '476', '444'], ['546', '534', '476', '477', '478'], ['546', '534', '520', '476', '444'], ['546', '534', '520', '476', '477', '478'], ['546', '517'], ['544', '517'], ['544', '534', '476', '444'], ['544', '534', '476', '477', '478'], ['544', '534', '520', '476', '444'], ['544', '534', '520', '476', '477', '478'], ['545', '534', '476', '444'], ['545', '534', '476', '477', '478'], ['545', '534', '520', '476', '444'], ['545', '534', '520', '476', '477', '478'], ['545', '517'], ['538', '534', '476', '444'], ['538', '534', '476', '477', '478'], ['538', '534', '520', '476', '444'], ['538', '534', '520', '476', '477', '478'], ['538', '517'], ['536', '517'], ['536', '534', '476', '444'], ['536', '534', '476', '477', '478'], ['536', '534', '520', '476', '444'], ['536', '534', '520', '476', '477', '478'], ['535', '534', '476', '444'], ['535', '534', '476', '477', '478'], ['535', '534', '520', '476', '444'], ['535', '534', '520', '476', '477', '478'], ['535', '517'], ['541', '534', '476', '444'], ['541', '534', '476', '477', '478'], ['541', '534', '520', '476', '444'], ['541', '534', '520', '476', '477', '478'], ['541', '517'], ['542', '534', '476', '444'], ['542', '534', '476', '477', '478'], ['542', '534', '520', '476', '444'], ['542', '534', '520', '476', '477', '478'], ['542', '517'], ['540', '534', '476', '444'], ['540', '534', '476', '477', '478'], ['540', '534', '520', '476', '444'], ['540', '534', '520', '476', '477', '478'], ['540', '517'], ['543', '534', '476', '444'], ['543', '534', '476', '477', '478'], ['543', '534', '520', '476', '444'], ['543', '534', '520', '476', '477', '478'], ['543', '517'], ['537', '534', '476', '444'], ['537', '534', '476', '477', '478'], ['537', '534', '520', '476', '444'], ['537', '534', '520', '476', '477', '478'], ['537', '517'], ['539', '534', '476', '444'], ['539', '534', '476', '477', '478'], ['539', '534', '520', '476', '444'], ['539', '534', '520', '476', '477', '478'], ['539', '517'], ['570', '191', '211'], ['570', '191', '718'], ['570', '191', '132'], ['570', '191', '730'], ['570', '191', '83'], ['570', '191', '315'], ['570', '191', '109'], ['564', '558', '214', '441'], ['564', '558', '214', '188'], ['564', '191', '211'], ['564', '191', '718'], ['564', '191', '132'], ['564', '191', '730'], ['564', '191', '83'], ['564', '191', '315'], ['564', '191', '109'], ['564', '572', '219', '209', '212', '197'], ['564', '572', '219', '209', '210', '195', '315'], ['564', '572', '219', '209', '210', '197'], ['564', '457', '459', '450'], ['564', '457', '459', '244'], ['564', '457', '465'], ['564', '441'], ['564', '209', '212', '197'], ['564', '209', '210', '195', '315'], ['564', '209', '210', '197'], ['565', '558', '214', '441'], ['565', '558', '214', '188'], ['565', '191', '211'], ['565', '191', '718'], ['565', '191', '132'], ['565', '191', '730'], ['565', '191', '83'], ['565', '191', '315'], ['565', '191', '109'], ['565', '572', '219', '209', '212', '197'], ['565', '572', '219', '209', '210', '195', '315'], ['565', '572', '219', '209', '210', '197'], ['565', '457', '459', '450'], ['565', '457', '459', '244'], ['565', '457', '465'], ['565', '441'], ['565', '209', '212', '197'], ['565', '209', '210', '195', '315'], ['565', '209', '210', '197'], ['559', '558', '214', '441'], ['559', '558', '214', '188'], ['559', '191', '211'], ['559', '191', '718'], ['559', '191', '132'], ['559', '191', '730'], ['559', '191', '83'], ['559', '191', '315'], ['559', '191', '109'], ['559', '572', '219', '209', '212', '197'], ['559', '572', '219', '209', '210', '195', '315'], ['559', '572', '219', '209', '210', '197'], ['560', '558', '214', '441'], ['560', '558', '214', '188'], ['560', '572', '219', '209', '212', '197'], ['560', '572', '219', '209', '210', '195', '315'], ['560', '572', '219', '209', '210', '197'], ['560', '189'], ['562', '189'], ['563', '189'], ['561', '189'], ['568', '557', '188'], ['568', '212', '197'], ['567', '557', '188'], ['567', '202', '200'], ['567', '212', '197'], ['569', '573', '574'], ['634', '301', '305', '309', '314'], ['634', '301', '305', '309', '311'], ['634', '301', '305', '309', '316'], ['634', '301', '305', '309', '299'], ['634', '301', '305', '300'], ['634', '301', '304', '309', '314'], ['634', '301', '304', '309', '311'], ['634', '301', '304', '309', '316'], ['634', '301', '304', '309', '299'], ['634', '301', '304', '300'], ['634', '301', '306', '300'], ['634', '301', '306', '309', '314'], ['634', '301', '306', '309', '311'], ['634', '301', '306', '309', '316'], ['634', '301', '306', '309', '299'], ['634', '301', '302'], ['634', '301', '307', '314'], ['634', '301', '307', '316'], ['634', '301', '307', '311'], ['634', '301', '299'], ['634', '301', '303', '311'], ['668', '655', '392'], ['668', '655', '381', '254', '253'], ['668', '655', '381', '382', '425'], ['668', '657'], ['661', '655', '392'], ['661', '655', '381', '254', '253'], ['661', '655', '381', '382', '425'], ['666', '656'], ['666', '655', '392'], ['666', '655', '381', '254', '253'], ['666', '655', '381', '382', '425'], ['666', '315'], ['660', '657'], ['660', '654', '392'], ['660', '654', '381', '254', '253'], ['660', '654', '381', '382', '425'], ['659', '656'], ['659', '654', '392'], ['659', '654', '381', '254', '253'], ['659', '654', '381', '382', '425'], ['665', '657'], ['665', '655', '392'], ['665', '655', '381', '254', '253'], ['665', '655', '381', '382', '425'], ['664', '657'], ['664', '654', '392'], ['664', '654', '381', '254', '253'], ['664', '654', '381', '382', '425'], ['663', '667', '657'], ['663', '667', '655', '392'], ['663', '667', '655', '381', '254', '253'], ['663', '667', '655', '381', '382', '425'], ['663', '658', '667', '657'], ['663', '658', '667', '655', '392'], ['663', '658', '667', '655', '381', '254', '253'], ['663', '658', '667', '655', '381', '382', '425'], ['662', '667', '657'], ['662', '667', '655', '392'], ['662', '667', '655', '381', '254', '253'], ['662', '667', '655', '381', '382', '425'], ['662', '658', '667', '657'], ['662', '658', '667', '655', '392'], ['662', '658', '667', '655', '381', '254', '253'], ['662', '658', '667', '655', '381', '382', '425'], ['652', '642', '639', '379', '381', '254', '253'], ['652', '642', '639', '379', '381', '382', '425'], ['652', '642', '641'], ['653', '642', '639', '379', '381', '254', '253'], ['653', '642', '639', '379', '381', '382', '425'], ['653', '642', '641'], ['646', '639', '379', '381', '254', '253'], ['646', '639', '379', '381', '382', '425'], ['651', '639', '379', '381', '254', '253'], ['651', '639', '379', '381', '382', '425'], ['651', '640'], ['651', '315'], ['645', '641'], ['645', '638', '379', '381', '254', '253'], ['645', '638', '379', '381', '382', '425'], ['644', '638', '379', '381', '254', '253'], ['644', '638', '379', '381', '382', '425'], ['644', '640'], ['650', '639', '379', '381', '254', '253'], ['650', '639', '379', '381', '382', '425'], ['650', '641'], ['649', '641'], ['649', '638', '379', '381', '254', '253'], ['649', '638', '379', '381', '382', '425'], ['648', '643', '642', '639', '379', '381', '254', '253'], ['648', '643', '642', '639', '379', '381', '382', '425'], ['648', '643', '642', '641'], ['648', '642', '639', '379', '381', '254', '253'], ['648', '642', '639', '379', '381', '382', '425'], ['648', '642', '641'], ['647', '643', '642', '639', '379', '381', '254', '253'], ['647', '643', '642', '639', '379', '381', '382', '425'], ['647', '643', '642', '641'], ['647', '642', '639', '379', '381', '254', '253'], ['647', '642', '639', '379', '381', '382', '425'], ['647', '642', '641'], ['618', '254', '253'], ['618', '705'], ['618', '711'], ['618', '617'], ['619', '712'], ['622', '617'], ['622', '272', '258', '257'], ['622', '272', '258', '256'], ['623', '267', '256'], ['623', '617'], ['623', '274', '269'], ['623', '274', '257'], ['623', '274', '255'], ['623', '274', '267', '256'], ['623', '274', '278'], ['621', '273', '269'], ['621', '273', '274', '269'], ['621', '273', '274', '257'], ['621', '273', '274', '255'], ['621', '273', '274', '267', '256'], ['621', '273', '274', '278'], ['621', '273', '272', '258', '257'], ['621', '273', '272', '258', '256'], ['621', '617'], ['626', '272', '258', '257'], ['626', '272', '258', '256'], ['626', '617'], ['624', '275', '268'], ['624', '275', '257'], ['624', '272', '258', '257'], ['624', '272', '258', '256'], ['625', '275', '268'], ['625', '275', '257'], ['625', '272', '258', '257'], ['625', '272', '258', '256'], ['620', '275', '268'], ['620', '275', '257'], ['627', '617'], ['627', '277', '272', '258', '257'], ['627', '277', '272', '258', '256'], ['630', '257'], ['629', '631', '254', '253'], ['629', '273', '269'], ['629', '273', '274', '269'], ['629', '273', '274', '257'], ['629', '273', '274', '255'], ['629', '273', '274', '267', '256'], ['629', '273', '274', '278'], ['629', '273', '272', '258', '257'], ['629', '273', '272', '258', '256'], ['629', '274', '269'], ['629', '274', '257'], ['629', '274', '255'], ['629', '274', '267', '256'], ['629', '274', '278'], ['629', '254', '253'], ['633', '274', '269'], ['633', '274', '257'], ['633', '274', '255'], ['633', '274', '267', '256'], ['633', '274', '278'], ['632', '267', '256'], ['510', '236', '86'], ['510', '236', '357', '354', '347'], ['510', '236', '112'], ['510', '236', '239'], ['510', '236', '732'], ['510', '236', '363', '202', '200'], ['510', '236', '363', '366', '359', '338', '192', '196'], ['510', '236', '363', '366', '359', '367'], ['510', '236', '363', '366', '360', '314'], ['510', '236', '363', '366', '360', '312'], ['510', '236', '363', '366', '360', '341'], ['510', '236', '363', '366', '360', '212', '197'], ['510', '236', '363', '366', '360', '353', '369'], ['510', '236', '363', '366', '360', '353', '358', '253'], ['510', '236', '363', '366', '360', '353', '212', '197'], ['510', '236', '363', '366', '347'], ['510', '236', '363', '364', '346', '354', '347'], ['510', '236', '363', '364', '346', '365', '354', '347'], ['510', '236', '363', '364', '350', '200'], ['510', '236', '363', '364', '350', '337', '192', '196'], ['510', '236', '363', '364', '350', '201', '211'], ['510', '236', '363', '364', '368'], ['510', '236', '363', '364', '349', '350', '200'], ['510', '236', '363', '364', '349', '350', '337', '192', '196'], ['510', '236', '363', '364', '349', '350', '201', '211'], ['510', '236', '363', '364', '362', '476', '444'], ['510', '236', '363', '364', '362', '476', '477', '478'], ['510', '236', '363', '364', '362', '338', '192', '196'], ['510', '236', '363', '364', '362', '192', '196'], ['510', '236', '363', '364', '362', '88'], ['510', '236', '363', '364', '362', '114'], ['510', '236', '363', '364', '362', '480', '476', '444'], ['510', '236', '363', '364', '362', '480', '476', '477', '478'], ['510', '236', '363', '364', '362', '480', '482', '483'], ['510', '236', '363', '364', '362', '480', '440'], ['510', '236', '363', '364', '362', '480', '50', '450'], ['510', '236', '363', '364', '362', '520', '476', '444'], ['510', '236', '363', '364', '362', '520', '476', '477', '478'], ['510', '236', '363', '364', '362', '520', '534', '476', '444'], ['510', '236', '363', '364', '362', '520', '534', '476', '477', '478'], ['510', '236', '363', '364', '362', '534', '476', '444'], ['510', '236', '363', '364', '362', '534', '476', '477', '478'], ['510', '236', '363', '364', '362', '534', '520', '476', '444'], ['510', '236', '363', '364', '362', '534', '520', '476', '477', '478'], ['510', '236', '363', '364', '362', '734', '738'], ['510', '236', '363', '364', '352', '354', '347'], ['510', '236', '363', '364', '352', '346', '354', '347'], ['510', '236', '363', '364', '352', '346', '365', '354', '347'], ['510', '236', '363', '364', '352', '357', '354', '347'], ['510', '236', '419'], ['510', '236', '375'], ['510', '236', '140'], ['510', '236', '428'], ['510', '236', '412'], ['510', '236', '373'], ['510', '430', '433'], ['510', '430', '428'], ['506', '507'], ['586', '711'], ['586', '705'], ['586', '712'], ['604', '608'], ['606', '599', '607'], ['613', '610', '615'], ['613', '610', '609'], ['612', '591'], ['612', '610', '615'], ['612', '610', '609'], ['611', '610', '615'], ['611', '610', '609'], ['611', '591'], ['614', '610', '615'], ['614', '610', '609'], ['597', '702'], ['597', '703'], ['595', '598'], ['576', '242', '243', '240'], ['577', '242', '243', '240'], ['578', '243', '240'], ['575', '450'], ['575', '242', '243', '240'], ['575', '241', '240'], ['635', '253'], ['635', '320', '254', '253'], ['635', '320', '188'], ['635', '353', '369'], ['635', '353', '358', '253'], ['635', '353', '212', '197'], ['505', '500', '501', '494'], ['505', '500', '501', '497'], ['505', '500', '503', '83'], ['505', '500', '503', '211'], ['505', '500', '503', '109'], ['505', '500', '503', '132'], ['505', '500', '503', '718'], ['505', '500', '503', '730'], ['505', '500', '502', '495', '496'], ['505', '500', '502', '495', '491'], ['505', '500', '502', '499', '476', '444'], ['505', '500', '502', '499', '476', '477', '478'], ['505', '500', '502', '499', '520', '476', '444'], ['505', '500', '502', '499', '520', '476', '477', '478'], ['505', '500', '502', '499', '520', '534', '476', '444'], ['505', '500', '502', '499', '520', '534', '476', '477', '478'], ['505', '500', '502', '499', '534', '476', '444'], ['505', '500', '502', '499', '534', '476', '477', '478'], ['505', '500', '502', '499', '534', '520', '476', '444'], ['505', '500', '502', '499', '534', '520', '476', '477', '478'], ['505', '500', '502', '499', '496'], ['492', '83'], ['492', '109'], ['492', '88'], ['492', '114'], ['492', '480', '476', '444'], ['492', '480', '476', '477', '478'], ['492', '480', '482', '483'], ['492', '480', '440'], ['492', '480', '50', '450'], ['492', '132'], ['492', '718'], ['492', '479', '475'], ['492', '479', '474', '483'], ['492', '479', '474', '242', '243', '240'], ['492', '479', '474', '50', '450'], ['492', '479', '474', '458', '460'], ['492', '730'], ['492', '734', '738'], ['493', '490']]}
